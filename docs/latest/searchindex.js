Search.setIndex({"docnames": ["analytical_engine/builtin_algorithms", "analytical_engine/customized_algorithms", "analytical_engine/deployment", "analytical_engine/design_of_gae", "analytical_engine/dev_and_test", "analytical_engine/faqs", "analytical_engine/flash", "analytical_engine/getting_started", "analytical_engine/guide_and_examples", "analytical_engine/ingress", "analytical_engine/key_concepts", "analytical_engine/networkx_compatibility", "analytical_engine/overview_and_architecture", "analytical_engine/performance_tuning", "analytical_engine/programming_model_pie", "analytical_engine/tutorial_dev_algo_cpp_flash", "analytical_engine/tutorial_dev_algo_cpp_pie", "analytical_engine/tutorial_dev_algo_java", "analytical_engine/tutorial_dev_algo_python", "analytical_engine/tutorial_networkx_algorithms", "analytical_engine/tutorial_networkx_operations", "analytical_engine/tutorial_run_builtin_algo", "analytical_engine/tutorial_run_giraph_apps", "analytical_engine/tutorial_run_graphx_apps", "analytical_engine/vertex_centric_models", "contact_us", "deploy_as_job_for_analytical_tasks", "deploy_as_service_with_groot", "deploy_graphscope_on_clouds", "deploy_graphscope_on_local", "deploy_graphscope_on_self_managed_k8s", "deploy_graphscope_with_helm", "design_of_gae", "design_of_gie", "design_of_gle", "development/code_style_guide", "development/dev_guide", "development/how_to_contribute", "development/how_to_submit_pr", "development/how_to_test", "frag_intro", "frequently_asked_questions", "getting_started_gie", "getting_started_gle", "graph_workloads", "graphscope_for_data_scientists", "graphscope_positioning", "how_to_load_graphs", "how_to_report_bugs", "index", "java_tutorials", "key_features", "overview/design_of_graphscope", "overview/getting_started", "overview/glossary", "overview/graph_analytics_workloads", "overview/graph_interactive_workloads", "overview/graph_learning_workloads", "performance_and_benchmark", "python_tutorials", "reference/analytical_engine_index", "reference/app", "reference/context", "reference/cython_sdk", "reference/gae_java/about", "reference/gae_java/index", "reference/generated/graphscope.Vertex", "reference/generated/graphscope.declare", "reference/generated/graphscope.framework.app.load_app", "reference/generated/graphscope.framework.dag_utils.add_column", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic", "reference/generated/graphscope.framework.dag_utils.bind_app", "reference/generated/graphscope.framework.dag_utils.clear_edges", "reference/generated/graphscope.framework.dag_utils.clear_graph", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe", "reference/generated/graphscope.framework.dag_utils.context_to_numpy", "reference/generated/graphscope.framework.dag_utils.copy_graph", "reference/generated/graphscope.framework.dag_utils.create_app", "reference/generated/graphscope.framework.dag_utils.create_graph", "reference/generated/graphscope.framework.dag_utils.create_graph_view", "reference/generated/graphscope.framework.dag_utils.create_loader", "reference/generated/graphscope.framework.dag_utils.create_subgraph", "reference/generated/graphscope.framework.dag_utils.create_unload_op", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result", "reference/generated/graphscope.framework.dag_utils.get_context_data", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy", "reference/generated/graphscope.framework.dag_utils.gremlin_query", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph", "reference/generated/graphscope.framework.dag_utils.modify_edges", "reference/generated/graphscope.framework.dag_utils.modify_vertices", "reference/generated/graphscope.framework.dag_utils.output", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph", "reference/generated/graphscope.framework.dag_utils.project_to_simple", "reference/generated/graphscope.framework.dag_utils.report_graph", "reference/generated/graphscope.framework.dag_utils.run_app", "reference/generated/graphscope.framework.dag_utils.to_data_sink", "reference/generated/graphscope.framework.dag_utils.to_directed", "reference/generated/graphscope.framework.dag_utils.to_undirected", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor", "reference/generated/graphscope.framework.dag_utils.unload_app", "reference/generated/graphscope.framework.dag_utils.unload_context", "reference/generated/graphscope.framework.dag_utils.unload_graph", "reference/generated/graphscope.framework.operation.Operation.__init__", "reference/generated/graphscope.framework.operation.Operation.as_op_def", "reference/generated/graphscope.framework.operation.Operation.eval", "reference/generated/graphscope.framework.operation.Operation.evaluated", "reference/generated/graphscope.framework.operation.Operation.key", "reference/generated/graphscope.framework.operation.Operation.signature", "reference/generated/graphscope.g", "reference/generated/graphscope.get_default_session", "reference/generated/graphscope.get_option", "reference/generated/graphscope.graphlearn", "reference/generated/graphscope.gremlin", "reference/generated/graphscope.has_default_session", "reference/generated/graphscope.session", "reference/generated/graphscope.set_option", "reference/gnn_engine/algo_en", "reference/gnn_engine/data_loader_en", "reference/gnn_engine/graph_object_en", "reference/gnn_engine/graph_query_en", "reference/gnn_engine/graph_sampling_en", "reference/gnn_engine/graph_traverse_en", "reference/gnn_engine/gsl_en", "reference/gnn_engine/install_en", "reference/gnn_engine/model_programming_en", "reference/gnn_engine/negative_sampling_en", "reference/gnn_engine/operator", "reference/gnn_engine/other_source", "reference/gnn_engine/quick_start_en", "reference/gnn_engine/system_config", "reference/graph", "reference/interactive", "reference/learning", "reference/networkx/builtin", "reference/networkx/functions", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle", "reference/networkx/generated/graphscope.nx.classes.function.add_path", "reference/networkx/generated/graphscope.nx.classes.function.add_star", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy", "reference/networkx/generated/graphscope.nx.classes.function.degree", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram", "reference/networkx/generated/graphscope.nx.classes.function.density", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.edges", "reference/networkx/generated/graphscope.nx.classes.function.freeze", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph", "reference/networkx/generated/graphscope.nx.classes.function.info", "reference/networkx/generated/graphscope.nx.classes.function.is_directed", "reference/networkx/generated/graphscope.nx.classes.function.is_empty", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted", "reference/networkx/generated/graphscope.nx.classes.function.neighbors", "reference/networkx/generated/graphscope.nx.classes.function.nodes", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.non_edges", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges", "reference/networkx/generated/graphscope.nx.classes.function.subgraph", "reference/networkx/generated/graphscope.nx.classes.function.to_directed", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_graph", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph", "reference/networkx/generators", "reference/networkx/graphs", "reference/networkx/index", "reference/networkx/io", "reference/networkx/transformation", "reference/operation", "reference/python_index", "reference/selector", "reference/session", "resources_estimator", "storage_engine/getting_started", "storage_engine/grin", "storage_engine/groot", "supported_gremlin_steps", "tutorial/builtin", "tutorial/scaling", "user_guide_and_examples_of_gae", "user_guide_and_examples_of_gie", "user_guide_and_examples_of_gle", "utilities/bulk_loader", "utilities/error_codes", "utilities/gs", "utilities/how_to_find_logs", "utilities/monitoring", "zh/analytics_engine", "zh/deployment", "zh/developer_guide", "zh/frequently_asked_questions", "zh/getting_started", "zh/graph_transformation", "zh/index", "zh/installation", "zh/interactive_engine", "zh/learning_engine", "zh/loading_graph", "zh/tutorials"], "filenames": ["analytical_engine/builtin_algorithms.md", "analytical_engine/customized_algorithms.md", "analytical_engine/deployment.md", "analytical_engine/design_of_gae.md", "analytical_engine/dev_and_test.md", "analytical_engine/faqs.md", "analytical_engine/flash.md", "analytical_engine/getting_started.md", "analytical_engine/guide_and_examples.md", "analytical_engine/ingress.md", "analytical_engine/key_concepts.rst", "analytical_engine/networkx_compatibility.md", "analytical_engine/overview_and_architecture.md", "analytical_engine/performance_tuning.md", "analytical_engine/programming_model_pie.md", "analytical_engine/tutorial_dev_algo_cpp_flash.md", "analytical_engine/tutorial_dev_algo_cpp_pie.md", "analytical_engine/tutorial_dev_algo_java.md", "analytical_engine/tutorial_dev_algo_python.rst", "analytical_engine/tutorial_networkx_algorithms.md", "analytical_engine/tutorial_networkx_operations.md", "analytical_engine/tutorial_run_builtin_algo.md", "analytical_engine/tutorial_run_giraph_apps.md", "analytical_engine/tutorial_run_graphx_apps.md", "analytical_engine/vertex_centric_models.md", "contact_us.md", "deploy_as_job_for_analytical_tasks.md", "deploy_as_service_with_groot.md", "deploy_graphscope_on_clouds.md", "deploy_graphscope_on_local.md", "deploy_graphscope_on_self_managed_k8s.md", "deploy_graphscope_with_helm.md", "design_of_gae.md", "design_of_gie.md", "design_of_gle.md", "development/code_style_guide.md", "development/dev_guide.md", "development/how_to_contribute.md", "development/how_to_submit_pr.md", "development/how_to_test.md", "frag_intro.md", "frequently_asked_questions.rst", "getting_started_gie.md", "getting_started_gle.md", "graph_workloads.md", "graphscope_for_data_scientists.md", "graphscope_positioning.md", "how_to_load_graphs.md", "how_to_report_bugs.md", "index.rst", "java_tutorials.md", "key_features.md", "overview/design_of_graphscope.md", "overview/getting_started.md", "overview/glossary.md", "overview/graph_analytics_workloads.md", "overview/graph_interactive_workloads.md", "overview/graph_learning_workloads.md", "performance_and_benchmark.md", "python_tutorials.md", "reference/analytical_engine_index.rst", "reference/app.rst", "reference/context.rst", "reference/cython_sdk.rst", "reference/gae_java/about.rst", "reference/gae_java/index.rst", "reference/generated/graphscope.Vertex.rst", "reference/generated/graphscope.declare.rst", "reference/generated/graphscope.framework.app.load_app.rst", "reference/generated/graphscope.framework.dag_utils.add_column.rst", "reference/generated/graphscope.framework.dag_utils.add_labels_to_graph.rst", "reference/generated/graphscope.framework.dag_utils.arrow_to_dynamic.rst", "reference/generated/graphscope.framework.dag_utils.bind_app.rst", "reference/generated/graphscope.framework.dag_utils.clear_edges.rst", "reference/generated/graphscope.framework.dag_utils.clear_graph.rst", "reference/generated/graphscope.framework.dag_utils.context_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.context_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.copy_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_app.rst", "reference/generated/graphscope.framework.dag_utils.create_graph.rst", "reference/generated/graphscope.framework.dag_utils.create_graph_view.rst", "reference/generated/graphscope.framework.dag_utils.create_loader.rst", "reference/generated/graphscope.framework.dag_utils.create_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.create_unload_op.rst", "reference/generated/graphscope.framework.dag_utils.dynamic_to_arrow.rst", "reference/generated/graphscope.framework.dag_utils.fetch_gremlin_result.rst", "reference/generated/graphscope.framework.dag_utils.get_context_data.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.graph_to_numpy.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_query.rst", "reference/generated/graphscope.framework.dag_utils.gremlin_to_subgraph.rst", "reference/generated/graphscope.framework.dag_utils.modify_edges.rst", "reference/generated/graphscope.framework.dag_utils.modify_vertices.rst", "reference/generated/graphscope.framework.dag_utils.output.rst", "reference/generated/graphscope.framework.dag_utils.project_arrow_property_graph.rst", "reference/generated/graphscope.framework.dag_utils.project_to_simple.rst", "reference/generated/graphscope.framework.dag_utils.report_graph.rst", "reference/generated/graphscope.framework.dag_utils.run_app.rst", "reference/generated/graphscope.framework.dag_utils.to_data_sink.rst", "reference/generated/graphscope.framework.dag_utils.to_directed.rst", "reference/generated/graphscope.framework.dag_utils.to_undirected.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_dataframe.rst", "reference/generated/graphscope.framework.dag_utils.to_vineyard_tensor.rst", "reference/generated/graphscope.framework.dag_utils.unload_app.rst", "reference/generated/graphscope.framework.dag_utils.unload_context.rst", "reference/generated/graphscope.framework.dag_utils.unload_graph.rst", "reference/generated/graphscope.framework.operation.Operation.__init__.rst", "reference/generated/graphscope.framework.operation.Operation.as_op_def.rst", "reference/generated/graphscope.framework.operation.Operation.eval.rst", "reference/generated/graphscope.framework.operation.Operation.evaluated.rst", "reference/generated/graphscope.framework.operation.Operation.key.rst", "reference/generated/graphscope.framework.operation.Operation.signature.rst", "reference/generated/graphscope.g.rst", "reference/generated/graphscope.get_default_session.rst", "reference/generated/graphscope.get_option.rst", "reference/generated/graphscope.graphlearn.rst", "reference/generated/graphscope.gremlin.rst", "reference/generated/graphscope.has_default_session.rst", "reference/generated/graphscope.session.rst", "reference/generated/graphscope.set_option.rst", "reference/gnn_engine/algo_en.rst", "reference/gnn_engine/data_loader_en.rst", "reference/gnn_engine/graph_object_en.rst", "reference/gnn_engine/graph_query_en.rst", "reference/gnn_engine/graph_sampling_en.rst", "reference/gnn_engine/graph_traverse_en.rst", "reference/gnn_engine/gsl_en.rst", "reference/gnn_engine/install_en.rst", "reference/gnn_engine/model_programming_en.rst", "reference/gnn_engine/negative_sampling_en.rst", "reference/gnn_engine/operator.rst", "reference/gnn_engine/other_source.rst", "reference/gnn_engine/quick_start_en.rst", "reference/gnn_engine/system_config.rst", "reference/graph.rst", "reference/interactive.rst", "reference/learning.rst", "reference/networkx/builtin.rst", "reference/networkx/functions.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_cycle.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_path.rst", "reference/networkx/generated/graphscope.nx.classes.function.add_star.rst", "reference/networkx/generated/graphscope.nx.classes.function.all_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.common_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.create_empty_copy.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree.rst", "reference/networkx/generated/graphscope.nx.classes.function.degree_histogram.rst", "reference/networkx/generated/graphscope.nx.classes.function.density.rst", "reference/networkx/generated/graphscope.nx.classes.function.edge_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.freeze.rst", "reference/networkx/generated/graphscope.nx.classes.function.induced_subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.info.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_empty.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_frozen.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_negatively_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.is_weighted.rst", "reference/networkx/generated/graphscope.nx.classes.function.neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.nodes_with_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.non_neighbors.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_nodes.rst", "reference/networkx/generated/graphscope.nx.classes.function.number_of_selfloops.rst", "reference/networkx/generated/graphscope.nx.classes.function.selfloop_edges.rst", "reference/networkx/generated/graphscope.nx.classes.function.subgraph.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_directed.rst", "reference/networkx/generated/graphscope.nx.classes.function.to_undirected.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas.rst", "reference/networkx/generated/graphscope.nx.generators.atlas.graph_atlas_g.rst", "reference/networkx/generated/graphscope.nx.generators.classic.balanced_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.barbell_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.binomial_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circulant_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.circular_ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.complete_multipartite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.empty_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.full_rary_tree.rst", "reference/networkx/generated/graphscope.nx.generators.classic.ladder_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.lollipop_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.null_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.path_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.star_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.trivial_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.turan_graph.rst", "reference/networkx/generated/graphscope.nx.generators.classic.wheel_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.LFR_benchmark_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.connected_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.gaussian_random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.planted_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.random_partition_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.relaxed_caveman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.community.ring_of_cliques.rst", "reference/networkx/generated/graphscope.nx.generators.community.stochastic_block_model.rst", "reference/networkx/generated/graphscope.nx.generators.community.windmill_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.degree_sequence_tree.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_configuration_model.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.expected_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.havel_hakimi_graph.rst", "reference/networkx/generated/graphscope.nx.generators.degree_seq.random_degree_sequence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gn_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnc_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.gnr_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.random_k_out_graph.rst", "reference/networkx/generated/graphscope.nx.generators.directed.scale_free_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.duplication_divergence_graph.rst", "reference/networkx/generated/graphscope.nx.generators.duplication.partial_duplication_graph.rst", "reference/networkx/generated/graphscope.nx.generators.ego.ego_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.chordal_cycle_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.margulis_gabber_galil_graph.rst", "reference/networkx/generated/graphscope.nx.generators.expanders.paley_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.geographical_threshold_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.soft_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.thresholded_random_geometric_graph.rst", "reference/networkx/generated/graphscope.nx.generators.geometric.waxman_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hkn_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.harary_graph.hnm_harary_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.general_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.k_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.intersection.uniform_random_intersection_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree.rst", "reference/networkx/generated/graphscope.nx.generators.joint_degree_seq.joint_degree_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielski_graph.rst", "reference/networkx/generated/graphscope.nx.generators.mycielski.mycielskian.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees.rst", "reference/networkx/generated/graphscope.nx.generators.small.LCF_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.bull_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.chvatal_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.cubical_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.desargues_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.diamond_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.dodecahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.frucht_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.heawood_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.house_x_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.icosahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.krackhardt_kite_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.make_small_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.moebius_kantor_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.octahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.pappus_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.petersen_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.sedgewick_maze_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tetrahedral_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_cube_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.truncated_tetrahedron_graph.rst", "reference/networkx/generated/graphscope.nx.generators.small.tutte_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.davis_southern_women_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.florentine_families_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.karate_club_graph.rst", "reference/networkx/generated/graphscope.nx.generators.social.les_miserables_graph.rst", "reference/networkx/generated/graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge.rst", "reference/networkx/generated/graphscope.nx.generators.sudoku.sudoku_graph.rst", "reference/networkx/generated/graphscope.nx.generators.trees.prefix_tree.rst", "reference/networkx/generated/graphscope.nx.generators.trees.random_tree.rst", "reference/networkx/generated/graphscope.nx.generators.triads.triad_graph.rst", "reference/networkx/generated/networkx.generators.internet_as_graphs.random_internet_as_graph.rst", "reference/networkx/generated/networkx.generators.stochastic.stochastic_graph.rst", "reference/networkx/generators.rst", "reference/networkx/graphs.rst", "reference/networkx/index.rst", "reference/networkx/io.rst", "reference/networkx/transformation.rst", "reference/operation.rst", "reference/python_index.rst", "reference/selector.rst", "reference/session.rst", "resources_estimator.md", "storage_engine/getting_started.md", "storage_engine/grin.md", "storage_engine/groot.md", "supported_gremlin_steps.md", "tutorial/builtin.rst", "tutorial/scaling.rst", "user_guide_and_examples_of_gae.md", "user_guide_and_examples_of_gie.md", "user_guide_and_examples_of_gle.md", "utilities/bulk_loader.md", "utilities/error_codes.md", "utilities/gs.md", "utilities/how_to_find_logs.md", "utilities/monitoring.md", "zh/analytics_engine.rst", "zh/deployment.rst", "zh/developer_guide.rst", "zh/frequently_asked_questions.rst", "zh/getting_started.rst", "zh/graph_transformation.rst", "zh/index.rst", "zh/installation.rst", "zh/interactive_engine.rst", "zh/learning_engine.rst", "zh/loading_graph.rst", "zh/tutorials.rst"], "titles": ["Built-in Algorithms", "Customized Algorithms", "Deployment for GAE", "Design of Analytical Engine", "Dev and Test", "FAQs", "Programming Model: FLASH", "Getting Started", "Guide and Examples", "Ingress: Incrementalize Graph Algorithms", "Key Concepts", "NetworkX Compatibility", "Overview and Architecture", "Performance Tuning", "Programming Model: PIE", "Tutorial: Develop your Algorithm in C++ with FLASH Model", "Tutorial: Develop your Algorithm in C++ with PIE Model", "Tutorial: Develop your Algorithm in Java with PIE Model", "Tutorial: Develop algorithms in Python", "Tutorial: Graph Algorithms with NetowrkX APIs", "Tutorial: Graph Operations with NetowrkX APIs", "Tutorial: Running Builtin Algorithms", "Tutorial: Run Giraph Applications on GraphScope", "Tutorial: Run GraphX Applications on GraphScope", "Vertex-Centric Model", "Contact Us", "Deploy as K8s <code class=\"docutils literal notranslate\"><span class=\"pre\">Job</span></code> for analytical tasks", "Deploy as Service with Groot", "Deploy GraphScope on Clouds", "Deploy GraphScope on Local", "Deploy GraphScope on Self-managed K8s", "Deploy GraphScope with <code class=\"docutils literal notranslate\"><span class=\"pre\">helm</span></code>", "Design of GAE", "Design of GIE", "Design of GLE", "Code Style Guide", "Development Guide", "How to Contribute", "How to Submit Pull-requests", "How to Test", "Introduction to ArrowFragment", "Frequently Asked Questions", "Getting Started for GIE", "Getting Started for GLE", "Graph Workloads", "GrpahScope for Data Scientists", "The Product Positioning of GraphScope", "How to Load Graphs", "How to Report Bugs", "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba", "Tutorials for Java Users", "Key Features", "Design of GraphScope", "Getting Started", "Glossary", "Graph Analytics Workloads", "Graph Interactive Workloads", "Graph Learning Workloads", "Performance and Benchmark", "Tutorials for Python Users", "Analytical Engine API Reference", "Analytical App", "Context", "Cython SDK API", "About Grape JDK", "Java Reference (javadoc)", "graphscope.Vertex", "graphscope.declare", "graphscope.framework.app.load_app", "graphscope.framework.dag_utils.add_column", "graphscope.framework.dag_utils.add_labels_to_graph", "graphscope.framework.dag_utils.arrow_to_dynamic", "graphscope.framework.dag_utils.bind_app", "graphscope.framework.dag_utils.clear_edges", "graphscope.framework.dag_utils.clear_graph", "graphscope.framework.dag_utils.context_to_dataframe", "graphscope.framework.dag_utils.context_to_numpy", "graphscope.framework.dag_utils.copy_graph", "graphscope.framework.dag_utils.create_app", "graphscope.framework.dag_utils.create_graph", "graphscope.framework.dag_utils.create_graph_view", "graphscope.framework.dag_utils.create_loader", "graphscope.framework.dag_utils.create_subgraph", "graphscope.framework.dag_utils.create_unload_op", "graphscope.framework.dag_utils.dynamic_to_arrow", "graphscope.framework.dag_utils.fetch_gremlin_result", "graphscope.framework.dag_utils.get_context_data", "graphscope.framework.dag_utils.graph_to_dataframe", "graphscope.framework.dag_utils.graph_to_numpy", "graphscope.framework.dag_utils.gremlin_query", "graphscope.framework.dag_utils.gremlin_to_subgraph", "graphscope.framework.dag_utils.modify_edges", "graphscope.framework.dag_utils.modify_vertices", "graphscope.framework.dag_utils.output", "graphscope.framework.dag_utils.project_arrow_property_graph", "graphscope.framework.dag_utils.project_to_simple", "graphscope.framework.dag_utils.report_graph", "graphscope.framework.dag_utils.run_app", "graphscope.framework.dag_utils.to_data_sink", "graphscope.framework.dag_utils.to_directed", "graphscope.framework.dag_utils.to_undirected", "graphscope.framework.dag_utils.to_vineyard_dataframe", "graphscope.framework.dag_utils.to_vineyard_tensor", "graphscope.framework.dag_utils.unload_app", "graphscope.framework.dag_utils.unload_context", "graphscope.framework.dag_utils.unload_graph", "graphscope.framework.operation.Operation.__init__", "graphscope.framework.operation.Operation.as_op_def", "graphscope.framework.operation.Operation.eval", "graphscope.framework.operation.Operation.evaluated", "graphscope.framework.operation.Operation.key", "graphscope.framework.operation.Operation.signature", "graphscope.g", "graphscope.get_default_session", "graphscope.get_option", "graphscope.graphlearn", "graphscope.gremlin", "graphscope.has_default_session", "graphscope.session", "graphscope.set_option", "Developing Your Own Model", "Data Source", "Graph Object", "Graph Query", "Graph Sampling", "Graph Traversal", "Graph Sampling Language\uff08GSL)", "Install from pip", "Graph Learning Model", "Negative Sampling", "Defining Your Own Operator", "Integrating Other Data Sources", "Quick Start", "System configuration", "Graph", "Interactive Query", "Graph Learning", "Builtin algorithms", "Functions", "graphscope.nx.classes.function.add_cycle", "graphscope.nx.classes.function.add_path", "graphscope.nx.classes.function.add_star", "graphscope.nx.classes.function.all_neighbors", "graphscope.nx.classes.function.common_neighbors", "graphscope.nx.classes.function.create_empty_copy", "graphscope.nx.classes.function.degree", "graphscope.nx.classes.function.degree_histogram", "graphscope.nx.classes.function.density", "graphscope.nx.classes.function.edge_subgraph", "graphscope.nx.classes.function.edges", "graphscope.nx.classes.function.freeze", "graphscope.nx.classes.function.induced_subgraph", "graphscope.nx.classes.function.info", "graphscope.nx.classes.function.is_directed", "graphscope.nx.classes.function.is_empty", "graphscope.nx.classes.function.is_frozen", "graphscope.nx.classes.function.is_negatively_weighted", "graphscope.nx.classes.function.is_weighted", "graphscope.nx.classes.function.neighbors", "graphscope.nx.classes.function.nodes", "graphscope.nx.classes.function.nodes_with_selfloops", "graphscope.nx.classes.function.non_edges", "graphscope.nx.classes.function.non_neighbors", "graphscope.nx.classes.function.number_of_edges", "graphscope.nx.classes.function.number_of_nodes", "graphscope.nx.classes.function.number_of_selfloops", "graphscope.nx.classes.function.selfloop_edges", "graphscope.nx.classes.function.subgraph", "graphscope.nx.classes.function.to_directed", "graphscope.nx.classes.function.to_undirected", "graphscope.nx.generators.atlas.graph_atlas", "graphscope.nx.generators.atlas.graph_atlas_g", "graphscope.nx.generators.classic.balanced_tree", "graphscope.nx.generators.classic.barbell_graph", "graphscope.nx.generators.classic.binomial_tree", "graphscope.nx.generators.classic.circulant_graph", "graphscope.nx.generators.classic.circular_ladder_graph", "graphscope.nx.generators.classic.complete_graph", "graphscope.nx.generators.classic.complete_multipartite_graph", "graphscope.nx.generators.classic.cycle_graph", "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph", "graphscope.nx.generators.classic.empty_graph", "graphscope.nx.generators.classic.full_rary_tree", "graphscope.nx.generators.classic.ladder_graph", "graphscope.nx.generators.classic.lollipop_graph", "graphscope.nx.generators.classic.null_graph", "graphscope.nx.generators.classic.path_graph", "graphscope.nx.generators.classic.star_graph", "graphscope.nx.generators.classic.trivial_graph", "graphscope.nx.generators.classic.turan_graph", "graphscope.nx.generators.classic.wheel_graph", "graphscope.nx.generators.community.LFR_benchmark_graph", "graphscope.nx.generators.community.caveman_graph", "graphscope.nx.generators.community.connected_caveman_graph", "graphscope.nx.generators.community.gaussian_random_partition_graph", "graphscope.nx.generators.community.planted_partition_graph", "graphscope.nx.generators.community.random_partition_graph", "graphscope.nx.generators.community.relaxed_caveman_graph", "graphscope.nx.generators.community.ring_of_cliques", "graphscope.nx.generators.community.stochastic_block_model", "graphscope.nx.generators.community.windmill_graph", "graphscope.nx.generators.degree_seq.configuration_model", "graphscope.nx.generators.degree_seq.degree_sequence_tree", "graphscope.nx.generators.degree_seq.directed_configuration_model", "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph", "graphscope.nx.generators.degree_seq.expected_degree_graph", "graphscope.nx.generators.degree_seq.havel_hakimi_graph", "graphscope.nx.generators.degree_seq.random_degree_sequence_graph", "graphscope.nx.generators.directed.gn_graph", "graphscope.nx.generators.directed.gnc_graph", "graphscope.nx.generators.directed.gnr_graph", "graphscope.nx.generators.directed.random_k_out_graph", "graphscope.nx.generators.directed.scale_free_graph", "graphscope.nx.generators.duplication.duplication_divergence_graph", "graphscope.nx.generators.duplication.partial_duplication_graph", "graphscope.nx.generators.ego.ego_graph", "graphscope.nx.generators.expanders.chordal_cycle_graph", "graphscope.nx.generators.expanders.margulis_gabber_galil_graph", "graphscope.nx.generators.expanders.paley_graph", "graphscope.nx.generators.geometric.geographical_threshold_graph", "graphscope.nx.generators.geometric.random_geometric_graph", "graphscope.nx.generators.geometric.soft_random_geometric_graph", "graphscope.nx.generators.geometric.thresholded_random_geometric_graph", "graphscope.nx.generators.geometric.waxman_graph", "graphscope.nx.generators.harary_graph.hkn_harary_graph", "graphscope.nx.generators.harary_graph.hnm_harary_graph", "graphscope.nx.generators.intersection.general_random_intersection_graph", "graphscope.nx.generators.intersection.k_random_intersection_graph", "graphscope.nx.generators.intersection.uniform_random_intersection_graph", "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph", "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree", "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree", "graphscope.nx.generators.joint_degree_seq.joint_degree_graph", "graphscope.nx.generators.mycielski.mycielski_graph", "graphscope.nx.generators.mycielski.mycielskian", "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees", "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees", "graphscope.nx.generators.small.LCF_graph", "graphscope.nx.generators.small.bull_graph", "graphscope.nx.generators.small.chvatal_graph", "graphscope.nx.generators.small.cubical_graph", "graphscope.nx.generators.small.desargues_graph", "graphscope.nx.generators.small.diamond_graph", "graphscope.nx.generators.small.dodecahedral_graph", "graphscope.nx.generators.small.frucht_graph", "graphscope.nx.generators.small.heawood_graph", "graphscope.nx.generators.small.house_graph", "graphscope.nx.generators.small.house_x_graph", "graphscope.nx.generators.small.icosahedral_graph", "graphscope.nx.generators.small.krackhardt_kite_graph", "graphscope.nx.generators.small.make_small_graph", "graphscope.nx.generators.small.moebius_kantor_graph", "graphscope.nx.generators.small.octahedral_graph", "graphscope.nx.generators.small.pappus_graph", "graphscope.nx.generators.small.petersen_graph", "graphscope.nx.generators.small.sedgewick_maze_graph", "graphscope.nx.generators.small.tetrahedral_graph", "graphscope.nx.generators.small.truncated_cube_graph", "graphscope.nx.generators.small.truncated_tetrahedron_graph", "graphscope.nx.generators.small.tutte_graph", "graphscope.nx.generators.social.davis_southern_women_graph", "graphscope.nx.generators.social.florentine_families_graph", "graphscope.nx.generators.social.karate_club_graph", "graphscope.nx.generators.social.les_miserables_graph", "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge", "graphscope.nx.generators.sudoku.sudoku_graph", "graphscope.nx.generators.trees.prefix_tree", "graphscope.nx.generators.trees.random_tree", "graphscope.nx.generators.triads.triad_graph", "networkx.generators.internet_as_graphs.random_internet_as_graph", "networkx.generators.stochastic.stochastic_graph", "Graph generators", "Graph types", "NetworkX-style API", "Reading graphs", "Graph Transformation", "Operation", "Python API Reference", "Selector", "Session", "Resources Estimator", "Getting Started", "GRIN: Unified Interface", "Groot", "Tutorials for Gremlin Users", "Applications and algorithms", "Scaling and repartitioning", "User Guide and Examples of GAE", "User Guide and Examples of GIE", "User Guide and Examples of GLE", "Bulk Loader", "Error Codes", "Command-line Utility <code class=\"docutils literal notranslate\"><span class=\"pre\">gs</span></code>", "How to Find Logs", "Monitoring", "\u56fe\u5206\u6790\u5f15\u64ce", "\u90e8\u7f72", "\u5f00\u53d1\u8005\u6307\u5357", "\u5e38\u89c1\u95ee\u9898", "\u5feb\u901f\u4e0a\u624b", "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c", "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf", "\u5b89\u88c5", "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce", "\u56fe\u5b66\u4e60\u5f15\u64ce", "\u8f7d\u56fe", "\u5165\u95e8\u6559\u7a0b"], "terms": {"graphscop": [0, 1, 3, 4, 8, 11, 12, 18, 24, 26, 27, 32, 35, 37, 40, 41, 44, 50, 51, 53, 54, 56, 57, 58, 59, 61, 62, 64, 134, 135, 136, 137, 272, 274, 275, 276, 277, 278, 279, 280, 284, 285, 286, 287, 290, 295, 296, 298, 299, 300, 303, 305, 306], "anlayt": [0, 54], "engin": [0, 1, 5, 8, 17, 23, 32, 41, 45, 46, 53, 54, 55, 56, 57, 61, 64, 72, 89, 90, 115, 116, 120, 128, 134, 135, 136, 272, 278, 279, 285, 286, 298, 299], "provid": [0, 1, 4, 6, 7, 11, 12, 14, 17, 18, 20, 22, 23, 32, 36, 41, 45, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 64, 78, 120, 122, 126, 127, 128, 132, 137, 168, 169, 191, 219, 220, 221, 222, 269, 272, 274, 279, 284, 287, 295], "mani": [0, 4, 12, 14, 24, 32, 36, 41, 45, 52, 53, 55, 57, 121, 128, 175, 219, 221, 272, 287], "which": [0, 4, 11, 12, 14, 17, 19, 20, 22, 23, 24, 32, 36, 41, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 68, 71, 84, 95, 97, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 151, 176, 178, 191, 192, 193, 201, 203, 220, 221, 222, 229, 231, 232, 250, 262, 264, 266, 270, 271, 272, 274, 275, 276, 278, 279, 284, 285, 287], "enabl": [0, 17, 18, 23, 41, 46, 52, 53, 58, 60, 131, 137, 272, 279, 286, 287], "user": [0, 9, 11, 12, 14, 17, 18, 22, 23, 24, 32, 41, 46, 49, 51, 52, 53, 55, 56, 57, 60, 61, 120, 122, 123, 124, 125, 126, 127, 129, 132, 135, 272, 278, 279, 286, 299, 303], "analysi": [0, 7, 8, 11, 51, 53, 58, 59, 61, 225], "graph": [0, 3, 6, 7, 8, 10, 12, 14, 17, 18, 22, 23, 24, 41, 50, 54, 59, 60, 61, 62, 63, 69, 70, 71, 72, 73, 74, 77, 79, 80, 82, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 105, 112, 115, 116, 121, 127, 130, 131, 135, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 284, 286, 287, 295, 299, 300, 301, 303, 304, 305], "data": [0, 3, 9, 12, 14, 17, 18, 19, 20, 22, 23, 24, 32, 41, 46, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 67, 69, 75, 76, 81, 87, 88, 93, 101, 102, 120, 122, 123, 124, 125, 126, 130, 134, 144, 150, 166, 167, 182, 199, 215, 234, 264, 272, 274, 275, 278, 279, 285, 287, 290, 295, 296, 298, 299, 304], "least": [0, 52, 137, 171, 193], "effort": [0, 12, 32, 58], "The": [0, 1, 6, 7, 8, 10, 12, 14, 17, 18, 20, 22, 24, 32, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 70, 85, 89, 90, 91, 92, 95, 103, 105, 106, 113, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 142, 146, 147, 148, 151, 152, 154, 156, 157, 162, 165, 170, 171, 172, 173, 174, 175, 178, 181, 184, 187, 189, 190, 191, 193, 194, 196, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 278, 279, 284, 285, 286, 287, 295], "cover": [0, 14], "most": [0, 8, 22, 41, 46, 53, 55, 58, 62, 120, 122, 126, 128, 130, 192, 193, 217, 220, 221, 222, 284], "common": [0, 12, 46, 52, 55, 56, 57, 120, 121, 128, 129, 143, 264, 266, 272], "analyt": [0, 1, 5, 7, 8, 12, 14, 17, 18, 23, 32, 36, 41, 46, 50, 54, 56, 59, 63, 64, 67, 72, 134, 272, 277, 279, 286, 287, 295], "task": [0, 7, 14, 32, 51, 52, 53, 121, 132], "short": [0, 46, 54, 58, 152], "commun": [0, 6, 8, 12, 18, 24, 51, 52, 53, 55, 60, 61, 64, 122, 130, 223, 264, 269, 273], "detect": [0, 8, 46, 51, 52, 53, 55, 56, 61, 191, 195, 196, 197], "cluster": [0, 6, 7, 10, 12, 14, 17, 18, 19, 20, 22, 23, 32, 41, 45, 49, 51, 52, 53, 55, 56, 61, 122, 132, 137, 194, 273, 279, 295, 302], "central": [0, 6, 45, 51, 53, 57, 61, 126, 137, 249], "etc": [0, 6, 7, 45, 53, 56, 57, 58, 62, 120, 123, 124, 125, 128, 139, 151, 160, 165, 166, 272, 274], "ar": [0, 4, 8, 10, 11, 12, 14, 17, 20, 22, 23, 24, 32, 36, 41, 45, 46, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 64, 67, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 137, 146, 147, 148, 161, 162, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 190, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 205, 206, 207, 211, 215, 217, 218, 219, 220, 221, 222, 223, 227, 229, 231, 233, 234, 237, 255, 264, 265, 266, 267, 268, 272, 275, 278, 279, 284, 286, 305], "implement": [0, 1, 6, 8, 12, 18, 22, 24, 32, 45, 46, 51, 52, 55, 56, 57, 60, 61, 64, 120, 122, 124, 125, 126, 128, 131, 132, 134, 135, 137, 213, 214, 218, 219, 221, 223, 224, 225, 266, 267, 275, 284, 295], "pie": [0, 1, 3, 8, 12, 32, 49, 50, 51, 55, 64, 67, 277, 287, 299, 301], "optim": [0, 9, 12, 14, 32, 51, 52, 53, 55, 56, 57, 58, 61, 120, 132, 299], "best": [0, 46, 52, 56, 58, 61, 272, 295], "perform": [0, 3, 6, 12, 14, 17, 22, 23, 24, 46, 49, 50, 52, 55, 57, 62, 122, 126, 128, 229, 234, 264, 276, 278, 284, 285, 287], "can": [0, 1, 4, 8, 12, 14, 17, 18, 19, 20, 22, 23, 24, 32, 36, 41, 45, 46, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 64, 68, 70, 85, 96, 97, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 146, 147, 150, 154, 175, 178, 191, 192, 193, 200, 201, 203, 219, 220, 221, 222, 229, 233, 234, 241, 243, 245, 250, 253, 258, 259, 264, 266, 272, 275, 276, 278, 279, 284, 285, 287, 295], "us": [0, 3, 4, 7, 8, 10, 11, 12, 14, 17, 19, 22, 23, 24, 36, 41, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 69, 70, 96, 97, 106, 111, 120, 121, 122, 123, 124, 126, 128, 131, 133, 134, 135, 136, 137, 156, 157, 166, 178, 181, 185, 191, 192, 193, 199, 201, 205, 206, 208, 210, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 229, 233, 237, 250, 255, 264, 266, 269, 270, 272, 274, 275, 277, 279, 284, 285, 286, 287, 295, 299, 305], "them": [0, 1, 8, 12, 14, 17, 24, 32, 36, 41, 45, 46, 52, 53, 55, 58, 59, 69, 120, 123, 132, 177, 264, 278, 284, 295], "out": [0, 12, 32, 46, 53, 55, 56, 61, 63, 120, 123, 124, 126, 134, 137, 194, 203, 204, 211, 212, 215, 229, 230, 266, 270, 272, 286, 299, 303], "box": [0, 265], "manner": [0, 17, 18, 36, 53, 56], "here": [0, 4, 10, 17, 18, 20, 23, 36, 41, 51, 56, 58, 61, 121, 122, 126, 129, 131, 132, 134, 137, 191, 203, 218, 219, 221, 230, 250, 272, 275, 284, 299], "full": [0, 12, 17, 18, 22, 32, 46, 51, 52, 57, 61, 120, 123, 124, 126, 182, 287, 295, 304], "list": [0, 19, 20, 32, 51, 54, 56, 59, 61, 63, 81, 82, 91, 92, 106, 121, 124, 126, 134, 137, 146, 148, 151, 158, 160, 166, 167, 170, 171, 175, 177, 178, 196, 199, 201, 203, 204, 205, 206, 207, 219, 223, 226, 229, 230, 235, 237, 250, 266, 272, 273, 275, 279, 284, 286, 300, 303], "support": [0, 3, 4, 9, 12, 17, 18, 20, 22, 24, 32, 41, 45, 46, 50, 52, 54, 55, 56, 57, 61, 62, 64, 70, 120, 121, 122, 124, 125, 126, 128, 129, 131, 134, 137, 272, 275, 278, 279, 286, 287, 298], "pagerank": [0, 8, 17, 22, 32, 45, 52, 55, 58, 61, 62, 137, 275, 278, 295], "i": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 22, 23, 24, 32, 36, 37, 40, 41, 45, 46, 49, 50, 51, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 70, 96, 106, 108, 112, 113, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 166, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 278, 279, 285, 286, 287, 295, 298, 299, 303, 304, 305], "find": [0, 8, 22, 36, 41, 45, 49, 52, 55, 56, 58, 60, 68, 114, 119, 137, 142, 161, 162, 191, 279, 284], "intro": 0, "In": [1, 8, 10, 12, 14, 17, 18, 19, 20, 22, 24, 32, 41, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 137, 194, 223, 226, 229, 230, 232, 272, 275, 278, 284, 285, 287], "addtion": 1, "built": [1, 3, 4, 8, 12, 18, 20, 22, 32, 36, 41, 49, 52, 53, 57, 58, 59, 120, 134, 208, 209, 210, 287], "also": [1, 10, 12, 17, 19, 20, 22, 23, 32, 41, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 120, 121, 122, 124, 127, 128, 129, 132, 134, 135, 137, 172, 191, 216, 218, 219, 223, 242, 247, 252, 264, 266, 270, 272, 275, 278, 279, 286, 287, 295], "wai": [1, 10, 14, 20, 41, 45, 51, 52, 55, 56, 57, 124, 126, 128, 130, 137, 191, 257, 264, 266, 272, 279], "run": [1, 3, 4, 8, 12, 19, 20, 24, 36, 41, 46, 49, 50, 52, 53, 59, 60, 61, 62, 97, 108, 126, 130, 131, 132, 134, 135, 224, 225, 275, 276, 279, 284, 285, 286, 287, 295, 297, 302], "your": [1, 3, 4, 7, 8, 12, 20, 23, 24, 36, 41, 46, 49, 53, 59, 61, 64, 122, 127, 131, 132, 181, 201, 272, 279, 295, 303], "own": [1, 4, 8, 12, 24, 32, 49, 50, 51, 52, 55, 59, 64, 111, 124, 127, 132, 191, 201, 279, 287], "design": [1, 7, 12, 18, 45, 46, 49, 54, 56, 57, 60, 120, 122, 128, 137, 272], "extens": [1, 52, 121], "henc": [1, 10, 146, 269, 272], "you": [1, 4, 7, 8, 17, 18, 19, 20, 22, 23, 24, 36, 37, 41, 46, 53, 59, 61, 64, 114, 119, 121, 122, 125, 126, 127, 130, 131, 134, 137, 150, 181, 191, 201, 203, 215, 220, 221, 222, 272, 279, 284, 285, 295, 305], "flash": [1, 3, 8, 12, 49, 52], "model": [1, 3, 8, 18, 45, 46, 49, 50, 51, 52, 53, 55, 56, 64, 122, 124, 126, 127, 191, 195, 199, 201, 203, 205, 211, 213, 214, 219, 220, 221, 222, 223, 227, 228, 262, 269, 279, 287, 299], "java": [1, 3, 4, 8, 12, 32, 46, 49, 51, 55, 61, 64, 68, 295], "c": [1, 3, 8, 12, 17, 18, 32, 49, 51, 52, 55, 60, 61, 62, 64, 67, 79, 93, 122, 126, 130, 132, 137, 170, 171, 181, 201, 212, 225, 226, 229, 230, 264, 266, 268, 269, 272, 284, 285, 295, 297, 303], "python": [1, 3, 7, 8, 12, 17, 20, 22, 23, 32, 41, 45, 46, 49, 52, 53, 55, 56, 60, 61, 67, 120, 123, 127, 130, 132, 135, 136, 272, 274, 275, 295, 296, 298, 299, 301, 302, 303, 305], "handl": [3, 8, 12, 20, 32, 49, 51, 52, 55, 56, 57, 62, 93, 121, 133, 136, 272, 274], "variou": [3, 8, 12, 14, 20, 24, 32, 49, 51, 52, 53, 55, 81, 134, 237, 287], "algorithm": [3, 6, 7, 8, 12, 14, 20, 24, 41, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 122, 125, 126, 128, 182, 191, 194, 195, 203, 204, 205, 206, 207, 211, 212, 213, 214, 219, 224, 225, 228, 229, 231, 232, 255, 264, 269, 272, 273, 275, 277, 278, 286], "deriv": [3, 12, 32, 53, 56, 60, 62, 134, 137], "from": [3, 4, 7, 9, 10, 12, 14, 17, 18, 22, 23, 24, 32, 36, 41, 45, 46, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 68, 85, 90, 91, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 151, 170, 172, 177, 179, 181, 184, 191, 194, 198, 199, 200, 201, 203, 206, 211, 212, 214, 215, 219, 220, 221, 222, 223, 224, 231, 238, 247, 259, 264, 266, 267, 271, 272, 274, 275, 278, 279, 284, 295, 299, 300, 303, 305], "grape": [3, 22, 23, 32, 49, 50, 52, 60, 68, 285, 286, 287, 295, 301], "process": [3, 9, 12, 14, 19, 22, 23, 24, 32, 45, 49, 50, 51, 52, 54, 55, 56, 60, 70, 121, 122, 124, 126, 130, 132, 201, 203, 206, 234, 240, 272, 279, 285, 287], "system": [3, 6, 8, 9, 12, 24, 32, 41, 45, 50, 51, 52, 54, 55, 56, 58, 121, 122, 127, 130, 269, 271, 285, 287, 295, 303], "propos": [3, 12, 14, 24, 32, 46, 51, 52, 54, 55, 57, 124, 130], "sigmod": [3, 12, 14, 24, 32, 295, 301], "2017": [3, 12, 14, 32, 229, 230, 295], "further": [3, 6, 10, 14, 20, 32, 45, 53, 56, 57, 62, 122, 134, 135, 150, 284], "enhanc": [3, 54], "introduc": [3, 19, 20, 24, 46, 50, 56, 57, 120, 123, 124, 126, 128, 137, 249, 271, 284, 287], "lot": [3, 45, 50, 55, 287], "new": [3, 4, 12, 14, 17, 20, 23, 32, 52, 53, 60, 63, 69, 70, 113, 131, 134, 135, 137, 144, 150, 191, 203, 212, 214, 234, 263, 270, 272, 279, 285, 299], "featur": [3, 12, 23, 32, 46, 50, 52, 53, 56, 57, 60, 64, 120, 121, 128, 132, 134, 272, 279, 287, 299, 304], "includ": [3, 4, 6, 7, 12, 17, 20, 22, 24, 36, 45, 46, 49, 51, 52, 55, 56, 57, 58, 60, 61, 62, 122, 123, 126, 128, 134, 137, 152, 191, 199, 205, 215, 264, 271, 272, 284], "more": [3, 4, 7, 12, 17, 20, 32, 36, 41, 45, 46, 51, 52, 55, 56, 57, 60, 61, 62, 64, 120, 121, 124, 125, 126, 130, 131, 134, 137, 170, 211, 218, 219, 233, 234, 266, 272, 274, 279, 284, 286, 287], "type": [3, 12, 18, 19, 20, 32, 45, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 67, 68, 70, 71, 75, 76, 79, 80, 83, 84, 87, 88, 90, 91, 92, 93, 95, 96, 98, 101, 102, 106, 112, 115, 116, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 146, 148, 151, 152, 154, 156, 157, 160, 161, 162, 165, 166, 167, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 273, 274, 276, 277, 279, 284, 285, 296, 299, 304], "storag": [3, 41, 46, 54, 98, 122, 134], "program": [3, 17, 18, 20, 23, 24, 46, 49, 50, 51, 52, 54, 55, 57, 58, 64, 120, 125, 126, 287], "languag": [3, 12, 45, 46, 51, 52, 53, 55, 56, 64, 89, 135, 284, 287], "comput": [3, 9, 14, 17, 18, 19, 22, 23, 24, 32, 46, 51, 53, 54, 55, 56, 57, 60, 61, 63, 124, 125, 128, 130, 137, 218, 221, 222, 226, 231, 240, 263, 264, 276, 279, 284, 295], "pattern": [3, 12, 23, 46, 51, 52, 55, 61, 125, 130, 284], "better": [3, 8, 12, 20, 24, 32, 46, 50, 52, 279, 287], "integr": [3, 12, 23, 32, 46, 50, 265, 285, 287], "other": [3, 8, 10, 12, 14, 20, 23, 24, 32, 41, 45, 46, 51, 52, 55, 56, 57, 61, 63, 120, 122, 124, 126, 130, 133, 134, 135, 137, 141, 172, 174, 178, 181, 191, 200, 206, 212, 221, 222, 264, 272, 274, 275, 278, 279, 284, 286], "big": [3, 14, 50, 52, 287, 302], "overview": [3, 23, 32], "architectur": [3, 49, 61], "kei": [3, 12, 20, 49, 52, 56, 57, 61, 62, 63, 95, 96, 97, 106, 114, 123, 126, 132, 134, 137, 166, 215, 219, 220, 221, 222, 270, 272, 274, 275, 278, 284, 295, 305], "concept": [3, 49, 57, 120, 121], "vertex": [3, 6, 9, 12, 14, 17, 18, 19, 22, 32, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 67, 90, 121, 122, 123, 124, 125, 126, 129, 132, 134, 136, 137, 211, 216, 233, 234, 250, 275, 277, 284, 287, 295, 300], "centric": [3, 6, 9, 12, 14, 17, 18, 32, 49, 50, 51, 52, 54, 55, 287], "ingress": [3, 12, 49], "increment": [3, 14, 18, 20, 32, 49, 60, 287], "networkx": [3, 7, 8, 12, 20, 32, 45, 49, 51, 59, 60, 61, 96, 137, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 154, 155, 156, 157, 161, 162, 166, 167, 171, 172, 174, 175, 177, 178, 179, 182, 184, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 208, 209, 210, 212, 215, 216, 217, 218, 223, 224, 225, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 267, 272, 274, 275, 277, 301, 306], "compat": [3, 7, 12, 19, 20, 23, 32, 41, 45, 49, 51, 53, 59, 61, 128, 278, 299], "custom": [3, 7, 8, 22, 49, 51, 52, 55, 57, 120, 121, 124, 126, 128, 129, 130, 219, 221, 222, 269, 287], "tune": [3, 45, 49, 52], "tutori": [3, 8, 12, 24, 49, 51, 53, 57, 132, 221, 287], "builtin": [3, 19, 20, 49, 273, 275, 277], "oper": [3, 6, 12, 41, 45, 49, 51, 52, 56, 57, 61, 63, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 91, 92, 93, 95, 96, 99, 100, 101, 102, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 154, 233, 234, 272, 275, 277, 279, 284], "netowrkx": [3, 12, 49, 59, 272], "api": [3, 8, 18, 22, 24, 32, 45, 49, 51, 52, 57, 59, 64, 70, 120, 122, 124, 125, 126, 130, 136, 272, 295, 306], "develop": [3, 4, 8, 12, 24, 32, 45, 46, 50, 51, 52, 55, 56, 64, 124, 126, 127, 128, 130, 191], "giraph": [3, 4, 7, 8, 12, 17, 23, 24, 46, 49, 50, 287], "applic": [3, 8, 24, 32, 41, 49, 51, 55, 56, 57, 58, 60, 61, 63, 72, 124, 203, 227], "thi": [4, 7, 8, 10, 12, 14, 17, 18, 19, 20, 22, 23, 24, 26, 27, 31, 32, 35, 36, 37, 41, 45, 46, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 78, 93, 96, 111, 120, 121, 122, 124, 125, 126, 127, 128, 130, 132, 134, 137, 154, 168, 169, 170, 171, 172, 173, 178, 181, 183, 184, 191, 192, 193, 195, 196, 199, 200, 201, 203, 205, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 231, 233, 250, 252, 255, 260, 264, 266, 267, 269, 270, 271, 272, 274, 276, 278, 279, 280, 284, 287, 290, 295], "document": [4, 26, 27, 31, 35, 36, 37, 41, 51, 61, 120, 121, 127, 280, 284, 290], "describ": [4, 26, 27, 31, 35, 36, 41, 52, 56, 57, 62, 121, 124, 126, 131, 132, 171, 175, 191, 192, 193, 196, 201, 203, 204, 229, 230, 243, 250, 252, 266, 268, 269, 290, 298], "sourc": [4, 7, 14, 18, 22, 23, 24, 36, 40, 41, 46, 53, 55, 56, 57, 60, 61, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 276, 278, 279, 285, 295, 296, 297, 303, 305], "code": [4, 6, 14, 18, 32, 36, 46, 49, 52, 53, 54, 57, 58, 60, 61, 63, 67, 120, 121, 122, 123, 126, 127, 132, 191, 233, 276, 285], "To": [4, 12, 14, 17, 18, 19, 20, 23, 24, 32, 36, 41, 45, 46, 50, 51, 52, 53, 55, 57, 58, 61, 64, 120, 121, 122, 124, 126, 127, 128, 130, 132, 137, 150, 201, 203, 208, 210, 219, 222, 262, 266, 272, 274, 278, 279, 286, 287], "analytci": [4, 8], "need": [4, 7, 8, 9, 12, 14, 17, 18, 19, 20, 22, 23, 32, 36, 41, 45, 46, 51, 52, 53, 55, 56, 57, 60, 61, 64, 120, 121, 122, 124, 126, 129, 130, 131, 133, 134, 206, 219, 224, 230, 250, 266, 272, 275, 285, 286, 287, 295], "prepar": [4, 36, 53, 57, 59, 299, 302], "depend": [4, 17, 22, 36, 41, 61, 126, 194, 199, 295], "toolchain": [4, 36], "have": [4, 8, 12, 14, 19, 20, 23, 24, 36, 41, 45, 46, 50, 51, 52, 53, 55, 56, 57, 61, 62, 64, 68, 120, 121, 122, 123, 124, 126, 127, 129, 130, 132, 134, 137, 147, 151, 154, 166, 172, 177, 182, 191, 201, 202, 203, 205, 211, 214, 229, 230, 232, 248, 252, 266, 272, 278, 279, 284, 285, 287, 299], "two": [4, 17, 18, 19, 36, 41, 45, 46, 53, 55, 56, 57, 58, 120, 121, 122, 123, 124, 126, 128, 130, 132, 134, 137, 143, 166, 173, 174, 176, 178, 179, 183, 200, 211, 212, 219, 220, 221, 222, 223, 227, 229, 232, 233, 238, 239, 247, 265, 266, 271, 272, 299], "option": [4, 36, 46, 51, 56, 61, 62, 64, 67, 89, 90, 96, 97, 98, 108, 114, 119, 121, 124, 126, 134, 135, 137, 139, 140, 141, 156, 157, 166, 172, 174, 175, 177, 179, 181, 182, 184, 186, 187, 190, 194, 195, 196, 199, 201, 203, 204, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 264, 267, 270, 272, 274, 275, 278, 279, 284], "all": [4, 9, 10, 12, 17, 20, 22, 23, 24, 41, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 85, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 137, 141, 142, 144, 145, 149, 151, 166, 167, 171, 172, 175, 177, 178, 182, 191, 200, 209, 215, 229, 230, 232, 234, 258, 266, 267, 270, 272, 279, 284, 286], "tool": [4, 36, 45, 51, 52, 219, 221, 302], "machin": [4, 7, 14, 20, 24, 36, 41, 52, 53, 55, 56, 57, 61, 120, 132, 279], "our": [4, 7, 12, 17, 32, 36, 45, 46, 53, 55, 56, 58, 59, 127, 128, 137, 285, 295], "imag": [4, 36, 41, 51, 58, 123, 279], "command": [4, 7, 23, 36, 41, 49, 60, 121], "line": [4, 6, 7, 12, 17, 36, 46, 49, 120, 121, 272, 274, 304], "util": [4, 9, 36, 51, 52, 60, 61, 63, 136, 237, 286], "g": [4, 7, 10, 12, 14, 17, 18, 19, 20, 22, 23, 32, 36, 41, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 68, 115, 116, 120, 122, 123, 124, 125, 126, 127, 129, 130, 132, 134, 135, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 171, 172, 174, 175, 177, 178, 181, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 210, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 228, 229, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 269, 270, 272, 274, 275, 278, 279, 284, 286, 287, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305], "subcommand": [4, 36], "like": [4, 14, 18, 19, 20, 23, 24, 36, 41, 45, 46, 51, 52, 53, 54, 59, 60, 61, 121, 126, 130, 132, 134, 191, 201, 203, 211, 272, 278, 279, 305], "usag": [4, 7, 17, 36, 62, 123, 124, 125, 129, 134, 191, 272, 279, 284], "try": [4, 7, 17, 23, 36, 41, 45, 53, 59, 61, 150, 191, 275, 279, 299], "h": [4, 20, 36, 58, 68, 137, 148, 151, 172, 199, 203, 219, 264, 271, 272, 296, 301], "we": [4, 7, 8, 12, 14, 17, 19, 20, 22, 23, 24, 32, 35, 36, 41, 45, 46, 51, 52, 53, 55, 56, 57, 58, 59, 62, 64, 68, 70, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 134, 135, 175, 189, 191, 201, 203, 229, 250, 272, 275, 278, 279, 284, 285, 287, 299, 305], "dependic": [4, 36], "mirror": [4, 7, 10, 24, 36], "hk": [4, 36], "aliyun": [4, 7, 36, 58, 279, 296], "speed": [4, 7, 36, 133, 199, 272], "up": [4, 20, 23, 36, 51, 52, 63, 130, 133, 171, 175, 199, 266, 284, 302], "download": [4, 7, 17, 19, 22, 23, 36, 58, 127, 132, 297], "export": [4, 23, 36, 41, 298], "registri": [4, 36, 127, 279, 297], "cn": [4, 23, 36, 127, 279, 296, 297, 305], "hongkong": [4, 36, 279, 297], "aliyunc": [4, 23, 36, 127, 279, 296, 297, 305], "com": [4, 7, 17, 19, 22, 23, 36, 55, 58, 61, 64, 127, 130, 137, 224, 233, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 252, 257, 279, 295, 296, 297, 298, 305], "todo": [4, 6, 7, 14, 36, 130], "yuansi": [4, 23, 36], "make": [4, 6, 14, 23, 36, 49, 51, 58, 126, 127, 130, 132, 134, 150, 202, 266, 272, 279, 296, 297], "work": [4, 8, 14, 18, 20, 32, 36, 45, 51, 52, 53, 55, 57, 60, 62, 124, 126, 134, 271, 272, 278, 284, 285], "rm": [4, 36, 132], "shm": [4, 36, 297], "size": [4, 10, 12, 17, 23, 24, 36, 40, 41, 57, 58, 63, 121, 123, 124, 126, 131, 133, 177, 178, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 214, 223, 227, 229, 272, 279, 297], "4096m": [4, 36], "latest": [4, 36, 297, 302], "sinc": [4, 23, 24, 36, 52, 58, 70, 122, 126, 134, 170, 171, 201, 203, 250, 267, 274, 278], "go": [4, 36, 132, 199, 252], "within": [4, 36, 53, 57, 126, 135, 137, 191, 194, 195, 215, 221, 222, 279, 284, 299, 303], "assign": [4, 7, 18, 20, 36, 55, 60, 61, 63, 137, 191, 199, 201, 203, 205, 219, 222, 227, 272, 275, 278, 305], "4g": [4, 36], "refer": [4, 7, 10, 12, 17, 23, 24, 32, 36, 41, 46, 55, 56, 57, 61, 79, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 137, 170, 171, 182, 191, 192, 193, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 269, 271, 272, 284, 287, 303], "amount": [4, 36, 45, 57, 124, 126, 128], "share": [4, 36, 52, 279, 297], "memori": [4, 9, 12, 23, 24, 32, 36, 41, 45, 46, 49, 51, 52, 54, 55, 56, 57, 58, 120, 121, 122, 128, 132, 272, 279, 286, 297, 298], "alloc": [4, 36, 41], "about": [4, 7, 12, 14, 17, 32, 36, 52, 55, 60, 61, 126, 130, 131, 278, 279, 286, 295], "found": [4, 17, 18, 36, 41, 58, 112, 133, 191, 233, 234, 270, 272, 287], "With": [4, 12, 19, 24, 32, 36, 51, 52, 210, 284], "target": [4, 17, 22, 24, 46, 49, 52, 53, 57, 61, 63, 126, 128, 134, 137, 208, 210, 229, 232, 264, 295], "singl": [4, 7, 14, 20, 24, 36, 41, 52, 55, 57, 61, 62, 120, 134, 145, 152, 174, 178, 183, 193, 198, 215, 221, 266, 268, 272, 279, 284, 285], "mai": [4, 7, 8, 14, 18, 20, 22, 24, 36, 41, 45, 46, 52, 53, 56, 57, 70, 121, 126, 128, 129, 130, 131, 134, 171, 194, 201, 203, 211, 272, 275, 278, 279, 284, 285, 287], "artifact": [4, 17, 23, 36], "give": [4, 7, 12, 32, 36, 52, 53, 55, 58, 126, 134, 199, 219, 239, 271, 272], "descript": [4, 7, 36, 57, 121, 124, 129, 130, 229, 237], "e": [4, 10, 12, 14, 17, 18, 19, 20, 22, 23, 32, 40, 45, 46, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 70, 122, 123, 124, 125, 126, 129, 132, 134, 135, 136, 137, 173, 191, 201, 203, 205, 206, 208, 209, 210, 213, 218, 219, 226, 227, 228, 229, 232, 234, 250, 255, 261, 263, 272, 274, 275, 278, 279, 286, 287, 295, 299, 302, 303, 305], "graphx": [4, 7, 8, 12, 17, 24, 46, 50, 287], "app": [4, 17, 18, 49, 62, 63, 64, 69, 72, 97, 103, 106, 121, 134, 277, 278, 295], "write": [4, 6, 8, 12, 17, 22, 24, 32, 41, 45, 51, 52, 53, 54, 55, 56, 59, 63, 64, 120, 126, 134, 135, 274, 275, 287, 295, 299], "applicalit": 4, "want": [4, 7, 18, 20, 22, 64, 70, 114, 119, 130, 134, 181, 215, 272, 278], "enable_java": 4, "distribut": [6, 10, 12, 14, 18, 20, 22, 23, 24, 32, 41, 46, 49, 51, 52, 55, 56, 57, 61, 64, 120, 123, 125, 129, 131, 132, 136, 191, 194, 201, 203, 212, 219, 220, 221, 222, 223, 231, 284], "framework": [6, 9, 17, 18, 22, 23, 24, 46, 52, 55, 56, 57, 61, 62, 112, 124, 126, 128, 130, 134, 135, 276, 279, 295, 300, 305], "broad": 6, "spectrum": [6, 137, 264], "travers": [6, 17, 52, 53, 55, 57, 120, 123, 126, 128, 132, 135, 266, 272, 295, 303], "match": [6, 52, 61, 171, 191, 199, 201, 203, 230, 266, 303], "mine": [6, 52, 55], "base": [6, 12, 14, 18, 32, 45, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 83, 91, 120, 122, 124, 126, 127, 128, 137, 208, 247, 262, 272, 284, 287, 295, 304], "its": [6, 7, 10, 12, 14, 18, 24, 32, 45, 52, 53, 55, 57, 61, 62, 63, 111, 120, 122, 126, 130, 132, 134, 137, 179, 182, 189, 191, 211, 216, 229, 232, 240, 259, 269, 279, 284, 285], "high": [6, 45, 46, 53, 55, 58, 128, 206, 237, 279], "level": [6, 12, 45, 52, 53, 61, 128, 182, 229, 230, 269], "interfac": [6, 11, 12, 17, 18, 19, 22, 23, 32, 41, 45, 46, 49, 50, 52, 55, 56, 57, 60, 64, 122, 123, 124, 126, 127, 128, 129, 272, 279, 287], "an": [6, 8, 9, 10, 12, 17, 18, 19, 32, 41, 45, 46, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 68, 71, 72, 73, 74, 75, 76, 78, 79, 81, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 103, 105, 106, 115, 116, 120, 121, 122, 124, 125, 126, 128, 129, 131, 132, 134, 136, 137, 148, 149, 154, 159, 160, 166, 167, 169, 170, 171, 173, 176, 177, 178, 179, 181, 182, 184, 186, 187, 190, 192, 193, 201, 203, 204, 205, 207, 208, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 237, 239, 245, 250, 254, 257, 258, 262, 264, 265, 266, 267, 269, 270, 272, 275, 276, 278, 279, 284, 285, 286, 287], "effici": [6, 12, 18, 23, 32, 41, 45, 46, 49, 51, 52, 53, 55, 56, 57, 64, 124, 126, 128, 205, 226, 286], "achiev": [6, 12, 20, 24, 32, 52, 53, 55, 58], "good": 6, "express": [6, 14, 24, 56, 62, 121, 123, 126, 223, 272, 303], "product": [6, 12, 41, 49, 52, 56, 57, 63, 121, 122, 126, 303], "same": [6, 10, 12, 17, 20, 22, 55, 56, 58, 121, 122, 126, 127, 130, 132, 134, 136, 137, 165, 166, 187, 195, 196, 201, 203, 229, 230, 232, 265, 266, 272, 279, 284, 285], "time": [6, 12, 14, 17, 19, 20, 23, 32, 41, 51, 53, 56, 58, 61, 121, 122, 126, 137, 170, 171, 207, 208, 209, 210, 220, 221, 222, 224, 225, 234, 237, 272, 284, 285, 299, 303], "follow": [6, 7, 12, 14, 17, 18, 19, 20, 23, 24, 32, 35, 41, 46, 50, 52, 53, 55, 56, 57, 58, 59, 61, 62, 64, 68, 120, 121, 122, 123, 124, 126, 129, 130, 132, 134, 136, 171, 191, 201, 205, 211, 214, 224, 225, 231, 234, 255, 268, 272, 279, 284, 286, 287], "philosophi": [6, 24], "move": [6, 126, 229, 232, 279], "step": [6, 14, 51, 52, 53, 56, 57, 63, 120, 121, 122, 124, 126, 129, 132, 191, 199, 211, 264, 305], "stronger": 6, "flexibl": [6, 12, 23, 51, 52, 279], "control": [6, 52, 60, 137, 272], "flow": [6, 55, 120, 262], "arbitrari": [6, 124, 199, 203, 219, 220, 221, 222, 272, 275, 284, 303], "set": [6, 7, 10, 12, 14, 18, 20, 23, 41, 45, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 112, 119, 120, 121, 122, 124, 126, 129, 132, 133, 134, 135, 136, 137, 151, 175, 191, 205, 206, 211, 215, 223, 226, 227, 228, 233, 234, 252, 267, 270, 272, 275, 279, 284, 287, 297, 298, 302], "beyond": [6, 24, 232], "neighborhood": [6, 52, 57, 61, 126, 130, 137, 215], "divers": [6, 12, 32, 49, 55, 121], "complex": [6, 12, 22, 32, 45, 46, 51, 52, 55, 56, 57, 61, 123, 137, 201, 205, 220, 221, 222, 284], "easi": [6, 7, 12, 45, 51, 52, 57, 121, 126, 130], "runtim": [6, 17, 23, 41, 52, 54, 55, 56, 60, 61, 64, 297, 298], "take": [6, 14, 18, 24, 41, 51, 52, 53, 55, 57, 64, 81, 121, 124, 125, 126, 130, 132, 134, 137, 200, 221, 252, 270, 272, 276, 278, 285], "onli": [6, 12, 14, 17, 18, 20, 22, 23, 32, 36, 45, 46, 51, 52, 53, 55, 56, 60, 61, 62, 63, 64, 68, 120, 121, 122, 124, 125, 126, 127, 134, 137, 156, 157, 166, 192, 193, 218, 219, 223, 231, 244, 265, 266, 272, 278, 279, 284, 287], "few": [6, 41], "satisfactori": 6, "guid": [7, 49, 53, 64, 284, 299], "quick": [7, 49, 57], "ll": [7, 20, 53], "python3": [7, 23, 41, 295, 297, 298], "m": [7, 18, 20, 23, 61, 62, 137, 147, 178, 182, 184, 195, 201, 203, 205, 207, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 251, 260, 264, 265, 269, 272, 295], "pip": [7, 41, 130, 298, 302], "upgrad": [7, 23, 302], "If": [7, 8, 17, 20, 23, 36, 41, 46, 55, 61, 62, 64, 114, 119, 121, 122, 126, 127, 130, 131, 133, 134, 135, 136, 137, 142, 143, 145, 152, 156, 157, 166, 167, 172, 173, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 264, 267, 268, 270, 272, 274, 275, 278, 279, 284], "occur": [7, 41, 284], "veri": [7, 45, 51, 53, 57, 122, 124, 295], "low": [7, 46, 53, 57, 264], "site": 7, "http": [7, 19, 22, 23, 41, 53, 55, 61, 64, 127, 130, 137, 191, 195, 196, 197, 211, 214, 221, 222, 224, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 256, 257, 258, 259, 264, 279, 295, 296, 297, 298, 299, 303, 305], "pypi": [7, 41, 298], "simpl": [7, 17, 20, 41, 49, 52, 53, 56, 57, 61, 62, 95, 120, 122, 135, 137, 201, 203, 206, 207, 229, 230, 231, 232, 234, 246, 264, 272, 278, 284, 295, 298, 299, 303], "trust": 7, "host": [7, 17, 22, 23, 45, 58, 60, 61, 62, 275, 279, 295, 303, 305], "packag": [7, 8, 17, 18, 20, 22, 23, 41, 130, 219, 221, 272, 275, 297], "everyth": 7, "now": [7, 20, 23, 61, 130, 203, 285, 300], "import": [7, 17, 18, 19, 20, 22, 45, 49, 50, 53, 55, 61, 62, 112, 115, 116, 120, 121, 122, 124, 127, 129, 131, 132, 133, 134, 137, 191, 219, 220, 221, 222, 272, 279, 285, 287, 295, 296, 297, 299, 300, 303, 304, 305], "session": [7, 8, 17, 22, 41, 45, 49, 51, 59, 61, 62, 79, 112, 113, 114, 115, 116, 117, 119, 134, 135, 272, 276, 277, 285, 295, 296, 297, 299, 300, 303, 305], "job": [7, 23, 45, 52, 60, 96, 121], "dataset": [7, 17, 18, 19, 20, 22, 23, 41, 45, 53, 57, 58, 61, 62, 120, 126, 132, 279, 295, 297, 299, 303, 305], "modern_graph": 7, "load_modern_graph": [7, 61, 135], "set_opt": [7, 17, 19, 41, 279, 298], "show_log": [7, 17, 19, 41, 114, 119, 279, 298], "true": [7, 17, 18, 19, 20, 41, 57, 60, 61, 63, 64, 108, 112, 117, 120, 121, 122, 126, 129, 132, 134, 137, 144, 153, 154, 155, 156, 157, 166, 168, 169, 175, 177, 195, 199, 201, 205, 211, 215, 218, 230, 270, 272, 274, 275, 279, 284, 295, 298, 303, 304, 305], "load": [7, 10, 12, 17, 18, 19, 20, 22, 23, 41, 45, 53, 55, 57, 58, 59, 60, 61, 68, 70, 72, 103, 120, 122, 131, 132, 134, 279, 290], "modern": [7, 51], "exampl": [7, 10, 12, 18, 19, 20, 45, 49, 51, 52, 53, 55, 56, 57, 61, 62, 67, 68, 112, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 134, 135, 137, 139, 140, 141, 143, 148, 150, 151, 156, 157, 160, 165, 166, 171, 173, 175, 177, 178, 181, 184, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 210, 212, 215, 219, 220, 221, 222, 223, 229, 232, 237, 262, 264, 265, 266, 267, 270, 272, 274, 275, 276, 278, 279, 284, 285, 295, 299, 304], "trigger": [7, 18, 70, 285], "label": [7, 12, 20, 40, 52, 53, 55, 56, 57, 60, 61, 62, 63, 70, 120, 123, 126, 132, 134, 137, 172, 176, 183, 187, 188, 190, 200, 201, 203, 204, 205, 206, 207, 249, 250, 272, 274, 275, 278, 279, 299, 300, 303, 304], "propag": [7, 14, 52, 55, 61, 126, 144, 234], "lpa": [7, 32, 61, 295], "properti": [7, 12, 17, 20, 40, 49, 53, 55, 60, 61, 62, 63, 79, 95, 109, 110, 111, 123, 126, 134, 135, 219, 234, 264, 269, 272, 275, 278, 279, 299, 300, 303], "print": [7, 20, 41, 45, 53, 61, 62, 123, 125, 126, 129, 132, 134, 135, 137, 150, 199, 267, 272, 275, 300, 303, 305], "result": [7, 12, 14, 17, 18, 19, 24, 45, 51, 52, 53, 55, 56, 60, 61, 62, 69, 75, 76, 85, 86, 93, 95, 97, 98, 101, 102, 114, 120, 123, 124, 126, 128, 129, 131, 134, 135, 137, 201, 203, 206, 225, 272, 284, 285, 295, 299], "ret": [7, 18, 295, 300], "to_datafram": [7, 45, 62, 134, 278, 295], "selector": [7, 49, 60, 62, 69, 75, 76, 87, 88, 93, 101, 102, 134, 277, 279, 295, 300], "id": [7, 12, 17, 18, 40, 41, 45, 53, 56, 57, 58, 60, 61, 62, 63, 90, 96, 98, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 136, 229, 230, 269, 272, 275, 278, 279, 295, 296, 298, 299, 303, 304, 305], "v": [7, 10, 14, 18, 20, 22, 24, 40, 45, 53, 56, 57, 60, 61, 62, 63, 120, 123, 124, 125, 126, 129, 132, 134, 135, 136, 137, 143, 166, 191, 194, 199, 201, 205, 211, 214, 219, 222, 229, 232, 234, 266, 272, 278, 279, 295, 299, 303, 304], "r": [7, 17, 22, 45, 53, 61, 62, 172, 182, 189, 195, 199, 211, 219, 228, 260, 265, 278, 279, 295, 299, 300], "project": [7, 17, 23, 37, 53, 54, 56, 60, 61, 62, 95, 127, 134, 279, 295, 299, 300, 303], "homogen": [7, 53, 122], "shortest": [7, 19, 24, 55, 61, 137, 285], "path": [7, 12, 17, 19, 22, 23, 24, 46, 51, 53, 55, 56, 57, 61, 68, 121, 122, 124, 126, 131, 132, 134, 137, 140, 173, 179, 183, 184, 186, 203, 266, 272, 274, 276, 278, 279, 285, 295, 296, 299, 300, 303], "sssp": [7, 8, 14, 17, 18, 22, 24, 32, 40, 58, 61, 62, 68, 278, 279, 285, 286, 295], "1": [7, 10, 12, 14, 17, 19, 20, 22, 23, 24, 32, 45, 53, 56, 57, 58, 61, 62, 120, 123, 125, 126, 127, 129, 134, 135, 136, 137, 139, 140, 141, 143, 147, 148, 151, 156, 157, 160, 165, 166, 170, 172, 173, 174, 175, 176, 178, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 274, 275, 279, 284, 285, 295, 299, 300, 302, 303, 304, 305], "pg": [7, 61, 279], "vertic": [7, 12, 14, 17, 18, 19, 22, 24, 40, 52, 53, 55, 56, 57, 60, 61, 62, 63, 92, 121, 122, 123, 124, 125, 126, 129, 132, 134, 195, 206, 216, 218, 233, 234, 245, 247, 258, 259, 265, 278, 279, 284, 295, 299, 300], "person": [7, 134, 252, 261, 272, 275, 278, 284, 300, 305], "none": [7, 20, 57, 61, 62, 68, 75, 76, 79, 82, 87, 88, 89, 90, 91, 93, 96, 98, 101, 102, 106, 112, 115, 119, 120, 121, 126, 134, 135, 136, 137, 145, 149, 151, 152, 156, 157, 166, 167, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 264, 266, 267, 269, 272, 274, 275, 276, 279, 300, 304, 305], "edg": [7, 12, 17, 18, 19, 22, 24, 40, 46, 52, 53, 55, 56, 57, 60, 61, 62, 63, 73, 74, 77, 82, 91, 95, 96, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 144, 147, 148, 150, 151, 152, 154, 156, 157, 160, 161, 163, 165, 166, 167, 171, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 188, 189, 191, 193, 196, 197, 199, 201, 202, 203, 205, 207, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 256, 257, 258, 259, 262, 266, 269, 270, 271, 272, 273, 275, 278, 279, 284, 285, 295, 299, 300, 304], "know": [7, 8, 14, 56, 121, 122, 130, 134, 284, 300, 303, 305], "weight": [7, 19, 20, 40, 55, 57, 58, 61, 91, 120, 122, 123, 124, 125, 126, 129, 132, 137, 139, 140, 141, 145, 156, 157, 199, 211, 215, 219, 222, 262, 270, 271, 272, 274, 279, 284, 304], "src": [7, 17, 18, 32, 40, 45, 53, 61, 62, 68, 120, 122, 134, 278, 285, 295, 299, 304, 305], "distanc": [7, 17, 18, 61, 137, 172, 211, 215, 219, 220, 221, 222, 223, 241, 253, 295], "As": [7, 12, 14, 18, 20, 22, 24, 41, 52, 55, 56, 120, 122, 128, 129, 130, 201], "shown": [7, 10, 12, 18, 32, 52, 55, 57, 58, 121, 122, 123, 126, 132], "abov": [7, 12, 19, 22, 45, 50, 52, 55, 56, 57, 120, 121, 122, 126, 130, 175, 191, 211, 234, 268, 278, 285, 287], "analyz": [7, 19, 52, 55, 126], "learn": [7, 36, 45, 51, 55, 59, 115, 121, 124, 125, 126, 127, 130, 132, 277, 279, 299, 301], "topic": [7, 53, 61], "technic": [7, 128, 266, 272], "detail": [7, 12, 14, 17, 20, 32, 41, 44, 46, 51, 55, 57, 60, 61, 62, 112, 114, 115, 116, 119, 121, 122, 124, 125, 128, 129, 130, 132, 229, 272, 279, 286, 287], "disaggreg": [7, 36, 49], "deploy": [7, 41, 45, 52, 122, 132, 279], "k8": [7, 17, 22, 41, 45, 46, 49, 51, 53, 59, 279, 295, 296, 297, 299, 302, 305], "larg": [7, 11, 12, 18, 20, 23, 32, 41, 45, 46, 51, 52, 57, 61, 106, 121, 122, 124, 126, 128, 132, 133, 146, 170, 171, 191, 226, 295], "scale": [7, 12, 20, 23, 32, 45, 46, 51, 52, 53, 55, 57, 122, 124, 126, 128, 133, 201, 212, 219, 271], "A": [7, 10, 12, 24, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 69, 70, 72, 73, 74, 77, 80, 82, 91, 92, 96, 97, 106, 124, 125, 126, 129, 131, 134, 135, 136, 137, 139, 140, 141, 143, 144, 146, 148, 150, 151, 152, 154, 155, 156, 157, 160, 165, 166, 167, 170, 171, 172, 174, 175, 177, 181, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 207, 211, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 238, 240, 249, 260, 264, 265, 266, 267, 269, 270, 272, 274, 279, 285], "advanc": [7, 218], "section": [8, 126, 127, 134, 171], "contain": [8, 12, 17, 20, 23, 41, 45, 46, 52, 53, 55, 58, 60, 63, 64, 120, 121, 124, 126, 129, 130, 131, 132, 134, 137, 139, 140, 141, 148, 151, 152, 167, 177, 178, 179, 181, 184, 199, 224, 225, 229, 230, 272, 275, 276, 279, 284, 297, 303], "number": [8, 19, 20, 24, 45, 53, 55, 57, 58, 60, 61, 63, 122, 123, 124, 125, 126, 129, 133, 137, 147, 152, 154, 163, 164, 165, 170, 171, 173, 175, 178, 182, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 245, 250, 255, 262, 264, 265, 267, 269, 270, 271, 272, 279, 284, 299, 303], "assum": [8, 23, 53, 121, 134, 170, 231, 270, 272, 279, 299], "ha": [8, 10, 12, 14, 17, 23, 32, 41, 45, 46, 52, 53, 55, 56, 57, 60, 61, 62, 63, 64, 111, 120, 121, 122, 123, 124, 126, 129, 130, 131, 132, 134, 135, 137, 154, 156, 157, 160, 165, 166, 172, 187, 189, 191, 202, 206, 211, 219, 220, 221, 222, 223, 229, 232, 238, 239, 243, 244, 248, 254, 256, 259, 262, 264, 266, 270, 272, 276, 278, 279, 285, 287, 299, 300, 303], "read": [8, 20, 24, 45, 52, 120, 121, 126, 131, 132, 134, 170, 171, 270, 272, 273, 277, 279, 303], "getting_start": 8, "how": [8, 12, 14, 20, 26, 27, 31, 32, 36, 41, 44, 45, 46, 49, 50, 53, 55, 56, 57, 59, 62, 64, 72, 121, 122, 126, 128, 279, 280, 284, 286, 287, 290, 299], "launch": [8, 41, 45, 53, 59, 112, 131, 276, 279, 299], "scenario": [8, 12, 46, 52, 56, 57, 121, 122, 124, 284], "case": [8, 10, 14, 18, 41, 45, 56, 58, 63, 121, 122, 126, 128, 130, 133, 137, 191, 199, 205, 229, 240, 256, 278, 279, 287], "suffici": [8, 17, 41, 52, 121], "louvain": [8, 55, 61, 295], "social": [8, 45, 52, 55, 58, 199, 249, 264, 273], "scientist": [8, 46, 51], "familiar": 8, "well": [8, 12, 18, 20, 32, 51, 53, 55, 56, 59, 126, 134, 142, 175, 223, 272, 286, 287], "known": [8, 24, 55, 61, 154, 172, 175, 224, 225, 242, 266, 285], "manipul": [8, 19, 20, 46, 51, 59, 60, 272, 284], "invok": [8, 12, 17, 24, 32, 60, 124, 125, 129, 279, 295], "modul": [8, 19, 20, 23, 49, 51, 52, 53, 56, 133, 271, 284, 301], "pydata": 8, "eco": 8, "toturi": 8, "pregel": [8, 12, 17, 22, 32, 51, 52, 55, 277, 287, 299, 301], "still": [8, 24, 32, 45, 52, 55, 150, 279], "alreadi": [8, 20, 23, 24, 45, 120, 270, 272, 305], "jar": [8, 22, 23, 61, 295], "directli": [8, 12, 14, 20, 24, 32, 45, 50, 53, 57, 60, 121, 124, 126, 127, 128, 129, 264, 272, 275, 279, 287], "migrat": [8, 46, 53, 299], "total": [8, 12, 32, 45, 63, 147, 191, 214, 231, 237, 272, 299], "transpar": [8, 52], "even": [8, 20, 55, 128, 134, 137, 201, 211, 229, 231, 232, 272], "don": [8, 17, 23, 41, 70, 166, 272], "t": [8, 17, 23, 40, 41, 56, 58, 60, 61, 63, 64, 70, 120, 125, 126, 132, 134, 136, 137, 150, 166, 201, 203, 205, 225, 229, 230, 264, 266, 269, 272, 278, 284, 285, 304], "sourcecod": 8, "exist": [8, 10, 12, 14, 20, 32, 45, 46, 52, 55, 56, 61, 63, 68, 70, 114, 117, 119, 121, 124, 126, 130, 131, 134, 137, 156, 157, 161, 203, 212, 226, 270, 272, 279, 284], "autom": 9, "It": [9, 10, 12, 24, 32, 41, 45, 46, 51, 53, 54, 55, 57, 60, 61, 64, 112, 120, 121, 122, 126, 128, 130, 134, 135, 137, 141, 196, 200, 224, 225, 229, 232, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 253, 256, 258, 259, 264, 272, 279, 284], "abl": [9, 24, 52, 125, 229], "batch": [9, 12, 19, 57, 120, 123, 125, 126, 128, 130, 132, 136, 304], "counterpart": [9, 51], "whole": [9, 12, 24, 32, 52, 55, 56, 57, 128, 286], "without": [9, 12, 14, 22, 32, 46, 52, 64, 77, 121, 123, 124, 125, 126, 147, 184, 198, 205, 211, 212, 219, 220, 221, 222, 223, 272, 275, 279, 284, 285, 303], "redesign": 9, "logic": [9, 14, 17, 51, 57, 58, 123, 284, 295], "structur": [9, 12, 17, 20, 24, 45, 53, 55, 56, 61, 121, 122, 123, 182, 201, 249, 264, 266, 272, 273, 286], "underli": [9, 45, 55, 128], "equip": [9, 50, 51, 58, 287], "four": [9, 12, 20, 53, 57, 60, 120, 123, 132, 219, 223], "differ": [9, 10, 12, 14, 17, 18, 20, 23, 32, 45, 46, 51, 52, 53, 55, 56, 57, 58, 61, 79, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 191, 195, 196, 197, 219, 222, 229, 249, 264, 272, 277, 284, 285, 286, 287], "memoiz": 9, "polici": [9, 41, 60, 279], "kind": [9, 12, 32, 41, 46, 52, 53, 55, 60, 62, 124, 126, 130, 131, 269, 278, 285, 286, 296, 298, 302], "tbf": [9, 26, 27, 31, 35, 37, 48, 53, 58, 280, 290, 291, 293, 294], "There": [10, 12, 32, 41, 53, 56, 61, 122, 125, 126, 128, 272, 278, 279], "three": [10, 12, 14, 18, 32, 46, 52, 54, 58, 64, 121, 124, 125, 126, 129, 130, 131, 132, 137, 166, 171, 178, 254, 259, 268, 272, 287], "maintain": [10, 14, 52, 56, 284], "node": [10, 18, 41, 45, 46, 52, 53, 55, 57, 59, 61, 62, 63, 82, 86, 92, 95, 96, 115, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 158, 160, 162, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 295, 298, 299, 304], "cross": [10, 12, 64, 247], "fragment": [10, 12, 17, 18, 40, 49, 55, 63, 96, 134, 135, 287, 295], "each": [10, 12, 14, 19, 20, 24, 32, 36, 46, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 110, 120, 121, 122, 123, 124, 125, 126, 130, 131, 132, 134, 137, 146, 148, 166, 167, 172, 176, 178, 183, 189, 191, 193, 194, 195, 197, 198, 200, 201, 203, 204, 206, 211, 214, 216, 219, 220, 221, 222, 223, 226, 227, 229, 231, 232, 237, 240, 252, 257, 262, 266, 268, 269, 270, 272, 278, 279, 284, 287], "fi": [10, 132], "local": [10, 14, 22, 24, 32, 41, 49, 52, 53, 60, 61, 64, 96, 121, 122, 130, 131, 132, 134, 302, 303], "For": [10, 11, 17, 20, 22, 41, 45, 51, 52, 53, 55, 56, 57, 61, 63, 68, 120, 121, 122, 123, 126, 128, 130, 132, 137, 149, 170, 173, 175, 178, 201, 203, 205, 206, 211, 214, 215, 219, 220, 221, 222, 223, 234, 237, 266, 272, 276, 278, 279, 284, 285, 286], "instanc": [10, 23, 41, 56, 58, 60, 61, 62, 68, 70, 72, 85, 89, 90, 97, 115, 123, 134, 172, 174, 175, 177, 179, 181, 182, 184, 186, 187, 190, 201, 203, 204, 206, 208, 209, 210, 212, 216, 217, 218, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 267, 274, 279], "addit": [10, 12, 14, 18, 20, 24, 32, 45, 50, 51, 52, 54, 56, 57, 58, 79, 97, 121, 122, 123, 124, 134, 266, 272, 284, 287], "4": [10, 17, 19, 20, 22, 41, 53, 56, 58, 68, 120, 122, 123, 125, 126, 127, 137, 143, 148, 150, 151, 156, 157, 175, 177, 178, 187, 195, 198, 200, 207, 216, 218, 223, 232, 239, 242, 243, 249, 250, 256, 258, 265, 266, 267, 272, 274, 275, 279, 284, 285, 286, 295, 298, 299, 303], "5": [10, 19, 20, 41, 53, 56, 57, 58, 120, 123, 125, 126, 127, 129, 132, 137, 143, 148, 150, 156, 175, 178, 191, 195, 196, 197, 199, 200, 208, 210, 217, 218, 219, 220, 222, 223, 237, 238, 240, 241, 242, 243, 245, 246, 249, 251, 253, 255, 256, 262, 267, 272, 278, 279, 284, 285, 298, 299, 303], "6": [10, 17, 18, 22, 45, 58, 61, 121, 126, 132, 137, 156, 175, 204, 205, 206, 223, 237, 239, 245, 246, 249, 252, 256, 257, 265, 267, 272, 284, 285, 295, 298, 299, 303], "7": [10, 20, 23, 41, 58, 121, 127, 132, 139, 140, 152, 175, 237, 243, 245, 249, 250, 253, 255, 267, 272, 285, 298, 302, 303], "f1": [10, 134], "store": [10, 12, 17, 32, 41, 46, 49, 51, 52, 55, 56, 57, 62, 63, 75, 76, 93, 101, 102, 122, 128, 134, 135, 191, 196, 219, 220, 221, 222, 223, 272, 274, 284, 295, 298], "3": [10, 12, 14, 17, 19, 20, 22, 23, 32, 41, 45, 56, 58, 61, 62, 123, 124, 125, 126, 129, 134, 135, 137, 139, 140, 141, 143, 148, 152, 156, 157, 173, 175, 178, 181, 187, 191, 192, 193, 195, 196, 197, 199, 203, 206, 207, 211, 212, 216, 218, 229, 230, 232, 234, 237, 240, 245, 249, 250, 253, 256, 259, 261, 264, 265, 266, 267, 272, 274, 275, 284, 285, 296, 299, 302, 303], "when": [10, 20, 23, 24, 41, 45, 46, 52, 54, 55, 57, 58, 61, 62, 63, 70, 106, 112, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 134, 136, 137, 181, 191, 211, 219, 220, 221, 222, 228, 272, 274, 275, 279, 284, 285], "strategi": [10, 12, 24, 56, 57, 58, 63, 124, 125, 126, 129, 130, 275, 284, 286, 303], "below": [10, 12, 20, 32, 36, 52, 53, 56, 58, 121, 124, 126, 129, 132, 171, 201, 203, 237, 272, 279], "under": [10, 14, 17, 24, 52, 54, 61, 64, 126, 128, 129, 137], "9": [10, 121, 137, 175, 177, 223, 241, 249, 262, 267, 302], "12": [10, 20, 41, 58, 61, 121, 122, 123, 125, 127, 139, 140, 141, 177, 239, 240, 244, 248, 252, 258, 298, 303], "besid": [10, 52, 131, 132], "appli": [10, 12, 24, 46, 50, 52, 53, 55, 57, 214, 221, 237, 264, 284, 285, 287], "partit": [10, 12, 14, 18, 24, 52, 55, 56, 61, 125, 130, 189, 194, 195, 196, 199, 230, 287], "split": [10, 12, 121, 122, 279, 284], "roughli": [10, 12], "equal": [10, 12, 41, 53, 137, 189, 191, 222, 227, 265, 284, 299], "one": [10, 12, 14, 19, 20, 22, 24, 36, 41, 45, 46, 49, 52, 53, 56, 57, 60, 61, 63, 68, 69, 85, 111, 120, 121, 122, 123, 124, 126, 130, 134, 137, 146, 170, 171, 174, 175, 178, 187, 188, 191, 200, 201, 206, 208, 209, 210, 211, 212, 214, 229, 232, 240, 243, 247, 250, 256, 257, 258, 264, 266, 268, 272, 278, 279, 284, 286, 299, 303], "both": [10, 12, 18, 19, 20, 32, 52, 53, 55, 56, 57, 61, 63, 120, 121, 122, 134, 135, 136, 151, 160, 165, 166, 171, 191, 215, 218, 223, 229, 232, 279, 285, 286, 302, 303], "endpoint": [10, 12, 53, 60, 126, 135, 137, 279, 284, 295, 303, 305], "across": [10, 12, 14, 32, 46, 52, 56], "divid": [10, 52, 61, 121, 124, 128, 129, 137], "hold": [10, 20, 52, 60, 61, 62, 63, 85, 89, 90, 98, 122, 134, 135, 137, 272, 278, 284], "place": [10, 18, 19, 130, 131, 134, 199, 219, 220, 221, 222, 223, 252, 270], "itself": [10, 20, 22, 63, 120, 122, 278, 279, 284], "replic": [10, 213], "adjac": [10, 20, 24, 57, 61, 123, 128, 137, 160, 193, 217, 235, 250, 264, 265, 272, 273, 284], "resid": 10, "anoth": [10, 20, 52, 53, 63, 201, 234, 272, 284, 285, 286], "fj": 10, "outcom": 10, "outgo": [10, 24, 56, 63, 126, 137, 272, 284], "incom": [10, 14, 32, 60, 63, 137, 284], "correspond": [10, 17, 18, 46, 51, 56, 57, 61, 96, 120, 121, 122, 123, 125, 126, 130, 134, 137, 170, 171, 201, 203, 204, 205, 206, 207, 219, 265, 266, 268, 272, 274, 275, 284], "some": [10, 12, 14, 17, 20, 23, 32, 36, 52, 55, 56, 57, 61, 120, 121, 122, 128, 130, 132, 133, 134, 135, 182, 191, 201, 203, 206, 225, 266, 271, 272, 284], "messag": [10, 14, 17, 18, 24, 32, 41, 57, 60, 63, 133, 295], "pass": [10, 14, 18, 20, 24, 56, 57, 61, 63, 67, 126, 130, 132, 181, 219, 221, 264, 272, 276, 284, 295, 300, 305], "synchron": [10, 12, 14, 52], "adopt": [10, 46, 53, 124], "along": [10, 20, 24, 63, 122, 126, 132, 266, 272, 284], "vice": [10, 219], "versa": [10, 219], "compani": 10, "send": [10, 18, 24, 55, 63, 295], "state": [10, 12, 24, 32, 51, 55, 56, 58, 131, 134, 191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 227, 228, 232, 264, 267, 269], "sent": [10, 24], "f0": [10, 134], "togeth": [10, 20, 52, 58, 126, 130, 173], "similar": [10, 20, 46, 52, 55, 57, 61, 120, 121, 122, 123, 126, 129, 134, 264, 272], "syncstateonoutervertexastarget": 10, "certain": [10, 24, 45, 46, 121, 122, 126, 129], "f2": 10, "regardless": [10, 121, 217], "direct": [10, 12, 53, 57, 60, 61, 80, 112, 120, 122, 126, 129, 132, 134, 137, 142, 147, 153, 168, 179, 192, 193, 194, 195, 196, 199, 203, 204, 206, 215, 216, 217, 218, 229, 230, 239, 266, 270, 272, 273, 275, 300, 304, 305], "eas": [11, 12, 32, 46, 52, 58], "allow": [11, 12, 20, 22, 24, 45, 46, 50, 51, 52, 53, 55, 56, 57, 121, 126, 196, 201, 203, 206, 211, 214, 219, 264, 272, 284, 287], "who": [11, 14, 52, 56, 127, 132], "over": [11, 12, 18, 22, 24, 32, 41, 45, 46, 50, 52, 53, 55, 58, 61, 63, 123, 137, 159, 160, 166, 218, 272, 284, 287], "small": [11, 14, 20, 45, 46, 55, 56, 137, 192, 193, 219, 262, 273, 279], "minim": [11, 55, 132, 223, 224, 245, 271], "chang": [11, 12, 14, 20, 23, 32, 36, 46, 52, 56, 57, 58, 61, 77, 111, 121, 134, 137, 150, 272, 279], "gae": [12, 41, 46, 49, 50, 51, 52, 55, 58, 59, 64, 89, 90, 135, 296, 297], "respons": [12, 32, 41, 52, 55, 60, 130, 133, 279], "prior": [12, 32, 51, 52], "abil": [12, 32, 52], "parallel": [12, 14, 24, 32, 45, 51, 52, 56, 60, 63, 122, 201, 203, 240, 272, 275, 295], "sequenti": [12, 14, 18, 32, 52, 170, 171, 207, 287, 295], "recast": [12, 14, 32], "ga": [12, 49], "easili": [12, 20, 22, 23, 24, 32, 41, 46, 51, 52, 53, 55, 56, 126, 128], "plug": [12, 32, 52], "minor": [12, 32, 51, 52, 58, 285], "get": [12, 17, 18, 19, 20, 32, 37, 41, 49, 52, 56, 59, 61, 62, 63, 80, 114, 116, 120, 123, 124, 125, 126, 129, 134, 135, 136, 137, 170, 191, 262, 272, 278, 279, 284, 287, 295, 298, 299], "highli": [12, 32, 51, 55], "cope": [12, 32], "varieti": [12, 32, 45, 46, 52], "real": [12, 32, 45, 51, 52, 53, 55, 56, 264, 284], "life": [12, 32], "fledg": [12, 52], "figur": [12, 32, 53, 55, 56, 57, 122, 124, 255], "major": [12, 55, 60], "name": [12, 17, 20, 22, 23, 41, 52, 54, 56, 60, 61, 62, 63, 68, 106, 121, 123, 126, 128, 130, 132, 134, 135, 137, 156, 157, 171, 238, 245, 250, 262, 268, 272, 274, 275, 278, 279, 284, 295, 296, 298, 303, 305], "next": [12, 24, 32, 49, 52, 55, 57, 120, 121, 124, 126, 128, 130, 131, 132, 198, 266, 278, 285], "extrem": [12, 52, 128, 173, 184], "thu": [12, 14, 20, 32, 41, 45, 52, 57, 61, 125, 167, 175, 272], "fashion": [12, 20], "consist": [12, 20, 24, 32, 46, 51, 52, 55, 56, 57, 58, 60, 61, 63, 123, 124, 126, 128, 174, 175, 176, 187, 190, 198, 244, 266, 284], "format": [12, 20, 22, 32, 45, 57, 58, 61, 89, 90, 97, 120, 123, 126, 128, 131, 132, 134, 135, 272, 274, 279, 297], "although": [12, 14, 22, 32, 45, 55, 64, 171], "unifi": [12, 32, 45, 49, 121], "doe": [12, 20, 32, 46, 56, 123, 126, 131, 137, 156, 157, 199, 201, 203, 218, 229, 272, 274, 279, 284], "care": [12, 32, 130, 131], "At": [12, 14, 20, 32, 121, 131, 285], "core": [12, 32, 41, 52, 53, 54, 61, 64, 132, 137, 279, 299], "offer": [12, 20, 32, 46, 49, 51, 55], "friendli": [12, 46, 49, 51, 55, 57], "so": [12, 41, 61, 64, 120, 126, 128, 147, 182, 187, 200, 201, 202, 205, 220, 221, 222, 233, 266, 272, 299], "freeli": [12, 24], "techniqu": [12, 32, 52, 55, 126], "pull": [12, 14, 32, 41, 55, 127, 130, 279, 297], "push": [12, 14, 32, 55, 130], "dynam": [12, 32, 51, 52, 55, 61, 71, 84, 192, 193, 275], "switch": [12, 23, 32, 55, 229, 232], "cach": [12, 32, 46, 55, 272], "layout": [12, 32, 55], "pipelin": [12, 32, 46, 51, 52, 55, 286], "sdk": [12, 18, 41, 46, 49, 50, 51, 55, 64, 277, 287, 295], "access": [12, 14, 41, 52, 55, 56, 57, 121, 122, 123, 124, 125, 126, 131, 132, 134, 272, 275, 279, 305], "between": [12, 18, 19, 41, 55, 57, 60, 61, 121, 122, 124, 126, 132, 137, 194, 195, 196, 199, 205, 211, 212, 214, 218, 219, 220, 221, 223, 226, 228, 229, 230, 232, 237, 267, 269, 272], "sub": [12, 14, 18, 51, 62, 124, 126, 287], "while": [12, 14, 19, 20, 32, 45, 46, 52, 55, 56, 57, 121, 126, 132, 168, 169, 229, 232, 234, 266, 272, 284], "written": [12, 20, 52, 57, 89, 135, 250, 285, 295], "librari": [12, 52, 60, 61, 64], "domain": [12, 52, 219, 220, 221, 222, 223], "repres": [12, 45, 52, 53, 54, 55, 58, 60, 61, 62, 68, 97, 121, 122, 123, 124, 126, 130, 132, 134, 178, 211, 219, 220, 221, 222, 223, 231, 238, 241, 245, 253, 262, 264, 266, 267, 272, 276, 279], "everi": [12, 23, 57, 60, 126, 137, 139, 140, 141, 156, 157, 175, 189, 252, 259, 272, 278], "entiti": [12, 52, 53, 121], "identifi": [12, 24, 52, 53, 56, 61, 111, 199, 266, 269, 272, 279, 284, 305], "uniqu": [12, 53, 56, 61, 110, 111, 121, 125, 130, 131, 134, 137, 239, 245, 278], "indic": [12, 24, 54, 55, 56, 58, 68, 121, 123, 126, 134, 178, 181, 191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 226, 227, 228, 232, 262, 264, 267, 269, 274], "role": [12, 41, 50, 54, 122, 131, 137, 223, 261, 269, 287, 298], "valu": [12, 18, 20, 24, 40, 41, 55, 57, 60, 61, 62, 63, 97, 106, 114, 119, 120, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 136, 137, 146, 166, 181, 191, 219, 220, 221, 222, 229, 231, 232, 264, 265, 266, 272, 274, 275, 278, 279, 295, 303, 304, 305], "pair": [12, 20, 57, 60, 61, 63, 119, 132, 171, 176, 177, 183, 199, 217, 223, 272, 275, 278], "combin": [12, 14, 18, 32, 49, 51, 52, 53, 120, 121, 122, 126, 272, 279, 286, 295], "show": [12, 14, 19, 20, 41, 51, 53, 55, 56, 123, 124, 132, 275, 279], "address": [12, 14, 17, 23, 41, 55, 303], "connect": [12, 17, 19, 20, 41, 51, 52, 53, 55, 61, 62, 63, 121, 122, 124, 126, 129, 135, 137, 141, 158, 173, 175, 177, 179, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 196, 198, 200, 205, 206, 211, 212, 214, 219, 221, 222, 223, 224, 225, 226, 228, 237, 247, 248, 250, 252, 254, 271, 272, 279, 285, 295, 303], "order": [12, 32, 51, 52, 53, 56, 61, 62, 121, 126, 132, 137, 139, 140, 146, 170, 171, 174, 179, 186, 199, 200, 203, 235, 236, 239, 264, 265, 272, 278, 303], "deliv": [12, 303], "belongs_to": [12, 303], "home_of": [12, 303], "2": [12, 14, 17, 18, 19, 20, 22, 23, 32, 53, 56, 57, 58, 61, 62, 120, 123, 124, 125, 126, 127, 129, 137, 139, 140, 141, 143, 151, 152, 156, 157, 160, 165, 166, 173, 174, 175, 178, 183, 184, 189, 191, 193, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 239, 241, 243, 244, 245, 249, 250, 252, 254, 255, 257, 264, 265, 266, 267, 272, 274, 275, 279, 284, 285, 295, 296, 297, 299, 300, 302, 303, 304, 305], "dot": 12, "buyer": [12, 52, 56], "tom": [12, 303], "gift": [12, 303], "seller": [12, 52], "jack": [12, 303], "price": 12, "99": [12, 225, 303], "cut": [12, 24, 257], "multipl": [12, 17, 46, 51, 52, 53, 55, 56, 57, 61, 62, 63, 121, 122, 126, 137, 234, 272, 278, 284, 285], "specif": [12, 14, 20, 24, 32, 41, 45, 46, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 124, 125, 126, 129, 132, 134, 191, 219, 223, 272, 278], "dedic": 12, "updat": [12, 14, 17, 20, 24, 32, 46, 51, 52, 55, 57, 127, 130, 272, 279, 295, 296], "treat": [12, 14, 20, 32, 55, 134, 272, 274, 279], "immut": [12, 32, 54, 56], "onc": [12, 17, 20, 32, 61, 63, 122, 123, 126, 132, 134, 135, 137, 167, 272], "creat": [12, 17, 19, 23, 32, 41, 52, 60, 61, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 96, 99, 100, 106, 112, 113, 115, 116, 124, 126, 129, 131, 134, 135, 150, 172, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 189, 190, 191, 193, 194, 196, 199, 201, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 220, 221, 222, 224, 225, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 266, 267, 272, 274, 275, 276, 279, 284, 285, 286, 295, 298], "persist": [12, 32, 41, 46, 52], "fortun": [12, 20, 45], "grin": [12, 49], "defin": [12, 18, 20, 24, 41, 51, 52, 53, 56, 57, 60, 61, 64, 79, 120, 121, 124, 126, 129, 131, 132, 137, 174, 196, 198, 221, 278, 279, 284, 299], "therefor": [12, 45, 53, 120, 121, 126, 218, 284], "awar": [12, 41], "pleas": [12, 17, 23, 24, 32, 41, 53, 55, 57, 120, 121, 122, 124, 125, 126, 127, 130, 132, 287, 299], "check": [12, 17, 32, 41, 55, 56, 57, 61, 130, 134, 137, 230, 231, 272, 279, 298, 299], "introduct": [12, 32, 55, 125, 126, 129, 137, 182, 264], "compon": [12, 19, 32, 41, 49, 52, 54, 55, 60, 61, 137, 205, 219, 278], "foundat": [12, 52], "function": [12, 14, 17, 19, 20, 24, 32, 41, 46, 52, 54, 56, 60, 126, 130, 137, 170, 171, 178, 181, 201, 203, 208, 219, 220, 221, 222, 223, 231, 267, 270, 271, 272, 273, 274, 277, 284, 287, 295], "visit": [12, 56, 121], "intermedi": [12, 17, 51, 52, 54], "manag": [12, 41, 45, 46, 49, 51, 52, 55, 58, 60, 279, 295], "meanwhil": [12, 45, 51, 55], "index": [12, 40, 49, 56, 57, 60, 61, 62, 122, 123, 131, 134, 136, 137, 146, 170, 171, 201, 203, 204, 205, 207, 301, 305], "compress": [12, 53, 61, 121, 237], "balanc": [12, 122, 172], "current": [12, 17, 22, 45, 51, 55, 56, 61, 63, 113, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 134, 264, 267, 272, 279, 284, 295, 302], "wide": [12, 24, 46, 50, 51, 52, 53, 55, 56, 57, 124, 287], "popular": [12, 22, 45, 57, 120, 132], "automat": [12, 14, 32, 46, 51, 52, 55, 56, 62, 132, 134, 272, 285, 286, 305], "help": [12, 17, 37, 55, 130, 284, 296], "choos": [12, 22, 32, 35, 51, 52, 55, 120, 121, 211, 212, 250, 284], "accord": [12, 19, 41, 52, 55, 56, 57, 60, 124, 126, 130, 191, 199, 211, 212, 284], "background": [12, 44], "demand": [12, 52, 287], "through": [12, 14, 19, 22, 24, 32, 46, 49, 53, 55, 56, 57, 62, 64, 121, 122, 124, 125, 126, 131, 132, 134, 137, 167, 181, 198, 237, 272, 284], "foreign": 12, "natur": [12, 24, 45, 56], "inter": [12, 45, 56, 133, 191, 194], "panda": [12, 45, 60, 62, 75, 87, 134, 272, 301], "mar": [12, 45, 279, 284], "fastffi": [12, 64], "via": [12, 14, 17, 18, 20, 22, 23, 24, 41, 46, 50, 51, 52, 56, 60, 173, 184, 191, 267, 270, 272, 279, 284, 287, 295], "where": [12, 14, 18, 41, 46, 51, 52, 53, 56, 57, 61, 106, 121, 122, 124, 126, 130, 137, 147, 154, 172, 201, 205, 207, 216, 219, 220, 221, 222, 250, 272, 279, 299, 303], "origin": [12, 22, 56, 57, 60, 62, 90, 120, 122, 134, 135, 191, 213, 219, 258, 266, 270, 272, 278, 279, 284], "emploi": [12, 24, 32, 52, 55], "adjust": [12, 41], "old": [12, 14, 32], "input": [12, 17, 22, 24, 45, 52, 53, 56, 57, 61, 79, 83, 106, 120, 121, 122, 123, 124, 126, 129, 132, 135, 137, 205, 219, 221, 223, 229, 230, 264, 272, 275, 276, 279, 299, 304], "delta": [12, 61], "captur": 12, "20": [12, 32, 51, 58, 61, 62, 122, 123, 125, 191, 219, 220, 241, 243, 272, 279, 284, 295, 296, 302, 303], "100": [12, 32, 53, 61, 132, 137, 194, 201, 205, 212, 221, 272, 279, 299, 303], "build": [12, 32, 41, 49, 51, 53, 57, 60, 61, 70, 72, 122, 126, 128, 130, 131, 134, 220, 221, 222, 264, 279, 297, 304], "execut": [12, 14, 17, 23, 24, 45, 51, 53, 56, 60, 61, 62, 89, 90, 116, 126, 130, 134, 135, 137, 232, 276, 279, 284, 285, 295, 299, 303], "ani": [12, 17, 19, 20, 22, 24, 32, 46, 52, 55, 56, 59, 60, 62, 70, 77, 124, 134, 135, 136, 137, 148, 152, 167, 191, 196, 198, 201, 203, 219, 221, 223, 272, 275, 278, 284], "aglorithm": 12, "misc": 13, "modifi": [14, 20, 24, 73, 74, 91, 92, 127, 150, 203, 270], "compli": [14, 126], "think": [14, 24, 54], "principl": [14, 130], "privileg": 14, "experienc": 14, "inform": [14, 19, 41, 53, 56, 57, 64, 78, 120, 121, 122, 123, 126, 128, 130, 134, 137, 152, 170, 211, 233, 234, 262, 272, 279], "hop": [14, 51, 52, 56, 57, 120, 124, 126, 128, 129, 130, 132, 284], "neighbor": [14, 17, 18, 40, 55, 56, 57, 61, 63, 120, 121, 123, 124, 126, 128, 129, 130, 132, 133, 137, 142, 143, 162, 214, 215, 229, 232, 265, 272, 284, 295], "slowli": 14, "iter": [14, 17, 19, 20, 24, 52, 53, 55, 57, 61, 63, 120, 123, 132, 136, 137, 139, 140, 141, 142, 143, 148, 159, 160, 161, 162, 166, 167, 177, 178, 179, 181, 184, 186, 187, 190, 191, 219, 220, 221, 222, 223, 229, 232, 234, 266, 272, 284, 295, 299, 304], "piec": [14, 49, 131, 279], "destin": [14, 53, 57, 60, 62, 77, 121, 122, 123, 125, 126, 132, 134, 136, 278, 305], "abovement": [14, 55], "problem": [14, 24, 41, 44, 45, 52, 55], "peval": [14, 17, 18, 32, 55, 60, 67, 287, 295], "incev": [14, 17, 18, 32, 55, 60, 67, 287, 295], "assembl": [14, 32, 54, 55, 60, 134], "paper": [14, 24, 52, 53, 54, 58, 132, 137, 269, 279, 295, 299], "publish": [14, 24, 53], "convent": [14, 41, 205, 231], "colleg": 14, "textbook": 14, "given": [14, 20, 32, 45, 46, 53, 56, 57, 61, 124, 126, 129, 132, 134, 136, 171, 178, 189, 201, 202, 203, 204, 205, 206, 207, 215, 223, 224, 225, 229, 230, 231, 232, 236, 264, 267, 268, 271, 272, 278, 279, 284, 285, 286], "queri": [14, 19, 22, 32, 41, 45, 46, 49, 50, 51, 56, 57, 58, 59, 60, 61, 62, 63, 69, 75, 76, 85, 89, 90, 93, 97, 101, 102, 106, 116, 120, 122, 124, 126, 128, 132, 134, 136, 156, 157, 277, 279, 284, 285, 287, 299], "answer": [14, 32, 41, 52], "output": [14, 17, 24, 32, 45, 52, 53, 58, 60, 90, 98, 106, 120, 126, 128, 132, 134, 135, 219, 221, 223, 264, 276, 278, 284, 295, 296, 299, 304], "collect": [14, 32, 56, 132, 272, 284], "partial": [14, 18, 32, 60, 62, 121, 214, 284, 287], "complet": [14, 32, 56, 57, 120, 122, 126, 147, 172, 173, 175, 177, 178, 184, 189, 198, 229, 232, 256, 272], "worker": [14, 23, 32, 49, 122, 125, 132, 134, 279], "first": [14, 17, 19, 20, 24, 41, 45, 52, 53, 54, 55, 56, 57, 61, 62, 120, 121, 126, 128, 130, 134, 137, 141, 171, 187, 190, 199, 212, 215, 226, 227, 228, 229, 230, 233, 266, 271, 272, 275, 278, 284, 285], "against": [14, 61, 254], "Then": [14, 17, 19, 22, 23, 45, 52, 53, 57, 120, 126, 266, 285], "exchang": 14, "upon": [14, 46, 134], "receiv": [14, 17, 24, 52, 55, 63, 126, 130, 295], "until": [14, 17, 24, 131, 191, 214, 284, 303], "gener": [14, 17, 32, 45, 52, 53, 55, 56, 57, 61, 69, 120, 121, 122, 126, 132, 134, 136, 137, 272, 273, 277, 279, 285], "point": [14, 22, 55, 57, 120, 175, 200, 229, 232, 272, 284, 285], "final": [14, 17, 19, 24, 52, 56, 60, 120, 126, 128, 214, 234, 272], "revis": [14, 58], "do": [14, 18, 20, 41, 49, 60, 61, 62, 78, 96, 122, 134, 191, 203, 215, 219, 229, 232, 250, 266, 272, 275, 278, 279, 287], "auto": [14, 32, 40, 63], "fixpoint": 14, "monoton": 14, "condit": [14, 24, 58, 191, 220, 221, 222, 230, 231], "guarante": [14, 46, 121, 129, 137, 207, 272], "converg": [14, 24, 58, 61, 137], "correct": [14, 126, 134, 137], "long": [14, 17, 46, 56, 61, 126, 295, 303], "pseudo": 14, "dijkstra": [14, 18, 55, 137, 295], "": [14, 17, 18, 19, 20, 23, 24, 41, 49, 51, 53, 54, 55, 56, 57, 58, 61, 70, 87, 88, 106, 120, 122, 124, 126, 129, 131, 133, 134, 137, 173, 184, 191, 194, 196, 199, 203, 206, 208, 209, 210, 226, 234, 235, 236, 259, 262, 264, 272, 278, 279, 284, 303, 304], "def": [14, 18, 23, 53, 57, 67, 120, 122, 123, 124, 125, 126, 129, 132, 178, 295, 299, 300, 304, 305], "val": [14, 53, 57, 120, 136, 279, 299, 304], "heap": 14, "vertexheap": 14, "clear": [14, 20, 73, 74, 172, 174, 175, 177, 179, 181, 182, 184, 186, 187, 190, 201, 203, 204, 206, 208, 209, 210, 212, 216, 217, 218, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 267, 272, 274, 284], "empti": [14, 19, 40, 61, 63, 154, 178, 181, 211, 212, 250, 266, 272, 275, 284], "u": [14, 18, 20, 40, 41, 61, 126, 130, 132, 134, 137, 143, 166, 178, 191, 205, 211, 214, 219, 222, 234, 272, 295, 305], "top": [14, 22, 32, 46, 56, 124, 246, 284, 303], "vid": [14, 40, 60, 134], "distu": 14, "pop": 14, "get_outgoing_edg": [14, 18, 63, 295], "get_neighbor": 14, "distv": [14, 18, 295], "is_inner_vertex": 14, "return": [14, 18, 20, 40, 56, 57, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 126, 129, 130, 131, 132, 134, 135, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 278, 279, 284, 295, 304], "max_int": 14, "0": [14, 17, 18, 20, 22, 23, 24, 41, 45, 53, 57, 58, 60, 61, 62, 63, 76, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 143, 147, 148, 151, 152, 156, 166, 170, 171, 173, 174, 175, 176, 178, 181, 183, 184, 186, 187, 188, 190, 191, 194, 195, 196, 197, 199, 200, 201, 203, 204, 207, 210, 212, 219, 220, 221, 222, 223, 229, 230, 234, 237, 250, 255, 264, 266, 267, 272, 274, 275, 279, 284, 285, 295, 297, 298, 299, 300, 302, 303, 304, 305], "wanglei": 14, "hook": 14, "messagebuff": 14, "parallelexecutor": 14, "programm": [17, 52, 54, 64], "explor": [17, 45, 52, 53, 55, 56, 284], "constain": 17, "sever": [17, 20, 23, 36, 49, 51, 55, 57, 58, 62, 120, 126, 128, 130, 131, 137, 178, 272, 278, 279], "bf": [17, 32, 58, 61, 295], "demo": [17, 22, 23, 64, 279, 295], "p2p": [17, 22, 23], "load_p2p_network": [17, 18, 45, 61, 62, 295], "load_app": [17, 18, 22, 295], "turn": [17, 41, 58, 64, 266], "log": [17, 41, 49, 52, 298], "verbos": [17, 23, 41], "Or": [17, 19, 22, 279, 295, 305], "lauch": [17, 22, 295], "sess": [17, 22, 45, 61, 62, 108, 112, 134, 135, 279, 285, 295, 296, 297, 299, 300, 303, 305], "cluster_typ": [17, 22, 61, 62, 279, 295, 305], "dist": [17, 61, 62, 127, 130, 219, 221, 223, 279, 295, 303], "add_lib": [17, 22, 279], "home": [17, 22, 23, 45, 60, 127, 128, 130, 131, 133, 134, 137, 181, 295, 297, 305], "19": [17, 22, 23, 41, 58, 122, 123, 125, 298, 302], "shade": [17, 22, 23, 295], "replac": [17, 19, 22, 23, 58, 123, 124, 125, 134, 272, 279, 284], "algo": [17, 22, 23, 61, 68], "java_pi": [17, 61], "alibaba": [17, 22, 23, 51, 52, 57, 64, 127, 130, 295, 297, 305], "ctx": [17, 22, 60, 295], "_project_to_simpl": [17, 22], "threadnum": [17, 295], "fetch": [17, 85, 279, 295], "context": [17, 18, 20, 49, 56, 61, 63, 67, 68, 69, 75, 76, 93, 98, 101, 102, 104, 113, 117, 130, 134, 135, 137, 262, 277, 279, 295], "to_numpi": [17, 22, 61, 62, 134, 278, 295], "info": [17, 41, 63, 134, 272, 275, 279], "client": [17, 22, 23, 40, 51, 60, 61, 132, 279, 295, 297, 302], "doc": [17, 60, 65, 134, 221], "runnabl": [17, 23], "maven": [17, 23, 64, 295], "ad": [17, 19, 46, 51, 57, 58, 68, 69, 122, 134, 139, 140, 150, 208, 209, 210, 212, 266, 272, 303, 305], "configur": [17, 23, 41, 52, 60, 61, 71, 72, 78, 79, 84, 111, 131, 132, 134, 191, 201, 203, 279, 284], "groupid": [17, 23, 295], "artifactid": [17, 23, 295], "version": [17, 18, 20, 23, 41, 46, 52, 54, 56, 58, 61, 127, 134, 192, 193, 208, 210, 223, 229, 250, 272, 295, 298], "issu": [17, 41, 45, 46, 195, 196, 197, 261, 298], "shall": [17, 23], "fat": 17, "plugin": [17, 23, 295], "org": [17, 23, 41, 53, 55, 61, 137, 195, 196, 197, 211, 214, 221, 234, 238, 239, 240, 241, 243, 244, 245, 251, 252, 253, 254, 256, 257, 258, 259, 264, 295, 298, 299, 303], "apach": [17, 22, 23, 50, 51, 52, 56, 287, 295, 297, 301], "spark": 17, "unlik": [17, 52, 272], "subgraph": [17, 49, 51, 53, 54, 55, 61, 82, 90, 120, 126, 128, 134, 135, 137, 148, 151, 173, 184, 215, 272, 299, 303], "requir": [17, 20, 41, 45, 46, 52, 53, 55, 57, 61, 64, 78, 120, 121, 122, 124, 125, 129, 130, 131, 132, 133, 170, 218, 219, 223, 272, 279, 284, 286, 302], "less": [17, 61, 126, 133, 137, 189, 200, 211, 213], "superstep": [17, 24, 63], "been": [17, 23, 24, 41, 46, 50, 52, 55, 56, 57, 61, 111, 124, 126, 134, 135, 137, 191, 214, 264, 276, 279, 284, 287], "drastic": 17, "reduc": [17, 121, 124, 220, 221, 222, 272], "lead": [17, 24, 41, 201, 203], "great": [17, 23], "improv": [17, 19, 23, 46, 286], "separ": [17, 36, 46, 52, 121, 122, 219, 274], "round": [17, 24, 61, 63, 189, 199], "call": [17, 19, 24, 41, 52, 53, 55, 56, 57, 60, 63, 120, 122, 126, 129, 130, 134, 135, 167, 181, 182, 212, 223, 252, 264, 272, 275, 279, 284], "coverg": 17, "suppos": [17, 52, 134, 266], "class": [17, 18, 20, 22, 23, 53, 57, 60, 61, 62, 63, 67, 120, 121, 134, 135, 136, 137, 181, 250, 272, 276, 279, 295, 304], "put": [17, 22, 130, 279], "init": [17, 18, 40, 57, 60, 61, 63, 67, 120, 122, 123, 127, 130, 132, 272, 275, 279, 287, 295, 304, 305], "method": [17, 18, 20, 22, 23, 55, 60, 61, 63, 83, 96, 111, 120, 124, 128, 129, 134, 135, 137, 200, 208, 210, 219, 221, 272, 275, 277, 279, 287, 295], "befor": [17, 22, 23, 57, 60, 61, 64, 120, 126, 133, 172, 174, 175, 177, 179, 182, 184, 186, 187, 190, 201, 203, 204, 206, 208, 209, 210, 216, 217, 218, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 267, 274, 285], "simpli": [17, 20, 126, 194, 198, 272], "public": [17, 53, 58, 60, 130, 295, 299], "parallelappbas": [17, 295], "doubl": [17, 18, 40, 56, 58, 63, 121, 131, 242, 266, 285, 295, 303, 305], "traversecontext": [17, 295], "parallelengin": [17, 295], "overrid": [17, 60, 120, 130, 295], "void": [17, 24, 40, 60, 295], "ifrag": [17, 295], "parallelcontextbas": [17, 295], "parallelmessagemanag": [17, 295], "messagemanag": [17, 295], "innervertic": [17, 40, 60, 295], "adjlist": [17, 60, 63, 295], "getoutgoingadjlist": [17, 40, 60, 295], "nbr": [17, 20, 40, 60, 63, 272, 295], "dst": [17, 18, 45, 62, 120, 123, 134, 136, 278, 295, 304, 305], "largest": [17, 137, 217, 295], "vertexarrai": [17, 60, 63, 295], "setvalu": [17, 295], "math": [17, 53, 137, 221, 222, 299, 301], "max": [17, 63, 133, 137, 295, 303], "forcecontinu": [17, 295], "pars": [17, 61, 121], "paramet": [17, 41, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 108, 111, 114, 119, 121, 122, 124, 126, 129, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 154, 155, 156, 157, 161, 162, 166, 167, 170, 172, 174, 175, 177, 178, 179, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 279, 284], "maxiter": [17, 295], "jsonobject": [17, 295], "extend": [17, 23, 46, 62, 121, 129, 130, 218, 284, 295], "vertexdatacontext": [17, 60, 137, 295], "gsvertexarrai": [17, 295], "int": [17, 18, 19, 20, 23, 24, 40, 56, 60, 61, 62, 63, 96, 121, 122, 123, 124, 125, 126, 129, 132, 133, 134, 136, 137, 165, 170, 172, 174, 177, 179, 181, 182, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 233, 234, 235, 236, 267, 272, 274, 279, 295, 303, 305], "frag": [17, 18, 40, 67, 295], "createfficontext": [17, 295], "fals": [17, 18, 19, 20, 57, 60, 61, 63, 120, 121, 122, 126, 132, 134, 136, 137, 150, 154, 156, 157, 166, 168, 169, 194, 195, 196, 199, 205, 215, 230, 272, 275, 279, 295, 304], "arrai": [17, 40, 57, 60, 61, 62, 123, 124, 126, 129, 132, 272, 275, 285, 295], "avail": [17, 23, 45, 56, 58, 61, 114, 119, 132, 220, 221, 222, 272, 279, 295], "after": [17, 18, 20, 22, 32, 45, 54, 55, 57, 61, 62, 63, 72, 120, 121, 122, 123, 130, 131, 132, 137, 234, 245, 264, 272, 276, 278, 279, 284, 295], "10": [17, 20, 41, 44, 45, 53, 57, 58, 61, 121, 122, 123, 125, 126, 132, 137, 139, 140, 141, 175, 181, 191, 194, 196, 205, 206, 207, 208, 210, 214, 219, 223, 227, 243, 249, 254, 267, 272, 279, 284, 295, 298, 299, 303], "containskei": [17, 295], "getinteg": [17, 295], "javadoc": 17, "obtain": [17, 51, 53, 55, 57, 121, 125, 126, 128, 247, 250, 266, 272, 279], "mvn": [17, 22, 64], "By": [17, 20, 41, 45, 56, 121, 122, 137, 272, 284], "proper": 17, "javaapp": [17, 277, 295], "But": [17, 46, 64, 272, 278], "rememb": [17, 22, 23], "singel": 17, "full_jar_path": [17, 61, 295], "pack": [17, 23, 295], "java_app_class": [17, 61, 295], "fullli": [17, 295], "qualifi": [17, 61, 295], "b": [17, 18, 22, 126, 181, 199, 212, 218, 219, 223, 228, 229, 230, 232, 260, 268, 272, 284, 295, 303], "param": [17, 23, 41, 61, 80, 81, 97, 112, 114, 115, 116, 119, 126, 132, 134, 279, 295], "string": [17, 23, 56, 60, 61, 63, 67, 106, 121, 122, 123, 124, 125, 126, 129, 131, 132, 133, 134, 136, 137, 152, 156, 157, 166, 264, 266, 268, 272, 274, 295, 303, 305], "d": [17, 19, 20, 61, 124, 126, 129, 132, 137, 147, 192, 193, 201, 203, 204, 206, 207, 208, 210, 215, 219, 220, 221, 222, 223, 226, 263, 272, 274], "bother": 17, "click": [17, 57, 122, 123, 126, 296], "repositori": [17, 64, 279], "file": [17, 22, 23, 41, 57, 60, 61, 68, 93, 120, 121, 127, 132, 134, 170, 171, 222, 272, 274, 279, 295, 305], "meet": [18, 45, 52, 124, 125, 191, 220, 221, 222, 285, 287], "pure": [18, 60, 287], "just": [18, 19, 23, 41, 45, 46, 64, 130, 134, 272, 275, 279, 284, 285], "fulfil": [18, 54], "udf": [18, 67, 278, 295], "decor": [18, 295], "appasset": [18, 67, 68, 72, 277, 295], "vd_type": [18, 63, 67, 295], "md_type": [18, 63, 67, 295], "youralgorithm": [18, 295], "staticmethod": [18, 67, 295], "initi": [18, 19, 60, 121, 122, 132, 134, 136, 137, 211, 213, 214, 272, 275, 287, 295], "statu": [18, 41, 130, 131, 137, 287], "evalu": [18, 51, 53, 54, 58, 60, 61, 62, 72, 97, 106, 108, 112, 115, 116, 134, 135, 279, 287, 303], "cython": [18, 32, 41, 49, 97, 277, 295], "let": [18, 19, 57, 234, 278], "sssp_pie": [18, 295], "v_label_num": [18, 295], "vertex_label_num": [18, 63, 295], "v_label_id": [18, 63, 295], "rang": [18, 46, 51, 52, 53, 56, 57, 60, 62, 63, 75, 76, 87, 88, 93, 101, 102, 120, 125, 129, 177, 179, 181, 184, 187, 199, 205, 219, 220, 221, 222, 250, 272, 277, 284, 295, 298, 299, 303, 304], "init_valu": [18, 63, 295], "1000000000": [18, 61, 295], "pieaggregatetyp": [18, 63, 295], "kminaggreg": [18, 63, 295], "register_sync_buff": [18, 63, 295], "messagestrategi": [18, 60, 63, 295], "ksynconoutervertex": [18, 60, 63, 295], "get_config": [18, 63, 279, 295], "declar": [18, 46, 51, 56, 122, 284, 295], "native_sourc": [18, 295], "get_inner_nod": [18, 63, 295], "break": [18, 132, 295], "set_node_valu": [18, 63, 295], "els": [18, 40, 122, 132, 134, 230, 295], "e_label_num": [18, 40, 295], "edge_label_num": [18, 63, 295], "e_label_id": [18, 295], "third": [18, 52, 56, 134, 257, 258], "column": [18, 40, 45, 53, 57, 60, 62, 63, 69, 121, 131, 134, 265, 295, 299, 305], "get_int": [18, 63, 295], "get_node_valu": [18, 63, 295], "iv": [18, 295], "inner_nod": [18, 63, 295], "v_dist": [18, 295], "u_dist": [18, 40, 295], "rather": [18, 46, 56, 137, 191, 233], "than": [18, 23, 24, 41, 46, 50, 55, 56, 61, 122, 124, 126, 133, 137, 147, 181, 189, 191, 193, 198, 200, 211, 213, 222, 279, 284, 286, 287], "consid": [18, 55, 61, 62, 121, 122, 137, 201, 264], "classic": [18, 125, 273], "yourpregelalgorithm": [18, 295], "And": [18, 23, 45, 58, 61, 62, 125, 130, 275, 278, 279, 284], "look": [18, 20, 64, 133, 278], "sssp_pregel": [18, 295], "set_valu": [18, 63, 295], "src_id": [18, 40, 121, 122, 123, 125, 126, 129, 132, 136, 295], "cur_dist": [18, 295], "new_dist": [18, 295], "min": [18, 24, 63, 295, 303], "outgoing_edg": [18, 63, 295], "vote_to_halt": [18, 63, 295], "sin": [18, 295], "m_pi": [18, 295], "translat": [18, 52], "my": [18, 272, 275, 279], "my_app": [18, 295], "test": [18, 23, 41, 49, 51, 53, 57, 120, 130, 132, 136, 156, 157, 191, 272, 274, 279, 296, 297, 299, 304], "save": [18, 122, 137], "futur": [18, 284], "to_gar": [18, 295], "tmp": [18, 19, 41, 93, 98, 132, 279, 295, 298], "my_sssp_pregel": [18, 295], "gar": [18, 61, 68, 295], "later": [18, 20, 56, 134, 279, 302], "previou": [19, 61, 69, 120, 124, 126, 210], "usual": [19, 41, 45, 52, 55, 57, 126, 130, 133, 200, 223, 266, 272, 284, 285], "start": [19, 20, 37, 49, 56, 57, 59, 60, 62, 120, 124, 126, 135, 136, 137, 172, 197, 201, 203, 204, 207, 223, 237, 266, 274, 279, 284, 287], "construct": [19, 52, 57, 60, 112, 120, 121, 122, 123, 124, 134, 135, 139, 140, 180, 201, 203, 204, 206, 212, 216, 217, 218, 226, 229, 230, 231, 232, 234, 250, 254, 258, 264, 266, 279], "expand": [19, 124, 126, 273], "add": [19, 20, 23, 41, 53, 60, 63, 69, 70, 79, 121, 132, 134, 139, 140, 141, 191, 198, 211, 229, 232, 234, 250, 272, 275, 279, 296, 299, 300, 305], "add_edges_from": [19, 20, 156, 272], "add_nod": [19, 20, 272, 275], "number_of_nod": [19, 20, 137, 181, 265, 272], "similarli": [19, 20, 137, 175, 201, 203, 219, 222, 229, 272], "number_of_edg": [19, 20, 146, 181, 265, 272], "degre": [19, 20, 40, 45, 61, 63, 123, 124, 129, 137, 146, 171, 172, 191, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 217, 229, 230, 231, 232, 266, 272, 273], "sort": [19, 20, 40, 137, 143, 171, 175, 178, 181, 206, 207, 265, 266, 272], "n": [19, 20, 51, 57, 58, 61, 62, 124, 126, 129, 131, 137, 147, 151, 152, 154, 158, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 250, 265, 266, 267, 269, 272, 284], "connected_compon": [19, 137], "nx": [19, 20, 45, 71, 73, 74, 77, 80, 82, 84, 91, 92, 96, 99, 100, 134, 137, 272, 274, 275], "add_nodes_from": [19, 20, 272], "attribut": [19, 53, 55, 57, 60, 61, 95, 106, 122, 123, 125, 128, 132, 133, 136, 137, 139, 140, 141, 156, 157, 166, 178, 191, 196, 215, 219, 220, 221, 222, 223, 226, 227, 228, 262, 264, 266, 269, 270, 272, 273, 275], "color": [19, 20, 272], "red": [19, 20, 121, 272], "green": [19, 20], "add_edg": [19, 20, 45, 134, 150, 156, 157, 160, 165, 166, 272, 275, 299, 300, 305], "1415": [19, 20], "coeffici": [19, 61, 137], "all_pairs_shortest_path": 19, "sp": 19, "dict": [19, 20, 61, 62, 89, 90, 98, 119, 122, 123, 126, 134, 135, 219, 220, 221, 222, 229, 230, 250, 272, 278, 279], "draw": [19, 219, 222], "reli": [19, 127, 279], "matplotlib": 19, "should": [19, 20, 22, 23, 52, 57, 60, 61, 68, 71, 84, 95, 130, 131, 134, 136, 137, 167, 191, 219, 220, 221, 222, 272, 274, 284, 285], "instal": [19, 23, 41, 53, 61, 64, 130, 272, 275, 279, 296, 297, 298, 299, 302], "pip3": [19, 23, 41, 53, 296, 298, 302], "with_label": 19, "font_weight": 19, "bold": [19, 58], "see": [19, 20, 41, 51, 55, 56, 61, 62, 64, 112, 115, 116, 121, 122, 124, 129, 132, 134, 170, 180, 185, 191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 237, 264, 267, 269, 272, 274, 278, 279, 286], "much": [19, 22, 41, 122, 126, 284], "compar": [19, 49, 58, 60, 61, 123, 191, 278, 284], "twitter": [19, 58], "environ": [19, 20, 23, 24, 41, 45, 49, 51, 59, 61, 64, 127, 131, 137, 279, 298, 302], "wget": [19, 22, 23, 127, 303], "raw": [19, 22, 23, 57, 87, 88, 122, 128, 130, 131, 136], "githubusercont": [19, 22, 23], "gstest": [19, 22, 23, 295, 297], "master": [19, 22, 23, 24, 295], "p": [19, 20, 54, 61, 122, 132, 137, 195, 196, 197, 199, 208, 209, 210, 213, 214, 216, 218, 220, 221, 222, 223, 226, 228, 284, 303], "netwrokx": 19, "o": [19, 22, 23, 60, 132, 137, 154, 205, 207, 212, 220, 221, 222, 224, 225, 226, 272, 296, 299], "gs_nx": 19, "g1": [19, 134, 276, 285, 286], "read_edgelist": [19, 274], "expandvar": [19, 22], "nodetyp": [19, 274], "create_us": [19, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 201, 202, 203, 204, 206, 208, 209, 210, 212, 216, 217, 218, 224, 225, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 267, 274], "g2": [19, 134, 272, 276, 285, 286], "ret_g": 19, "ret_nx": 19, "comparison": [19, 46, 51, 55, 58, 284], "howev": [20, 24, 41, 45, 46, 52, 56, 57, 121, 122, 123, 128, 137, 201, 272], "lack": [20, 137], "capabl": [20, 46, 272, 284], "hashabl": [20, 152, 167, 229, 272, 274], "str": [20, 53, 57, 61, 62, 63, 68, 69, 75, 76, 77, 79, 85, 87, 88, 89, 90, 93, 95, 96, 97, 98, 101, 102, 114, 132, 134, 135, 150, 152, 266, 272, 274, 278, 279, 299, 300, 305], "float": [20, 56, 57, 58, 61, 120, 121, 122, 123, 131, 132, 133, 137, 191, 194, 195, 196, 197, 199, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 227, 228, 264, 272, 274, 279, 285, 303, 304, 305], "tupl": [20, 121, 122, 123, 132, 134, 137, 156, 157, 166, 178, 219, 223, 229, 268, 272, 274, 279], "bool": [20, 40, 60, 61, 63, 108, 134, 137, 144, 154, 156, 157, 166, 195, 205, 211, 215, 231, 272, 274, 279, 305], "though": [20, 191, 272], "yield": [20, 126, 132, 219, 223, 272], "form": [20, 52, 56, 61, 120, 122, 123, 126, 173, 193, 223, 238, 240, 243, 246, 250, 272, 278, 284], "node_attribute_dict": 20, "discuss": [20, 41, 137, 298], "incorpor": 20, "path_graph": [20, 137, 148, 150, 151, 157, 272, 274], "grown": [20, 181, 214, 272], "unpack": [20, 60, 272], "ebunch": [20, 272], "dictionari": [20, 61, 106, 137, 219, 220, 221, 222, 229, 230, 231, 232, 272, 274], "arrtibut": 20, "11": [20, 58, 61, 121, 122, 123, 125, 139, 140, 141, 177, 272, 296, 302], "note": [20, 53, 55, 61, 62, 63, 70, 111, 113, 122, 126, 134, 137, 146, 147, 150, 154, 167, 168, 169, 170, 171, 172, 178, 179, 184, 187, 189, 191, 192, 193, 194, 196, 198, 200, 201, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 249, 264, 265, 266, 267, 269, 272, 274, 275, 278, 279, 299, 305], "complaint": 20, "quietli": [20, 167, 272], "ignor": [20, 137, 148, 167, 272, 279], "present": [20, 52, 53, 64, 137, 148, 191, 272], "spam": 20, "stage": [20, 41, 46, 49, 126], "8": [20, 41, 51, 58, 61, 121, 175, 198, 217, 240, 249, 251, 257, 261, 267, 269, 272, 274, 285, 298, 303], "seen": 20, "basic": [20, 55, 56, 57, 120, 123, 128, 130, 131, 132, 191, 201, 206, 278, 284], "facilit": [20, 51, 121], "report": [20, 41, 58, 96, 195, 196, 197, 272, 275], "adj": [20, 63, 137, 272], "These": [20, 24, 53, 55, 56, 57, 126, 132], "view": [20, 24, 52, 80, 145, 149, 168, 169, 272, 275], "thei": [20, 24, 45, 46, 51, 52, 55, 57, 120, 121, 129, 134, 178, 186, 191, 219, 221, 222, 265, 266, 272, 278, 279], "continu": [20, 51, 52, 53, 57, 58, 120, 191, 229, 232], "item": [20, 52, 121, 122, 123, 126, 132, 137, 272], "span": 20, "instead": [20, 52, 122, 123, 124, 130, 131, 134, 198, 205, 210, 218, 219, 223, 229, 272, 278, 284], "specifi": [20, 23, 24, 51, 53, 55, 57, 61, 63, 68, 75, 76, 87, 88, 93, 97, 101, 102, 114, 119, 120, 121, 123, 126, 129, 134, 136, 137, 148, 156, 157, 178, 191, 201, 203, 204, 207, 208, 215, 219, 220, 221, 222, 223, 229, 232, 234, 237, 250, 269, 272, 274, 278, 279, 284], "incid": [20, 148, 149, 191, 213, 262, 272, 284], "One": [20, 46, 52, 61, 124, 126, 203, 212, 266], "subset": [20, 53, 178, 189, 278, 279, 284], "nbunch": [20, 145, 149, 151, 167, 272], "mean": [20, 60, 62, 67, 108, 122, 125, 126, 136, 137, 177, 194, 201, 211, 220, 221, 222, 272, 275, 278, 279, 285], "remove_nod": [20, 272], "remove_nodes_from": [20, 272], "remove_edg": [20, 272], "remove_edges_from": [20, 201, 203, 272], "instanti": [20, 61, 132, 285], "digraph": [20, 134, 139, 149, 151, 156, 157, 160, 165, 166, 177, 194, 195, 196, 199, 203, 204, 206, 208, 209, 210, 211, 215, 266, 267, 268, 270, 273, 274, 275], "edgelist": [20, 250, 274], "subscript": [20, 272], "notat": [20, 237, 239, 241, 243, 245, 251, 253, 272], "yellow": [20, 121], "blue": [20, 121, 272], "fast": [20, 61, 130], "undirect": [20, 61, 80, 122, 126, 134, 137, 143, 147, 169, 192, 193, 199, 201, 208, 210, 213, 215, 216, 217, 219, 220, 221, 222, 223, 229, 234, 238, 239, 242, 245, 246, 248, 254, 267, 269, 272], "twice": [20, 250, 272], "fg": 20, "add_weighted_edges_from": [20, 156, 272], "125": [20, 121, 205, 216], "75": [20, 53, 58, 137, 195, 196, 197, 199, 279, 299], "375": 20, "eattr": [20, 272], "wt": 20, "f": [20, 126, 137, 224, 225, 271], "attach": [20, 60, 121, 208, 211], "default": [20, 23, 41, 45, 58, 60, 61, 62, 63, 79, 85, 90, 112, 113, 117, 121, 122, 126, 133, 134, 136, 137, 139, 140, 141, 144, 166, 168, 169, 172, 174, 175, 177, 179, 181, 182, 184, 186, 187, 190, 191, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 232, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 264, 265, 267, 269, 270, 272, 274, 275, 279, 284, 305], "dai": [20, 272, 275], "fridai": [20, 272, 275], "mondai": 20, "5pm": [20, 272], "2pm": [20, 272], "room": [20, 272], "714": [20, 272], "special": [20, 52, 121, 240, 256, 266, 287], "numer": [20, 61, 62, 137, 272, 278], "k": [20, 40, 52, 53, 54, 56, 57, 61, 62, 124, 137, 174, 182, 192, 193, 194, 195, 197, 199, 200, 201, 208, 211, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 237, 272, 278, 299, 303], "to_direct": [20, 134, 192, 193, 208, 210, 272], "representaion": 20, "dg": [20, 51], "would": [20, 41, 52, 60, 61, 126, 132, 275, 278, 279], "represent": [20, 52, 54, 134, 270, 272], "dgv": 20, "as_view": [20, 168, 169, 272], "shallow": 20, "out_edg": [20, 149, 272], "in_degre": [20, 124, 126, 129, 132, 203, 229, 230, 272], "predecessor": [20, 142, 215, 266, 272], "successor": [20, 108, 142, 209, 210, 215, 272], "equival": [20, 41, 126, 191, 228, 272, 284], "sum": [20, 55, 61, 63, 137, 191, 196, 199, 201, 202, 203, 212, 219, 222, 223, 230, 231, 270, 272, 303], "out_degre": [20, 203, 229, 230, 272], "feel": [20, 41], "inconsist": [20, 58], "inde": [20, 22], "tendenc": 20, "lump": 20, "danger": 20, "measur": [20, 55, 61, 121, 137, 215, 216, 249], "probabl": [20, 61, 124, 129, 194, 195, 196, 197, 199, 201, 205, 208, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 228, 284], "convert": [20, 23, 57, 61, 75, 76, 87, 88, 101, 102, 120, 121, 128, 132, 192, 193, 250, 267, 272, 274, 275], "to_undirect": [20, 134, 208, 210, 272], "represet": 20, "revers": [20, 77, 80, 136, 137, 215, 223, 272], "retrun": 20, "theoret": 20, "load_ldbc": [20, 303], "foo": [20, 272], "famou": [22, 23, 271], "hadoop": 22, "cetric": 22, "aim": [22, 46, 55, 56], "stop": [22, 52, 60, 137], "intergr": 22, "open": [22, 46, 56, 132, 274], "actual": [22, 65, 125, 223, 272, 275, 284], "adapt": [22, 46, 58, 285, 286], "loader": [22, 49, 60, 70, 81, 277, 300, 301], "vertexinputformat": 22, "edgeinputformat": 22, "load_from": [22, 134, 279], "vformat": [22, 134], "p2pvertexinputformat": 22, "eformat": [22, 134], "p2pedgeinputformat": 22, "clone": [22, 64, 127, 297], "github": [22, 55, 61, 64, 127, 130, 222, 295, 297, 305], "gs_test_dir": 22, "graphscope_sess": [22, 134], "31": [22, 23, 45, 122, 123, 125, 305], "v_prop": [22, 60, 95], "vdata": 22, "e_prop": [22, 60, 95], "giraph_sssp": 22, "sourceid": 22, "success": [22, 64, 122, 206, 237], "faster": [22, 137], "toward": 22, "offici": [22, 56], "git": [22, 64, 130, 297], "cd": [22, 64, 127, 130, 132, 295, 297, 303], "pl": 22, "could": [22, 51, 59, 61, 115, 122, 124, 125, 134, 200, 284], "snapshot": [22, 46, 56], "directori": [22, 41, 51, 60, 65, 120, 131, 279, 296, 298, 299], "almost": [22, 207], "limit": [22, 41, 46, 55, 56, 57, 58, 279, 298, 303], "modif": [22, 51, 52, 134, 275], "writabl": 22, "caus": [22, 41, 122, 128, 171], "degrad": [22, 46], "procedur": [22, 70, 214], "except": [22, 41, 53, 125, 132, 150, 167, 171, 182, 191, 201, 203, 252, 272, 279, 299], "right": [22, 130, 173, 182, 184, 205, 270], "inputformat": 22, "coloc": 23, "sparksess": 23, "gssparksess": 23, "experi": [23, 45, 46, 51, 55, 58, 194], "enviro": 23, "proceed": [23, 194, 212], "side": [23, 55, 61, 79, 122, 175, 284], "venv": 23, "virtual": [23, 60, 130, 131], "virtualenv": 23, "pyspark_venv": 23, "bin": [23, 52, 146, 297, 303], "activ": [23, 57, 132, 279], "pyspark_venv_g": 23, "tar": 23, "gz": [23, 274], "neccessari": [23, 61], "upload": 23, "pyspark_driver_python": 23, "pyspark_python": 23, "archiv": [23, 52, 303], "oss": [23, 60, 127, 134, 295, 296, 305], "beij": [23, 57, 121, 296], "fixm": 23, "env": [23, 41, 127], "var": [23, 132, 305], "graphscope_hom": [23, 297], "gs_jar": 23, "l": [23, 57, 124, 192, 193, 195, 196, 197, 204, 205, 206, 208, 209, 210, 213, 220, 221, 222, 223, 225, 229, 230, 231, 232, 261, 264, 272], "lib": [23, 68], "port": [23, 41, 60, 279, 303, 305], "7077": 23, "standalon": [23, 41, 52, 305], "master_url": 23, "conf": [23, 60, 303], "executor": [23, 52], "driver": [23, 98, 134, 303], "2g": 23, "10g": [23, 297], "schedul": [23, 52, 279], "minregisteredresourcesratio": 23, "bfstest": 23, "placehold": 23, "acut": 23, "url": [23, 134, 135, 303], "rdd": 23, "pom": 23, "xml": [23, 60], "classifi": [23, 53, 57, 132, 295], "scope": [23, 134], "sure": [23, 126, 130, 132], "conflict": [23, 134, 262], "correctli": [23, 41, 51, 137], "resolv": [23, 41, 134], "goal": [23, 52, 55], "phase": [23, 24, 121, 126], "filter": [23, 56, 61, 62, 264, 278, 303], "reloc": 23, "shadedpattern": 23, "insteadof": 23, "graphgscop": 23, "relat": [23, 24, 41, 52, 53, 56, 57, 60, 122, 126, 132, 228, 264, 269, 284], "vineyard": [23, 40, 41, 46, 49, 51, 52, 56, 60, 62, 93, 98, 101, 102, 134, 135, 279, 295, 298, 299, 300, 303, 305], "memroi": 23, "vineyardmemori": 23, "memorystr": 23, "builder": [23, 40, 178], "config": [23, 96, 106, 114, 119, 120, 133, 136, 276, 279, 303, 304], "socket": [23, 60], "bound": [23, 56, 97, 191, 284, 285], "vineyardsock": 23, "filepath": 23, "sock": 23, "gssubmitjar": 23, "grapegraph": 23, "togsgraph": 23, "vd": 23, "classtag": 23, "ed": [23, 205, 219, 226, 249, 255], "grapegraphimpl": 23, "loadgraphtog": 23, "vfilepath": 23, "efilepath": 23, "numpartit": 23, "performac": 23, "observ": [23, 41, 55], "necessari": [23, 71, 79, 84, 121, 122, 124, 126, 134], "argument": [23, 57, 137, 139, 140, 141, 170, 178, 208, 215, 219, 220, 221, 222, 223, 250, 272, 275, 278, 279, 284, 295], "shell": [23, 61], "global": [24, 112, 134, 264, 279, 284, 303], "grow": [24, 45, 51, 191, 201, 208, 209, 210, 271], "capac": [24, 272], "must": [24, 41, 60, 62, 70, 121, 122, 124, 125, 126, 134, 136, 137, 150, 189, 191, 199, 202, 212, 214, 216, 219, 221, 223, 231, 234, 270, 272, 274, 278, 284], "indivis": 24, "succinctli": 24, "typic": [24, 45, 46, 54, 55, 56, 57, 121, 126, 201, 272, 278, 284], "satisfi": [24, 46, 56, 61, 64, 131, 137, 189, 219, 223, 230, 231, 287], "oppos": 24, "perspect": 24, "orient": [24, 46, 129], "encourag": 24, "googl": [24, 55, 297], "powergraph": [24, 46, 58], "wa": [24, 54, 58, 126, 137, 191, 206, 219, 220, 221, 222, 271, 284], "2010": [24, 58, 61, 137, 197, 264, 269], "sequenc": [24, 61, 134, 171, 191, 201, 202, 203, 204, 205, 206, 207, 223, 229, 230, 233, 266, 267, 272, 273, 284], "dure": [24, 41, 60, 121, 126, 191, 284, 285, 286], "conceptu": 24, "behavior": [24, 63, 279, 284], "whose": [24, 55, 124, 126, 137, 142, 162, 244, 248, 264, 266, 267], "termin": 24, "halt": [24, 56, 63, 211], "individu": [24, 49, 53, 55], "messageiter": [24, 63], "msg": [24, 63], "mindist": 24, "issourc": 24, "vertex_id": [24, 45, 305], "inf": 24, "done": [24, 121, 132, 137, 234], "getvalu": [24, 40], "mutablevalu": 24, "outedgeiter": 24, "getoutedgeiter": 24, "sendmessageto": 24, "votetohalt": 24, "drop": [24, 41], "dramat": 24, "face": [24, 55, 257, 258], "power": [24, 51, 61, 137, 191, 201, 249, 272], "law": [24, 191, 201], "solv": [24, 41, 44, 55], "gather": [24, 279], "scatter": [24, 122], "accumul": [24, 266], "prove": [24, 264], "entir": [32, 53, 57, 126, 137, 272], "main": [32, 46, 120, 129, 132, 137, 304, 305], "either": [32, 41, 52, 61, 122, 126, 134, 135, 175, 178, 191, 218, 229, 262, 272], "expect": [32, 41, 64, 201, 203, 205, 275, 279], "compil": [32, 41, 52, 61, 72, 285], "nativ": [32, 46, 52], "behind": [32, 285], "scene": [32, 129], "dispatch": [32, 52, 60], "lower": [32, 56, 191, 198, 211, 284], "cost": [32, 52, 56, 137], "ownership": 32, "libgrap": [32, 64], "lite": [32, 64], "were": [32, 55, 58, 223], "ldbc": [32, 46, 51, 55, 58, 300, 305], "benchmark": [32, 46, 51, 55, 191], "outperform": [32, 46, 51, 55], "art": [32, 51, 55, 58], "kkore": 32, "kshell": 32, "hit": [32, 61, 62, 137, 273, 278, 295], "df": 32, "voderank": 32, "all_pairs_shortest_path_length": 32, "attribute_assort": 32, "average_degree_assort": 32, "degree_assort": 32, "betweenness_centr": [32, 137], "closeness_centr": 32, "degree_centr": [32, 45, 61, 137, 273, 295], "eigenvector_centr": [32, 61, 137, 273, 295], "katz_centr": [32, 61, 137, 273, 295], "sampling_path": 32, "compos": [36, 46, 53, 55, 57], "intend": [36, 37, 264, 278], "affect": [36, 272], "alon": 36, "interact": [36, 45, 46, 51, 52, 55, 59, 85, 89, 90, 116, 134, 213, 262, 277, 279, 299, 303], "\u6807\u7b7e": 40, "\u8868\u793a\u67d0\u4e00\u7c7b\u9876\u70b9\u6216\u8005\u8fb9": 40, "\u5c5e\u6027": [40, 303, 305], "\u8868\u793a\u9876\u70b9\u6216\u8fb9\u6240\u5173\u8054\u7684\u6570\u636e": 40, "\u539f\u59cbid": 40, "oid": [40, 60, 62, 63], "\u539f\u59cb\u6570\u636e\u96c6\u4e2d\u7684id": 40, "\u4e0d\u540c\u6807\u7b7e\u7684\u9876\u70b9\u5141\u8bb8\u6709\u76f8\u540c\u7684oid": 40, "\u5b50\u56feid": 40, "fid": [40, 60, 63, 96], "\u5b50\u56fe\u7684\u552f\u4e00\u7f16\u53f7": 40, "\u5206\u533a\u5668": 40, "partition": [40, 130], "\u80fd\u591f\u786e\u5b9a\u9876\u70b9oid\u5230\u5206\u533aid": 40, "\u7684\u6620\u5c04": 40, "\u5b50\u56fe": 40, "\u901a\u8fc7\u5207\u8fb9\u5f97\u5230\u7684\u5b50\u56fe": 40, "\u5b58\u50a8\u4e86\u9876\u70b9": 40, "\u8fb9": [40, 295], "\u9876\u70b9\u6570\u636e": 40, "\u8fb9\u6570\u636e\u7b49\u4fe1\u606f": 40, "\u5185\u90e8\u70b9": 40, "inner": [40, 63, 134], "\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 40, "\u5916\u90e8\u70b9": 40, "outer": [40, 63, 187], "\u4e0d\u5c5e\u4e8e\u672cfragment\u7684\u9876\u70b9": 40, "\u672c\u5730id": 40, "lid": [40, 96], "\u53ea\u5728\u67d0\u4e2afragment\u5185\u90e8\u6709\u610f\u4e49": 40, "\u5168\u5c40id": 40, "gid": [40, 60, 96], "\u80fd\u591f\u8868\u793a\u4efb\u610f\u4e00\u4e2a\u9876\u70b9": 40, "\u88abfragment\u5171\u8bc6": 40, "vertexmap": 40, "\u7528\u4e8e\u5b58\u50a8gid": 40, "oid\u7684\u6620\u5c04\u5173\u7cfb": 40, "\u7684\u8282\u70b9": 40, "\u5b58\u5728\u4ee5\u4e0b\u7f16\u7801\u65b9\u5f0f": 40, "gid\u7f16\u7801": 40, "offset": [40, 123, 131, 175], "\u5176\u4e2d": [40, 295, 300], "\u548c": [40, 126, 295, 297, 298, 299, 300, 302, 303, 304, 305], "\u5171\u540c\u7ec4\u6210": 40, "\u67d0\u4e00\u7c7b\u9876\u70b9\u5728\u67d0\u4e2a": 40, "\u7684\u9876\u70b9": 40, "\u5e8f\u53f7": 40, "lid\u7f16\u7801": 40, "\u586b\u5145": 40, "\u603b\u662f": 40, "\u6309\u7167\u6267\u884c\u6d41\u7a0b\u7f16\u53f7": 40, "\u63cf\u8ff0\u4e86\u8f7d\u56fe\u7684\u4e3b\u8981\u903b\u8f91": 40, "\u5206\u4e3ahashpartitioner\u548csegmentedpartiton": 40, "\u521d\u59cb\u5316\u4ed6\u4eec\u9700\u8981\u7ed9\u51fafragment\u7684\u6570\u91cf": 40, "segmentedpartitioner\u8fd8\u9700\u7ed9\u51fa\u5168\u90e8\u7684oid": 40, "\u6bcf\u4e2a\u8fdb\u7a0b\u8bfb\u53d6\u4e00\u90e8\u5206\u70b9": 40, "\u8fb9\u6587\u4ef6": 40, "\u5f97\u5230\u591a\u4e2avertex": 40, "arrow": [40, 60, 71, 84, 134, 275], "\u548cedg": 40, "etabl": 40, "\u5176\u4e2dvtable\u6309\u7167\u9876\u70b9\u6807\u7b7e": 40, "\u5206\u7ec4": 40, "etable\u5148\u6309\u7167\u8fb9\u6807\u7b7e": 40, "\u540c\u4e00\u4e2a\u8fb9\u6807\u7b7e\u4e0b\u9762\u53c8\u6309\u7167src\u548cdst\u7684\u9876\u70b9\u6807\u7b7e\u5206\u7ec4": 40, "\u539f\u59cb\u7684\u9876\u70b9\u8868": 40, "\u8fb9\u8868": 40, "\u6bcf\u4e2a\u8fdb\u7a0b\u6301\u6709\u90e8\u5206\u7684\u6570\u636e": 40, "std": [40, 60], "vector": [40, 53, 57, 60, 63, 120, 128, 130, 137, 219, 223], "shared_ptr": [40, 60], "partial_v_t": 40, "partial_e_t": 40, "num": [40, 133, 284], "table\u5305\u542boid": 40, "table\u5305\u62ecsrc\u548cdst\u7684oid": 40, "\u8bbf\u95eevtable\u7684oid\u5217": 40, "\u6839\u636eoid\u67e5\u8be2partit": 40, "\u5c06\u8868\u4e2d\u7684\u8bb0\u5f55\u5206\u53d1\u7ed9\u9876\u70b9\u7684\u62e5\u6709\u8005": 40, "\u4eceshuffle\u540e\u7684vtable\u53d6\u51faoid\u6267\u884cal": 40, "gather\u64cd\u4f5c": 40, "\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u80fd\u591f\u83b7\u53d6\u7684\u6240\u6709oid": 40, "\u6839\u636efrag\u6570\u91cf": 40, "label\u6570\u91cf\u548c\u5168\u90e8oid": 40, "\u6bcf\u4e2a\u8fdb\u7a0b\u6784\u5efavertex": 40, "fid_t": [40, 60], "fnum_": 40, "label_id_t": [40, 60], "j": [40, 61, 132, 137, 170, 171, 192, 193, 201, 203, 204, 206, 212, 223, 226, 227, 228, 250], "label_num_": 40, "hashmapbuild": 40, "oid_t": [40, 60], "vid_t": [40, 60], "oid_arrays_": 40, "cur_gid": 40, "id_parser_": 40, "generateid": 40, "\u8d77\u59cbgid": 40, "int64_t": [40, 60, 61, 134, 285, 305], "vnum": 40, "length": [40, 45, 56, 61, 124, 137, 176, 178, 183, 205, 226, 230, 236, 258, 267, 272, 284, 305], "\u904d\u5386\u5168\u90e8\u5185\u90e8\u70b9": 40, "\u751f\u6210gid": 40, "emplac": 40, "getview": 40, "\u6309\u7167elabel\u904d\u5386\u6bcf\u4e00\u5f20edg": 40, "\u83b7\u53d6\u5230src\u548cdst\u7684label": 40, "\u8bbf\u95ee\u6bcf\u4e2asrc\u7684oid": 40, "\u6839\u636epartitioner\u83b7\u53d6fid": 40, "\u6839\u636efid": 40, "id\u548coid\u67e5\u8be2gid": 40, "\u751f\u6210gid\u6570\u7ec4": 40, "\u5904\u7406dst\u7684\u903b\u8f91\u540c\u7406": 40, "\u5f97\u5230src\u548cdst\u4e24\u4e2agid\u6570\u7ec4\u540e": 40, "\u66ff\u6362\u6389\u539fetable\u7684oid\u6570\u7ec4": 40, "\u5bf9etable\u6267\u884cshuffl": 40, "\u5c06\u76f8\u5e94\u7684\u884c\u4f20\u8f93\u7ed9\u6b63\u786e\u7684\u8fdb\u7a0b": 40, "\u5c06shuffle\u8fc7\u7684vtable\u548cetable\u9001\u7ed9basicarrowfragmentbuilder\u6784\u5efacsr": 40, "\u5904\u7406\u9876\u70b9": 40, "\u521d\u59cb\u5316id": 40, "parser": 40, "\u521d\u59cb\u5316ivnum": 40, "ovnum\u548ctvnum\u6570\u7ec4": 40, "\u6309\u7167vertex": 40, "label\u5206\u7ec4": 40, "\u904d\u5386\u6bcf\u4e00\u79cd\u9876\u70b9": 40, "\u5411vertex": 40, "map\u67e5\u8be2\u672cfragment\u7684\u5185\u90e8\u70b9\u6570\u91cf": 40, "\u5e76\u8bbe\u7f6e\u5bf9\u5e94\u7684ivnum": 40, "\u5c06vertex": 40, "table\u5408\u5e76\u6210\u4e00\u4e2achunk\u4fbf\u4e8e\u540e\u7eed\u8bbf\u95ee": 40, "vid_parser_": 40, "vertex_label_num_": 40, "vertex_tables_": 40, "resiz": 40, "ivnums_": 40, "ovnums_": 40, "tvnums_": 40, "size_t": [40, 60, 63, 131], "vertex_t": [40, 60], "combinechunk": 40, "default_memory_pool": 40, "vm_ptr_": 40, "getinnervertexs": 40, "fid_": 40, "\u5904\u7406\u8fb9\u5305\u62ec\u4ee5\u4e0b5\u4e2a\u6b65\u9aa4": 40, "\u904d\u5386\u6bcf\u4e00\u79cd\u8fb9": 40, "\u901a\u8fc7src": 40, "gid\u5217\u548cdst": 40, "gid\u5217\u67e5\u8be2\u51fa\u672cfragment\u6240\u6709\u7684\u5916\u90e8\u70b9": 40, "\u5e76\u6309\u7167vertex": 40, "edge_t": [40, 57, 121, 132], "table\u5408\u5e76\u6210\u4e00\u4e2achunk": 40, "\u627e\u51fa\u672cfragment\u5168\u90e8\u5916\u90e8\u70b9\u7684gid": 40, "collect_outer_vertic": 40, "dynamic_pointer_cast": 40, "typenam": [40, 60], "converttoarrowtyp": [40, 60], "arraytyp": [40, 60], "chunk": [40, 106], "\u6839\u636e\u5916\u90e8\u70b9\u7684gid": 40, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efagid\u5230lid\u7684\u6620\u5c04\u4e0e\u53bb\u91cd\u7684gid\u6570\u7ec4": 40, "\u5916\u90e8\u70b9\u7684lid\u7531label": 40, "id\u548c\u9876\u70b9\u5e8f\u53f7\u7ec4\u6210": 40, "\u9876\u70b9\u5e8f\u53f7\u4eceivnum\u5f00\u59cb\u8ba1\u6570": 40, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u586b\u5145ovnum\u548ctvnum": 40, "ovg2l_maps_": 40, "ovgid_lists_": 40, "cur_list": 40, "collected_ovgids_": 40, "\u6392\u5e8fgid": 40, "begin": [40, 45, 62, 63, 211, 278], "end": [40, 45, 46, 52, 53, 56, 57, 62, 63, 126, 131, 137, 151, 160, 165, 166, 179, 191, 274, 278, 284, 287], "cur_map": 40, "buildertyp": 40, "vec_build": 40, "\u751f\u6210\u5916\u90e8\u70b9\u7684lid": 40, "\u5176\u4e2dfid\u4e3a0": 40, "offset\u4eceivnum\u5f00\u59cb\u7f16\u53f7": 40, "cur_id": 40, "\u5904\u7406\u7b2c\u4e00\u4e2a\u5143\u7d20": 40, "append": [40, 53, 57, 63, 120, 131, 132, 203, 266, 299, 304], "cur_list_length": 40, "\u627e\u5230\u4e0d\u91cd\u590d\u7684\u4e24\u4e2agid": 40, "finish": [40, 57, 63, 122, 125], "\u6839\u636e\u4e0a\u4e00\u6b65\u6784\u6210\u7684gid\u5230lid\u7684\u6620\u5c04": 40, "\u5c06src\u548cdst\u7684gid\u90fd\u8f6c\u6362\u6210lid": 40, "\u5220\u9664edg": 40, "table\u7684src\u5217\u548cdst\u5217": 40, "gid\u5230lid\u8f6c\u6362\u51fd\u6570": 40, "generate_local_id_list": 40, "gid_list": 40, "lid_list": 40, "vec": 40, "getfid": 40, "\u751f\u6210\u5185\u90e8\u70b9lid": 40, "getlabelid": 40, "getoffset": 40, "\u67e5\u8be2g2l": 40, "\u901a\u8fc7gid\u627e\u5230\u5916\u90e8\u70b9lid": 40, "\u6839\u636esrc\u548cdst\u5217\u7684gid\u751f\u6210lid": 40, "edge_src_": 40, "edge_dst_": 40, "table\u7684src\u5217\u548cgid\u5217": 40, "\u53ea\u4fdd\u7559\u5c5e\u6027": 40, "tmp_table0": 40, "removecolumn": 40, "edge_tables_": 40, "\u6784\u5efacsr": 40, "\u5bf9\u4e8e\u6709\u5411\u56fe": 40, "\u6784\u5efa\u51fa\u8fb9\u548c\u5165\u8fb9\u4e24\u4e2acsr": 40, "\u9996\u5148\u6784\u5efa\u51fa\u8fb9csr": 40, "\u7edf\u8ba1\u6bcf\u79cd\u6e90\u9876\u70b9\u7684\u51fa\u5ea6": 40, "\u6784\u5efarow": 40, "offset\u6570\u7ec4": 40, "\u8bbf\u95ee\u6bcf\u6761\u8fb9": 40, "\u4f7f\u7528row": 40, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9nbr\u7684\u5730\u5740": 40, "\u586b\u5145dst": 40, "lid\u548ceid\u5230nbr": 40, "\u6309\u7167\u76ee\u7684\u9876\u70b9\u7684lid": 40, "\u5c06\u6bcf\u4e00\u4e2a\u6e90\u9876\u70b9\u7684\u76ee\u7684\u9876\u70b9\u6392\u5e8f": 40, "generate_directed_csr": 40, "vid_array_t": [40, 60], "src_list": 40, "dst_list": 40, "fixedsizebinaryarrai": 40, "int64arrai": 40, "edge_offset": 40, "actual_edge_num": 40, "v_label": [40, 60], "edge_num": [40, 96, 299, 303], "src_list_ptr": 40, "raw_valu": 40, "dst_list_ptr": 40, "\u8ba1\u7b97\u6e90\u9876\u70b9\u7684\u5ea6": 40, "\u4e3a\u6bcf\u4e00\u79cd\u9876\u70b9\u6784\u5efarow": 40, "tvnum": 40, "offset_vec": 40, "degree_vec": 40, "int64build": 40, "podarraybuild": 40, "nbr_unit_t": [40, 60], "edge_build": 40, "v_offset": 40, "\u83b7\u53d6\u76ee\u7684\u9876\u70b9\u6307\u9488": 40, "ptr": 40, "mutablepoint": 40, "\u586b\u5145\u76ee\u7684\u9876\u70b9lid": 40, "eid": [40, 134], "\u5176\u4e2deid\u7528\u4e8e\u4e4b\u540e\u83b7\u53d6\u8fb9\u4e0a\u7684\u5c5e\u6027": 40, "static_cast": 40, "eid_t": [40, 60], "\u66f4\u65b0offset": 40, "\u6307\u5411\u6e90\u9876\u70b9\u7684\u4e0b\u4e00\u6761\u51fa\u8fb9": 40, "\u5bf9\u4e34\u63a5\u70b9\u6309\u7167lid\u6392\u5e8f": 40, "const": [40, 60, 63, 130, 131], "offsets_ptr": 40, "lh": 40, "rh": 40, "\u6784\u5efa\u5165\u8fb9csr\u548c\u51fa\u8fb9\u540c\u7406": 40, "\u5bf9\u4e8e\u65e0\u5411\u56fe": 40, "\u51fa\u8fb9\u548c\u5165\u8fb9\u5171\u7528\u4e00\u4e2acsr": 40, "\u903b\u8f91\u548c\u6709\u5411\u56fe\u7c7b\u4f3c": 40, "\u4f46\u662f\u8981\u540c\u65f6\u7edf\u8ba1\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9\u7684\u5ea6\u6765\u6784\u5efarow": 40, "offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u6e90\u9876\u70b9\u7684nbr\u586b\u5145\u5165\u8fb9\u7684src": 40, "lid\u548ceid": 40, "\u540c\u65f6\u8fd8\u8981\u4f7f\u7528offset\u6570\u7ec4\u5b9a\u4f4d\u5230\u76ee\u7684\u9876\u70b9\u7684nbr\u586b\u5145dst": 40, "\u5c01\u88c5": 40, "seal": [40, 51, 57], "\u51c6\u5907\u597d\u9876\u70b9\u6570\u91cf": 40, "csr": [40, 134], "ovgid\u548cg2l_map\u540e": 40, "\u5c06\u4ed6\u4eec\u5c01\u88c5\u6210\u5404\u79cdvineyardobject": 40, "\u6839\u636emetadata\u4ecevineyard\u67e5\u8be2\u548c\u6784\u5efa\u4ee5\u4e0b\u6570\u636e\u7ed3\u6784\u4f5c\u4e3aarrowfragment\u7684\u6210\u5458": 40, "\u4e5f\u5c31\u662f\u8bf4": [40, 296], "\u4ee5\u4e0b\u6570\u636e\u90fd\u662f\u5b58\u50a8\u5728vineyard\u4e2d\u7684": 40, "\u5f53\u524dfragment": 40, "fragment\u603b\u6570": 40, "directed_": 40, "\u662f\u5426\u4e3a\u6709\u5411\u56fe": 40, "\u9876\u70b9\u79cd\u7c7b\u6570\u91cf": 40, "edge_label_num_": 40, "\u8fb9\u79cd\u7c7b\u6570\u91cf": 40, "propertygraphschema": 40, "schema_": 40, "shcema": 40, "\u5185\u90e8\u548c\u5916\u90e8\u70b9\u603b\u6570": 40, "\u9876\u70b9\u5c5e\u6027\u8868": 40, "\u4e0d\u5305\u542bid\u5217": 40, "\u5916\u90e8\u70b9gid": 40, "hashmap": 40, "gid\u5230lid\u6620\u5c04": 40, "\u8fb9\u5c5e\u6027": 40, "ie_lists_": 40, "oe_lists_": 40, "csr\u7ed3\u6784\u7684column": 40, "\u5bf9\u4e8e\u65e0\u5411\u56fe\u53ea\u6709oe_lists_\u88ab\u4f7f\u7528": 40, "ie_offsets_lists_": 40, "oe_offsets_lists_": 40, "csr\u7ed3\u6784\u7684row": 40, "vertex_map_t": [40, 60], "\u5269\u4e0b\u7684\u6210\u5458\u5c06\u6839\u636e\u4ee5\u4e0a\u4fe1\u606f\u6765\u6784\u5efa": 40, "edge_tables_columns_": 40, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u5c5e\u6027\u5217\u5730\u5740": 40, "flatten_edge_tables_columns_": 40, "\u540c\u4e0a": 40, "vertex_tables_columns_": 40, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u5c5e\u6027\u5217\u5730\u5740": 40, "ie_ptr_lists_": 40, "oe_ptr_lists_": 40, "\u6bcf\u4e00\u79cd\u9876\u70b9\u7684\u6bcf\u4e00\u79cd\u5165": 40, "\u51fa\u8fb9\u7684\u8d77\u59cb\u5730\u5740": 40, "\u4e5f\u5c31\u662fcolumn": 40, "index\u7684\u8d77\u59cb\u5730\u5740": 40, "ie_offsets_ptr_lists_": 40, "oe_offsets_ptr_lists_": 40, "\u51fa\u8fb9\u7684row": 40, "offset\u8d77\u59cb\u5730\u5740": 40, "offset\u7684\u8d77\u59cb\u5730\u5740": 40, "\u4ee5\u4e0b\u662f\u6bcf\u4e00\u79cd\u9876\u70b9": 40, "\u6bcf\u4e00\u79cd\u8fb9\u7684\u6e90\u9876\u70b9fid": 40, "\u76ee\u7684\u9876\u70b9fid": 40, "\u6e90\u9876\u70b9\u548c\u76ee\u7684\u9876\u70b9fid\u6784\u6210\u7684csr\u7ed3\u6784": 40, "idst_": 40, "odst_": 40, "iodst_": 40, "idoffset_": 40, "odoffset_": 40, "iodoffset_": 40, "\u4ee5\u4e0b\u5185\u5bb9\u63cf\u8ff0\u4e86\u8bbf\u95ee\u9876\u70b9": 40, "\u9876\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e\u7684api\u548c\u5b9e\u73b0": 40, "\u5185\u90e8\u70b9\u8303\u56f4\u7531\u8d77\u59cblid\u548c\u7ec8\u6b62lid\u6784\u6210": 40, "lid\u7684\u7f16\u7801\u5305\u542b\u4e86\u9876\u70b9label": 40, "id\u548c\u9876\u70b9\u5e8f\u53f7": 40, "\u5185\u90e8\u70b9\u7684\u9876\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 40, "ivnum": 40, "\u5916\u90e8\u70b9\u5e8f\u53f7\u8303\u56f4\u4e3a": 40, "\u5168\u90e8\u9876\u70b9\u5e8f\u53f7\u4e3a": 40, "vertex_range_t": [40, 60], "label_id": [40, 62, 63, 96], "\u751f\u6210lid\u7684\u8d77\u59cb\u548c\u7ed3\u675f\u8303\u56f4": 40, "\u7ed3\u675f\u8303\u56f4\u662f\u5f00\u533a\u95f4": 40, "outervertic": [40, 60], "\u6839\u636e\u9876\u70b9lid\u83b7\u53d6\u9876\u70b9\u7c7b\u578b": 40, "\u5c5e\u6027id": 40, "\u5217\u53f7": 40, "\u83b7\u53d6\u5230\u5217\u6307\u9488": 40, "\u7136\u540e\u4ecelid\u83b7\u53d6\u5230\u9876\u70b9\u5e8f\u53f7": 40, "\u884c\u53f7": 40, "\u5373\u53ef\u8bbf\u95ee\u5230\u9876\u70b9\u7684\u67d0\u4e2a\u5c5e\u6027": 40, "templat": [40, 60], "getdata": [40, 60], "prop_id_t": [40, 60], "prop_id": 40, "property_graph_util": [40, 60], "valuegett": 40, "\u8bbf\u95ee\u51fa\u8fb9\u9700\u8981\u7ed9\u51fa\u6e90\u9876\u70b9lid\u548c\u67d0\u4e00\u79cd\u8fb9\u7684\u7c7b\u578b": 40, "\u800c\u6e90\u9876\u70b9\u7684\u7c7b\u578b\u5df2\u7ecf\u88ablid\u7f16\u7801\u6240\u5305\u542b": 40, "\u6240\u4ee5\u4e0d\u7528\u7ed9\u51fa": 40, "adj_list_t": [40, 60], "e_label": [40, 60], "\u83b7\u53d6\u6e90\u9876\u70b9lid": 40, "\u83b7\u53d6\u6e90\u9876\u70b9\u7c7b\u578b": 40, "\u83b7\u53d6\u6e90\u9876\u70b9\u5e8f\u53f7": 40, "offset_arrai": 40, "\u8bbf\u95eerow": 40, "oe": 40, "\u83b7\u53d6\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 40, "\u751f\u6210adjlist\u5bf9\u8c61": 40, "\u5206\u522b\u4e3a\u51fa\u8fb9\u8d77\u59cb\u5730\u5740": 40, "\u7ed3\u675f\u5730\u5740": 40, "\u8fb9\u5c5e\u6027\u5217\u5730\u5740": 40, "\u548c\u51fa\u8fb9\u540c\u7406": 40, "\u53ea\u9700\u8981\u628aoe\u76f8\u5173\u53d8\u91cf\u540d\u6362\u6210ie\u5373\u53ef": 40, "getincomingadjlist": [40, 60], "ie": 40, "\u56e0\u4e3a\u5728adjlist\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u51fa\u8fb9\u5c5e\u6027\u8868\u7684\u8d77\u59cb\u5730\u5740": 40, "\u6bcf\u6761\u51fa\u8fb9\u8fd8\u5305\u542b\u4e86\u8fb9id": 40, "\u5bf9\u5e94\u5230\u884c\u53f7": 40, "\u56e0\u6b64\u518d\u7ed9\u51fa\u5c5e\u6027\u7684\u5217\u53f7\u5c31\u80fd\u591f\u53bb\u5f97\u5230\u5177\u4f53\u7684\u6570\u636e": 40, "\u4f8b\u5982": [40, 295, 299, 303, 305], "\u83b7\u53d6edg": 40, "get_data": 40, "struct": [40, 60, 195, 228], "\u83b7\u53d6\u5c5e\u6027\u5217\u7684\u5730\u5740": 40, "\u548ceid\u5c31\u80fd\u591f\u83b7\u53d6\u5230\u5177\u4f53\u7684\u5c5e\u6027": 40, "edata_arrays_": 40, "nbr_": 40, "free": [41, 46, 212, 219, 229, 232, 234, 265, 271, 279], "post": [41, 126, 191, 305], "what": [41, 49, 56, 131, 218, 272, 278], "minimum": [41, 61, 191, 279, 284], "resourc": [41, 45, 46, 52, 61, 68, 191, 224, 279, 286, 298], "deploi": [41, 46, 49, 51, 52, 53, 122, 279], "mode": [41, 60, 61, 62, 112, 116, 120, 124, 130, 132, 134, 135, 274, 279, 287, 305], "mininum": 41, "cpu": [41, 127, 279, 286, 298], "8g": 41, "cento": [41, 58, 298, 302], "ubuntu": [41, 127, 296, 298, 302], "18": [41, 58, 122, 123, 125, 137, 195, 244, 249, 253, 255, 258, 264, 295, 298, 302], "04": [41, 58, 127, 296, 298, 302], "maco": [41, 296, 298, 299, 302], "15": [41, 58, 122, 123, 125, 126, 232, 254, 265, 272, 279, 298], "depoly": 41, "kubernet": [41, 45, 51, 279, 296, 298, 299, 301, 305, 306], "v1": [41, 53, 56, 120, 237, 250, 275, 284, 298, 299, 304], "enssenti": 41, "No": [41, 272, 284], "pre": [41, 53, 56, 279, 298], "debug": [41, 121, 126, 279], "silent": [41, 272], "kubectl": [41, 298], "disk": [41, 52], "pod": [41, 45, 279, 296, 298, 299, 305], "why": [41, 61], "fail": [41, 137, 272, 284], "delet": [41, 91, 131, 279, 298], "manual": [41, 46, 52, 134], "helm": [41, 49, 279, 296, 298], "did": [41, 132], "rolebind": [41, 298], "uninstal": [41, 298], "releas": [41, 56, 58, 229, 232, 278, 279, 298, 302], "recycl": 41, "databas": [41, 49, 52, 58, 295], "serv": [41, 51, 122], "insid": [41, 61, 68, 121, 133, 134, 247, 278, 279, 284, 303], "gremlin": [41, 45, 46, 49, 52, 53, 57, 59, 85, 89, 90, 126, 135, 279, 298, 299, 301, 306], "link": [41, 44, 55, 57, 58, 61, 134, 137, 174, 195, 197, 198, 208, 209, 210, 269, 272, 279], "seem": 41, "stuck": 41, "possibl": [41, 52, 56, 57, 61, 122, 128, 129, 137, 205, 213, 214, 229, 230, 231, 232, 264, 268], "reason": [41, 121, 122, 252, 284], "might": [41, 137, 229, 272, 286], "wait": [41, 279], "readi": [41, 45, 52, 122, 124, 279], "consum": [41, 57, 128, 131], "poor": [41, 128], "network": [41, 45, 46, 49, 52, 53, 55, 58, 59, 61, 120, 121, 122, 124, 126, 128, 132, 137, 192, 193, 199, 201, 205, 208, 209, 210, 213, 225, 249, 260, 261, 263, 264, 269, 273, 285, 298], "acquir": 41, "request": [41, 60, 89, 90, 122, 130, 133, 135, 166, 272, 279, 298], "error": [41, 49, 60, 61, 126, 130, 134, 137, 171, 272], "mostli": [41, 97], "visibl": [41, 63], "engnin": 41, "mount": [41, 131, 279, 296, 298, 299], "volum": [41, 195, 196, 197, 207, 216, 261, 279], "cloud": [41, 46, 49], "setup": [41, 134, 279, 297], "extra": [41, 137, 233, 298], "relationship": [41, 52, 55, 57, 121, 122, 132], "k8s_vineyard_mem": [41, 114, 119, 279, 298], "vineyard_shared_mem": [41, 114, 119, 279, 298], "k8s_engine_mem": [41, 114, 119, 279, 298], "metadata": [41, 60, 134, 272], "blob": [41, 295], "shape": [41, 53, 60, 62, 123, 124, 125, 126, 129, 132, 136, 194, 299], "forth": 41, "smaller": [41, 58, 135, 137, 193, 194, 198], "chart": [41, 296, 298], "Its": [41, 251], "shared_mem": [41, 298], "appl": [41, 272, 298, 302], "m1": [41, 173, 298, 302], "grpcio": [41, 298], "openssl": [41, 298], "grpc_python_build_system_openssl": [41, 298], "grpc": [41, 60, 296, 298], "scipi": [41, 219, 220, 221, 222, 272, 275, 298], "anaconda": [41, 298], "wheel": [41, 190, 256, 298, 301], "nightli": [41, 298], "workaround": 41, "permiss": [41, 68, 298], "deni": [41, 68, 298], "pv": [41, 298], "nf": [41, 131, 298], "suppli": [41, 56, 221], "appear": [41, 61, 177, 179, 181, 184, 186, 213, 214, 272, 298], "kafka": [41, 298], "zookeep": [41, 298], "crashloopbackoff": [41, 298], "mkdir": [41, 132, 298], "cannot": [41, 46, 57, 60, 61, 122, 134, 191, 230, 231, 279, 284, 285, 298], "bitnami": [41, 298], "normali": 41, "root": [41, 54, 172, 174, 265, 266], "755": 41, "sepcifi": 41, "1001": 41, "solut": [41, 46, 52, 56, 57, 137, 298], "slution": 41, "brutal": 41, "chmod": [41, 298], "777": [41, 58, 298], "recommend": [41, 52, 57, 126], "eleg": [41, 45], "group": [41, 53, 55, 56, 60, 128, 134, 195, 196, 197, 199, 216, 244, 262, 303, 305], "grant": [41, 269], "timeout": 41, "rais": [41, 61, 68, 70, 106, 114, 119, 126, 134, 135, 137, 143, 152, 156, 157, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 206, 207, 211, 213, 216, 217, 218, 229, 232, 264, 267, 268, 272, 275, 279], "minut": 41, "increas": [41, 45, 122, 170, 171, 179, 201, 203, 211, 229, 232, 234], "timeout_second": [41, 114, 119, 279, 298], "600": [41, 58, 279, 298], "docker": [41, 51, 296, 299, 301, 302], "due": [41, 46, 52, 126], "block": [41, 123, 199], "etcd": [41, 279, 296], "enterpris": 41, "proxi": [41, 298], "properli": 41, "wrong": 41, "resolut": 41, "occup": 41, "hostnam": [41, 298], "variabl": [41, 67, 191, 284, 298], "no_proxi": [41, 298], "prefix": [41, 134, 266, 303], "suffix": 41, "convin": 41, "flush": 41, "stream": [41, 126, 131, 134, 284], "forcibli": 41, "contact": 41, "reach": [41, 56, 126, 131, 134, 137, 214, 229, 232], "slack": [41, 298], "dingtalk": [41, 298], "happi": 41, "challeng": [44, 49, 52], "90": [44, 58], "brief": 44, "world": [45, 52, 53, 55, 60, 137, 192, 193, 219, 284], "knowledg": [45, 57, 128], "traffic": 45, "web": [45, 61, 137, 205, 219, 224, 265], "ever": 45, "tri": [45, 56, 201, 207], "insight": [45, 55], "hidden": [45, 55, 57, 120, 304], "attract": 45, "attent": [45, 126], "feedback": 45, "workload": [45, 49, 51, 52, 58, 285, 286], "involv": [45, 46, 52, 55, 56], "compuatit": 45, "difficult": [45, 121, 131], "often": [45, 46, 52, 55, 56, 57, 122, 123, 126, 272], "tinkerpop": [45, 49, 51, 135, 301], "obstacl": 45, "attempt": [45, 46, 55, 56, 272], "verifi": [45, 58, 126], "effect": [45, 52, 124, 203, 272, 284], "suffer": [45, 55], "curv": [45, 55], "hard": [45, 233, 284], "workflow": [45, 52, 57, 60], "complic": [45, 52, 62], "sql": 45, "clean": [45, 64, 130], "deep": [45, 52, 57, 120, 125, 126, 128, 148, 151, 260, 272], "gnn": [45, 46, 49, 52, 53, 57, 120, 124, 125, 126, 128, 129, 279, 301, 304], "train": [45, 46, 52, 53, 59, 122, 125, 126, 128, 129, 132, 136, 279, 299, 304], "seamlessli": [45, 46, 51, 52], "co": [45, 53, 121, 299], "becom": [45, 272], "abstract": [45, 51, 52, 53, 57, 120, 121, 128, 130, 131], "hide": 45, "second": [45, 46, 52, 56, 58, 62, 128, 217, 218, 226, 227, 228, 229, 233, 271, 272, 279], "transfer": [45, 49, 51, 56, 303], "seamless": 45, "fit": [45, 64], "fist": 45, "establish": 45, "interpret": [45, 52, 137], "mount_dataset": 45, "ran": 45, "p2p_network": 45, "haslabel": [45, 303], "embed": [45, 53, 57, 121, 128], "part": [45, 52, 126, 127, 130, 132, 255, 272, 284], "suit": [45, 57], "wherea": [45, 191], "numpi": [45, 57, 60, 62, 76, 88, 98, 123, 124, 126, 127, 128, 129, 132, 134, 136, 137, 264, 272, 275, 301], "datafram": [45, 62, 75, 87, 98, 101, 134, 272, 295, 305], "head": [45, 284], "comment": [45, 121, 272, 274, 275, 300, 305], "csv": [45, 134, 272, 275, 299, 300, 305], "creationd": [45, 300, 305], "locationip": [45, 305], "browserus": [45, 305], "content": [45, 53, 137, 269, 305], "618475290625": 45, "2011": [45, 205], "08": [45, 58, 137], "17t14": 45, "26": [45, 58, 122, 123, 125, 221], "59": [45, 58], "961": 45, "0000": 45, "210": [45, 58, 268], "17": [45, 58, 122, 123, 125, 295], "48": [45, 58, 122, 123, 125, 224, 225, 271], "chrome": 45, "ye": [45, 272], "618475290626": 45, "17t11": 45, "21": [45, 58, 61, 122, 123, 125, 245], "570": 45, "thank": 45, "comment_replyof_com": 45, "274877907301": 45, "274877907299": 45, "274877907302": 45, "pd": [45, 305], "df_v": [45, 295, 305], "read_csv": [45, 305], "sep": [45, 305], "df_e": [45, 305], "add_vertic": [45, 134, 272, 275, 276, 299, 300, 305], "stand": [46, 124, 125], "among": [46, 55, 60, 131, 137, 266], "bunch": [46, 60], "summari": [46, 152], "search": [46, 49, 52, 55, 57, 61, 137, 301], "scalabl": [46, 56, 269], "primari": [46, 56], "concern": [46, 52], "transact": [46, 52, 56, 58, 295], "suitabl": [46, 52, 122, 126, 132, 191, 286], "platform": [46, 49, 58, 64, 121, 263, 279], "simultan": 46, "ideal": 46, "elabor": 46, "commit": [46, 58], "a038f97": [46, 58], "geminigraph": [46, 58], "170e7d3": [46, 58], "plato": [46, 58], "21009d6": [46, 58], "empir": 46, "studi": [46, 53, 218, 220], "graphalyt": 46, "demonstr": [46, 51, 57, 62, 120, 132, 134, 279], "furthermor": [46, 51, 52], "advantag": [46, 51, 286], "quickli": [46, 51, 52, 132, 279], "ecosystem": [46, 50, 51, 56, 287], "enjoi": 46, "neo4j": [46, 58], "janusgraph": 46, "nebula": 46, "cypher": [46, 52], "gql": [46, 52], "gie": [46, 49, 51, 52, 56, 58, 59, 89, 90, 296, 297, 306], "soon": [46, 58, 123], "mainli": [46, 128], "aspect": 46, "firstli": 46, "dbm": 46, "focu": [46, 56, 130], "groot": [46, 49, 52, 56], "failov": [46, 51], "mechan": [46, 287], "ensur": [46, 279], "relaunch": 46, "failur": 46, "recoveri": 46, "protocol": [46, 279], "too": [46, 122, 191, 272], "coars": 46, "grain": 46, "secondli": 46, "emphas": 46, "throughput": [46, 52], "concentr": [46, 51, 176], "latenc": [46, 52], "Such": [46, 56, 93, 98, 231, 240], "busi": [46, 52, 53], "intellig": [46, 229, 232], "cycl": [46, 56, 60, 139, 175, 176, 179, 190, 212, 216, 237, 239, 255, 259], "anti": [46, 52, 56], "monei": [46, 56], "launder": [46, 56], "invest": 46, "trace": [46, 61], "fraud": [46, 52], "gle": [46, 49, 51, 52, 57, 59, 296, 297, 304], "neural": [46, 49, 52, 53, 59, 120, 121, 124, 126, 128, 132], "industri": [46, 52, 57, 58], "pyg": [46, 51], "dgl": 46, "billion": [46, 52, 55], "ten": [46, 55, 124], "accommod": 46, "decoupl": [46, 52], "sampl": [46, 49, 51, 52, 53, 64, 121, 122, 123, 125, 128, 130, 133, 136, 211, 231, 264, 304], "independ": [46, 52, 121, 135, 148, 151, 199, 226, 272], "flexibli": [46, 51, 52], "nebular": 46, "multi": [46, 49, 51, 52, 56, 61, 124, 126, 128], "script": [46, 49, 57, 58, 89, 90, 120, 121, 132, 135, 296, 302], "addition": [46, 128, 137], "movement": [46, 126], "signific": 46, "overhead": [46, 121, 122], "loos": 46, "coupl": [46, 52, 252], "non": [46, 60, 63, 123, 161, 162, 182, 201, 203, 206, 230, 234, 241, 259, 272, 273, 284], "trivial": [46, 188], "layer": [46, 57, 120, 121, 124, 128, 132, 304], "copi": [46, 52, 77, 137, 144, 148, 150, 151, 209, 215, 270, 272, 275, 285], "superior": [46, 51, 53, 55], "technologi": 49, "graphcomput": [49, 303], "gl": [49, 57, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133], "respect": [49, 52, 53, 56, 61, 79, 98, 106, 123, 126, 137, 178, 191, 238, 272, 278, 284], "posit": [49, 61, 120, 126, 137, 182, 201, 203, 204, 206, 207, 211, 219, 220, 221, 222, 223, 267, 270, 285], "constraint": 49, "motiv": 49, "glossari": [49, 265], "gaia": [49, 52, 303], "ir": [49, 52], "pegasu": [49, 52], "frequent": [49, 52, 55], "ask": [49, 54], "question": [49, 298], "self": [49, 57, 106, 120, 123, 126, 137, 147, 160, 199, 201, 203, 205, 211, 219, 220, 221, 222, 223, 272, 273, 275, 279, 300, 304, 305], "analayt": 49, "dev": [49, 296, 297], "faq": 49, "monitor": [49, 51], "bulk": 49, "style": [49, 51, 52, 57, 277], "rust": 49, "linter": 49, "checker": 49, "contribut": 49, "page": [49, 54, 61, 65, 182, 197, 261, 301], "plai": [50, 59, 131, 136, 287], "expos": [50, 124, 135, 279, 287], "jdk": [50, 287, 295], "leverag": [50, 51, 56, 64, 264, 287], "jave": [50, 287], "javasdk": [50, 287], "intuit": [51, 279], "encapsul": [51, 57, 120, 126, 279], "servic": [51, 52, 55, 60, 279], "creation": [51, 122, 196], "transit": [51, 241, 269], "boost": [51, 60], "magnitud": 51, "server": [51, 52, 56, 59, 125, 130, 131, 132, 297, 303], "consol": [51, 56, 135, 301], "wrapper": [51, 56, 60, 72, 78, 134, 135], "interest": [51, 55], "rich": [51, 52, 55, 57, 122, 124], "commonli": [51, 284], "approach": [51, 52, 57, 125, 201, 214, 269], "neg": [51, 57, 120, 124, 126, 128, 132, 137, 156, 234], "gsl": [51, 52, 57, 122, 123, 124, 125, 129, 136], "come": [51, 52, 58, 123, 238, 275], "gcn": [51, 53, 57, 59, 120, 124, 128, 132, 299, 301, 304, 306], "gat": [51, 57, 120, 128, 304], "graphsag": [51, 57, 59, 120, 124, 126, 128, 132, 301, 304, 306], "deepwalk": [51, 120, 304], "trans": [51, 120, 304], "paradigm": [51, 52, 57, 120, 126], "tensorflow": [51, 52, 53, 57, 120, 121, 122, 125, 126, 128, 132, 299], "pytorch": [51, 52, 57, 126, 128], "backend": [51, 52, 134, 272, 279, 299], "onlin": 51, "fed": [51, 52, 53], "organ": [51, 52, 57, 59, 120, 122, 124, 128, 129, 208, 210, 249, 284], "offlin": 51, "softwar": [51, 52, 134, 284], "dockerfil": [51, 127], "ek": 51, "aw": [51, 58, 296], "ack": 51, "essenti": [51, 284], "situat": [51, 121, 122, 284], "roll": [51, 284], "back": [51, 130], "rapid": 52, "growth": [52, 209, 269], "commerc": [52, 55], "conduct": [52, 58, 126], "fraudul": 52, "review": [52, 61, 137, 201, 219], "collabor": 52, "inflat": 52, "rate": [52, 61, 219, 221, 222], "rank": [52, 60, 61, 62, 264, 278], "practic": [52, 56, 57, 121, 122, 124], "bui": [52, 123, 124, 125, 126, 129, 132], "sell": 52, "suspici": 52, "five": 52, "extern": [52, 279], "cliqu": [52, 55, 192, 193, 197, 198, 200, 214], "extract": [52, 53, 61, 68, 135, 279, 284], "predict": [52, 53, 57], "whether": [52, 56, 60, 61, 121, 122, 126, 134, 194, 196, 199, 219, 230, 231, 272, 284], "visual": 52, "webui": 52, "verif": 52, "far": [52, 121], "intertwin": 52, "aris": [52, 240], "vari": [52, 55, 121], "random": [52, 57, 58, 124, 125, 126, 129, 132, 173, 184, 191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 264, 267, 269, 271, 279], "walk": [52, 53, 56, 57, 126, 173, 184], "compris": [52, 56, 125], "date": 52, "characterist": [52, 120, 125], "trade": 52, "off": [52, 257], "tightli": [52, 55], "last": [52, 53, 126, 131, 134, 194, 266], "orchestr": 52, "tackl": 52, "aforement": [52, 121, 126], "particular": [52, 61, 123, 126, 201, 284], "de": [52, 284], "facto": 52, "illus": 52, "purpos": 52, "deal": [52, 124], "those": [52, 59, 124, 134, 137, 148, 177, 179, 181, 272, 274, 278], "plan": [52, 55, 56, 64], "diversifi": 52, "ship": [52, 53], "object": [52, 57, 58, 60, 71, 84, 98, 112, 121, 123, 124, 125, 126, 129, 132, 135, 136, 150, 170, 171, 229, 269, 272, 274, 275, 277, 278, 284, 295, 305], "focus": [52, 58, 126, 264], "ingest": 52, "hous": [52, 246, 247], "parti": [52, 252], "benefit": [52, 55], "chosen": [52, 201, 208, 209, 210, 211, 212, 223, 227, 267], "simplifi": [52, 53, 56, 121, 126], "mention": 52, "pick": [52, 58, 214, 229, 232], "highlight": [52, 56], "analyst": 52, "concurr": [52, 122], "evolv": 52, "univers": [52, 137, 170, 171, 218, 228, 260, 264], "olap": 52, "gen": [52, 126], "physic": [52, 61, 137, 195, 196, 197, 219], "cyclic": [52, 56, 179], "dataflow": 52, "ly": 52, "hiactor": 52, "actor": [52, 249], "oltp": 52, "sigmod2017": [52, 54, 295, 301], "successfulli": [52, 191], "ecommerc": 52, "financi": 52, "risk": 52, "quit": [52, 191], "definit": [52, 137, 218, 219, 221], "chase": 52, "tour": 53, "classif": [53, 57, 59, 120, 121, 132], "citat": [53, 59, 132, 299], "ogbn": [53, 299], "mag": [53, 299], "heterogen": [53, 55, 57, 121, 122, 123, 124, 126], "microsoft": [53, 299], "academ": [53, 299], "author": [53, 61, 137, 191, 279, 299], "institut": [53, 299], "field": [53, 124, 128, 132, 134, 218, 279, 296, 299], "venu": 53, "scientif": 53, "128": [53, 132, 299], "dimension": [53, 57, 121, 123, 124], "word2vec": [53, 299], "averag": [53, 61, 137, 191, 284], "word": [53, 56, 132, 134, 272], "titl": 53, "fly": 53, "field_of_studi": [53, 299], "cite": [53, 299], "year": [53, 55, 299], "subject": 53, "retriev": [53, 62, 75, 76, 87, 88, 93, 97, 101, 102, 123, 124, 126, 132, 137, 278, 284], "load_ogbn_mag": [53, 299, 305], "examin": 53, "exploratori": 53, "locat": [53, 56, 65, 122, 123, 134], "depth": [53, 120, 132, 137, 304], "count": [53, 55, 60, 61, 124, 125, 129, 130, 133, 137, 147, 205, 272, 299, 303], "4307": [53, 299], "submit": [53, 121, 122, 135, 299], "__": [53, 126, 284, 299, 303], "proven": 53, "decomposit": [53, 137], "triangl": [53, 56, 61, 137, 234, 238, 242, 246, 258, 273, 295, 299], "sub_graph": [53, 299, 300], "gte": [53, 284, 299, 303], "2014": [53, 137, 299], "lte": [53, 284, 299, 303], "2020": [53, 299], "simple_g": [53, 295, 299], "ret1": [53, 299], "k_core": [53, 61, 137, 273, 295, 299], "ret2": [53, 299], "add_column": [53, 60, 134, 295, 299, 300], "kcore": [53, 299], "tc": [53, 299], "downstream": [53, 126], "349": [53, 299], "categori": [53, 57, 132], "confer": [53, 124, 295], "paper_featur": [53, 299], "feat_": [53, 299], "lg": [53, 115, 279, 299], "graphlearn": [53, 120, 121, 122, 126, 127, 132, 133, 136, 279, 299, 304], "gen_label": [53, 115, 279, 299], "85": [53, 58, 61, 279, 299], "www": [53, 137, 191, 245, 254, 257, 299], "tf": [53, 57, 120, 121, 126, 127, 132, 299, 304], "disable_v2_behavior": [53, 299], "importerror": [53, 299], "egographsag": [53, 57, 299], "egosagesuperviseddataload": [53, 57, 299], "trainer": [53, 57, 120, 299, 304], "localtrain": [53, 57, 299], "supervis": [53, 59, 121, 124, 132, 279, 299], "train_gcn": [53, 299], "node_typ": [53, 57, 120, 122, 123, 126, 129, 132, 136, 299, 304], "edge_typ": [53, 57, 120, 122, 123, 124, 125, 126, 129, 132, 136, 299, 304], "class_num": [53, 120, 299, 304], "features_num": [53, 57, 120, 299, 304], "hops_num": [53, 57, 120, 299, 304], "nbrs_num": [53, 57, 299], "25": [53, 58, 122, 123, 125, 194, 196, 199, 218, 265, 299], "epoch": [53, 57, 120, 125, 299, 304], "hidden_dim": [53, 120, 132, 299, 304], "256": [53, 58, 201, 261, 299], "in_drop_r": [53, 299], "learning_r": [53, 132, 299], "01": [53, 61, 121, 137, 196, 299], "reset_default_tf_graph": [53, 299], "dimens": [53, 57, 121, 219, 220, 221, 222, 264, 299], "act_func": [53, 57, 299], "nn": [53, 57, 61, 120, 132, 299, 304], "relu": [53, 57, 299], "dropout": [53, 57, 132, 299], "train_data": [53, 57, 299], "mask": [53, 57, 136, 299], "train_embed": [53, 299], "forward": [53, 57, 126, 299], "src_ego": [53, 299], "train_label": [53, 299], "loss": [53, 132, 299, 304], "reduce_mean": [53, 57, 120, 132, 299, 304], "sparse_softmax_cross_entropy_with_logit": [53, 57, 120, 132, 299, 304], "logit": [53, 57, 132, 299], "adamoptim": [53, 132, 299], "test_data": [53, 57, 296, 299], "test_embed": [53, 299], "test_label": [53, 299], "test_indic": [53, 299], "argmax": [53, 299], "output_typ": [53, 106, 276, 299], "int32": [53, 121, 123, 131, 132, 299], "test_acc": [53, 57, 299], "div": [53, 299], "reduce_sum": [53, 299], "cast": [53, 132, 299], "float32": [53, 123, 132, 299], "130": [53, 299], "golssari": 54, "indroduc": 54, "gra": 54, "ph": 54, "arallel": 54, "ngine": 54, "inherit": [54, 57, 60, 120, 130], "persisit": 54, "tree": [54, 172, 174, 182, 202, 208, 210, 220, 221, 222, 235, 236, 273, 305], "movi": [54, 122], "guardian": 54, "galaxi": 54, "foundament": 54, "mangement": 54, "artial": 54, "ncrement": 54, "graphlab": 54, "ather": 54, "pply": 54, "catter": 54, "transport": 55, "protein": [55, 213], "broadli": [55, 57], "speak": [55, 122], "regard": 55, "discov": 55, "exploit": 55, "element": [55, 60, 121, 124, 126, 134, 137, 167, 199, 244, 266, 278, 279, 284], "fraction": [55, 61, 137, 191], "former": 55, "term": 55, "latter": [55, 284], "unless": [55, 124, 272], "otherwis": [55, 61, 121, 125, 126, 127, 137, 154, 191, 211, 221, 270, 272, 279], "maximum": [55, 61, 123, 137, 191, 207, 222, 223, 224, 225, 230, 271, 284], "bi": 55, "discoveri": [55, 279], "determin": [55, 56, 57, 60, 61, 122, 126, 217, 220, 221, 222, 279, 284], "rough": 55, "estim": [55, 56, 132, 137], "snap": 55, "stanford": [55, 263], "io": [55, 61, 131, 134, 222, 286], "cs224w": 55, "constitu": 55, "bellman": [55, 137], "ford": [55, 137], "select": [55, 57, 62, 69, 75, 76, 87, 88, 93, 101, 102, 120, 126, 134, 191, 200, 223, 235, 269, 272, 278, 279, 303], "en": [55, 61, 234, 238, 239, 240, 241, 243, 244, 245, 251, 252, 253, 254, 256, 257, 258, 259], "wikipedia": [55, 61, 234, 238, 239, 240, 241, 243, 244, 245, 251, 252, 253, 254, 256, 257, 258, 259, 265], "wiki": [55, 61, 234, 238, 239, 240, 241, 243, 244, 245, 251, 252, 253, 254, 256, 257, 258, 259], "27s_algorithm": 55, "sens": [55, 56, 264, 279], "potenti": [55, 57], "overlap": [55, 279], "dens": [55, 57, 123, 132], "intern": [55, 172, 295, 297], "repeatedli": 55, "rule": [55, 124, 130, 134, 171], "towardsdatasci": 55, "9bd8951e7da": 55, "websit": [55, 191], "internet": [55, 269, 271], "road": [55, 285], "map": [55, 56, 60, 121, 130, 134, 264, 284, 300, 303], "citi": [55, 57], "logist": 55, "deliveri": 55, "media": 55, "keep": [55, 63, 126, 134, 229, 232], "vast": 55, "nowadai": 55, "nontrivi": [55, 244], "desir": [55, 134, 191, 213, 233, 235, 236], "detial": 55, "On": [55, 61, 206, 269, 284], "reader": [55, 131], "turori": 55, "primarili": 56, "re": [56, 123, 126, 130, 132, 278, 285], "portion": [56, 62, 134], "occurr": 56, "massiv": 56, "imper": [56, 284], "exactli": [56, 61, 137, 182, 191, 205, 250, 278], "instruct": [56, 60, 72, 126], "unit": [56, 130, 220, 221, 222], "being": [56, 134, 171, 201], "histori": [56, 284], "account": [56, 270, 303], "path_opt": [56, 284, 303], "endv": [56, 303], "eq": [56, 61, 284, 303], "exact": [56, 201, 203, 299], "upper": [56, 191, 284], "exclud": 56, "skip": [56, 64], "repeat": [56, 126, 132, 206, 211, 214, 234, 237, 303], "expans": [56, 129, 303], "syntact": 56, "sugar": 56, "heurist": [56, 199], "purchas": 56, "bolder": 56, "border": 56, "v2": [56, 120, 250, 284, 304], "v3": [56, 58], "worst": 56, "intersect": [56, 273], "websocket": [56, 303], "succinct": 56, "becaus": [56, 120, 123, 137, 267], "consider": [56, 137, 194], "worth": [56, 126, 134, 272], "notic": [56, 126, 134, 265, 272, 285], "mutat": 56, "lambda": [56, 120, 126, 132, 137, 208, 219, 221, 222, 223, 304], "groovi": 56, "currenttimemilli": [56, 303], "expr": [56, 284, 303], "secondari": 56, "isn": [56, 125], "unsupport": [56, 284], "rocksdb": 56, "isol": [56, 137, 233], "schema": [56, 61, 121, 122, 131, 134, 272, 300, 303, 305], "therein": 56, "encod": [56, 61, 121, 126, 132, 136, 274, 304], "drive": 57, "carefulli": 57, "secur": 57, "briefli": 57, "rewind": 57, "mini": 57, "associ": [57, 206, 218, 264, 266, 272, 279, 284], "stack": 57, "aggreg": [57, 63, 120, 126, 128, 132, 303], "matrix": [57, 61, 128, 137, 199, 217, 232, 235, 264, 272, 275], "huge": [57, 285], "unseen": [57, 285], "illustr": [57, 123, 249], "topologi": [57, 123, 128, 269], "distributedli": [57, 122, 128, 130, 131, 132], "tensor": [57, 60, 61, 62, 102, 120, 124, 128, 130, 276, 278], "rel": [57, 122, 126, 137], "discret": [57, 120, 191, 204, 206, 212, 216, 227], "feasibl": 57, "idea": [57, 64, 128], "egograph": [57, 120, 128, 304], "ego": [57, 128, 273, 304], "fix": [57, 111, 264, 284, 285], "row": [57, 121, 134, 265], "conv": 57, "spars": [57, 120, 123, 199, 272, 275], "edge_index": 57, "cooper": [57, 120, 134], "unsupervis": [57, 59, 120, 126, 128, 129, 279], "syntax": [57, 62, 126, 272, 278, 284], "close": [57, 61, 122, 132, 135, 274, 279, 299], "understand": [57, 120, 126, 134], "randomli": [57, 126, 191, 197, 201, 203, 212, 214, 219, 222, 227, 269], "64": [57, 125, 126, 203, 303], "outv": [57, 120, 124, 126, 132, 303, 304], "edge_weight": [57, 124, 126], "123456": 57, "ag": [57, 120, 121, 134, 278, 284, 303, 304], "28": [57, 58, 122, 123, 125, 269], "plain": 57, "text": [57, 63, 173], "lookup": [57, 132, 272], "clearli": 57, "space": [57, 121, 122, 126, 137, 171, 219, 220, 221, 222, 223], "conveni": [57, 126, 270, 272], "batchgraph": 57, "cora": [57, 120, 132, 304], "convers": [57, 120, 121], "py": [57, 120, 127, 132, 295, 296, 297, 304], "node_t": [57, 120, 121, 132, 304], "edge_table_with_self_loop": [57, 120, 304], "train_tabl": [57, 120, 304], "val_tabl": [57, 120, 304], "test_tabl": [57, 120, 304], "tabl": [57, 58, 120, 122, 134], "distinguish": [57, 120, 121, 122], "valid": [57, 67, 120, 167, 191, 213, 219, 268, 279], "snippet": 57, "load_graph": [57, 120, 304], "arg": [57, 60, 61, 62, 63, 97, 123, 124, 125, 126, 129, 132, 136, 279], "dataset_fold": [57, 120, 304], "decod": [57, 120, 121, 122, 132, 304], "attr_typ": [57, 120, 121, 122, 132, 304], "attr_delimit": [57, 120, 121, 122, 304], "egodataload": 57, "dataload": 57, "neighbour": [57, 152], "sampler": [57, 125, 128, 130], "neg_sampl": 57, "batch_siz": [57, 120, 124, 125, 126, 129, 132, 286, 304], "train_batch_s": 57, "egosageconv": 57, "egolay": 57, "denot": [57, 125, 200, 284], "tfg": 57, "egognn": 57, "__init__": [57, 61, 120, 127, 134, 135, 136, 272, 273, 275, 279, 304], "dim": [57, 219, 220, 221, 222], "agg_typ": 57, "bn_func": 57, "kwarg": [57, 61, 62, 68, 79, 93, 97, 98, 119, 129, 134, 136, 279], "assert": [57, 61], "len": [57, 122, 137, 146, 177, 194, 196, 199, 201, 202, 206, 272], "homo_": 57, "in_dim": 57, "out_dim": 57, "super": [57, 61, 122, 126], "supervised_loss": 57, "localtftrain": [57, 120, 304], "conclud": [57, 120], "ego_sag": 57, "bipartit": [57, 59, 120, 122, 178, 226, 227, 228, 260, 304], "rgcn": 57, "ultra": 57, "council": 58, "grade": 58, "r6": 58, "8xlarg": 58, "alibabacloud": 58, "ec": 58, "32": [58, 122, 123, 125, 133, 137, 284], "thread": [58, 133], "xl": 58, "linux": [58, 64, 302], "variant": 58, "gcc": [58, 302], "v4": 58, "mpich": 58, "fair": 58, "huge_pag": 58, "jemalloc": 58, "disabl": [58, 279], "made": [58, 121, 124, 130, 137, 232], "o3": 58, "stub": [58, 65, 201, 229, 232], "determinist": [58, 63, 279], "cdlp": [58, 61, 295], "load_direct": 58, "load_undirected_from_direct": 58, "reformat": 58, "mark": [58, 137], "datagen": 58, "9_0": 58, "fb": 58, "62": 58, "42": [58, 122, 123, 125, 195, 197, 207, 265], "9_1": 58, "30": [58, 122, 123, 125, 196, 241, 243, 248, 303], "78": [58, 191, 265], "56": [58, 171, 265], "9_2": 58, "zf": 58, "41": [58, 122, 123, 125, 212, 265], "wcc": [58, 61, 295, 300], "14": [58, 122, 123, 125, 177, 237, 245, 257, 272], "88": [58, 204, 206], "60": [58, 137, 265], "61": 58, "07": [58, 191, 199], "50": [58, 219, 221, 222], "176": [58, 228], "87": [58, 263], "49": [58, 122, 123, 125], "graph500": 58, "13": [58, 121, 122, 123, 125, 177, 218, 279], "71": [58, 137, 209, 213, 219], "79": [58, 204, 206], "friendster": 58, "44": [58, 122, 123, 125, 265], "97": 58, "80": [58, 251], "24": [58, 122, 123, 125, 239, 257, 265], "39": [58, 122, 123, 125, 137, 265, 295, 297], "37": [58, 122, 123, 125, 137, 265, 297], "16": [58, 120, 122, 123, 125, 127, 228, 251, 265, 304], "86": 58, "53": [58, 265], "09": 58, "67": [58, 61], "74": [58, 263], "22": [58, 122, 123, 125, 265], "57": 58, "x": [58, 61, 120, 126, 132, 137, 175, 208, 216, 218, 219, 223, 247, 304], "40": [58, 122, 123, 125, 199, 265], "38": [58, 122, 123, 125, 265, 297], "73": [58, 218], "126": [58, 205], "98": 58, "83": 58, "66": 58, "1695": 58, "2742": 58, "47": [58, 122, 123, 125], "35": [58, 122, 123, 125, 132, 199, 249, 265, 284], "3600": 58, "34": [58, 122, 123, 125, 265], "425": 58, "55": [58, 171], "36": [58, 122, 123, 125, 177, 257, 265, 297], "lcc": 58, "521": 58, "51": [58, 265], "296": 58, "1859": 58, "201": [58, 268], "842": 58, "68": 58, "competitor": 58, "didn": 58, "produc": [58, 61, 69, 120, 132, 134, 135, 137, 191, 205, 207, 215, 276], "comprehens": [58, 59], "pagerank_loc": 58, "65": 58, "72": 58, "84": 58, "63": [58, 208, 210], "82": 58, "gunrock": 58, "0c9a96": 58, "tag": [58, 199, 279, 284, 297], "v0": [58, 127, 275, 279], "grout": 58, "5ce160": 58, "v7": 58, "openmpi": 58, "cuda": 58, "v10": 58, "gn6v": 58, "c8g1": 58, "16xlarg": 58, "8x": 58, "16gb": 58, "nvidia": 58, "v100": 58, "gb": 58, "devic": 58, "millisecond": 58, "soc": [58, 192, 193], "livejournal1": 58, "89": 58, "9345": 58, "215": [58, 261], "560": 58, "3029": 58, "129": [58, 227], "454": 58, "389": 58, "155": 58, "0549": 58, "sinaweibo": 58, "168": 58, "1649": 58, "647": 58, "172": 58, "03": 58, "orkut": 58, "105": [58, 192, 193], "121": 58, "193": 58, "658": 58, "54": [58, 212, 265], "3201": 58, "7677": 58, "137": [58, 199], "2139": 58, "319": 58, "261": 58, "69": [58, 259, 265], "235": 58, "334": 58, "567": 58, "283": 58, "073": 58, "6619": 58, "45": [58, 122, 123, 125, 201], "150": 58, "87299": 58, "162": 58, "000": 58, "60403": 58, "9676": 58, "141": 58, "347": 58, "27": [58, 122, 123, 125, 253, 284], "7772": 58, "0118": 58, "306": 58, "8618": 58, "9134": 58, "467": 58, "60801": 58, "8666": 58, "3501": 58, "870": 58, "6451": 58, "198": 58, "829": 58, "5036": 58, "229": 58, "127": 58, "024": 58, "483": 58, "178": 58, "5593": 58, "807": 58, "228": 58, "367": 58, "6946": 58, "2339": 58, "jupyt": [59, 279], "notebook": [59, 279], "jupyterlab": 59, "playground": [59, 306], "revisit": 59, "grapeengin": 60, "vineyardserv": 60, "grapeinst": 60, "graphscopeserv": 60, "inlin": 60, "listen": 60, "rpc": [60, 133, 279], "explicit": [60, 216, 272, 279], "dag_fil": 60, "dagfil": 60, "rundagfil": 60, "subscrib": 60, "mpi": 60, "coordin": [60, 85, 134, 184, 279, 296, 297, 299], "charg": 60, "commspec": 60, "comm_spec": 60, "vineyard_socket": 60, "bl": 60, "dispatchresult": 60, "onrec": 60, "commanddetail": 60, "cmd": 60, "gsobject": 60, "objectmanag": 60, "subclass": [60, 272], "appentri": 60, "icontextwrapp": 60, "ifragmentwrapp": 60, "projector": 60, "propertygraphutil": 60, "objecttyp": 60, "tostr": 60, "putobject": 60, "obj": 60, "removeobject": 60, "getobject": 60, "hasobject": 60, "analyticalserv": 60, "startserv": 60, "stopserv": 60, "engineconfig": 60, "tojsonstr": 60, "member": [60, 262], "vineyard_rpc_endpoint": 60, "enable_java_sdk": 60, "broadcast": 60, "setcommand": 60, "wrap": [60, 64], "enum": 60, "aggregatepolici": 60, "enumer": 60, "kpickfirst": 60, "kpickfirstnonempti": 60, "krequireconsist": 60, "kconcat": 60, "kpickfirstnonemptygraphdef": 60, "kmergegraphdef": 60, "worker_id": [60, 134], "error_cod": 60, "ok": 60, "set_error": 60, "has_large_data": 60, "set_graph_def": 60, "graphdefpb": 60, "graph_def": 60, "meta": [60, 123, 124, 134], "kept": [60, 284], "set_data": 60, "large_data": 60, "inarch": 60, "arc": 60, "aggregate_polici": 60, "frag_t": 60, "fragmentwrapp": 60, "seri": [60, 126], "serial": [60, 134, 284, 303], "transform": [60, 71, 84, 264, 272, 273, 277], "addcolumn": 60, "vdata_t": 60, "edata_t": 60, "arrowvertexmap": 60, "internaltyp": 60, "arrowprojectedfrag": [60, 68], "arrowprojectedfragmentbas": 60, "bareregist": 60, "arrowfrag": 60, "internal_oid_t": 60, "property_graph_typ": 60, "eid_typ": 60, "vertexrang": [60, 63], "inner_vertices_t": 60, "outer_vertices_t": 60, "vertices_t": 60, "sub_vertices_t": 60, "nbr_t": 60, "arrow_projected_fragment_impl": 60, "nbrunit": 60, "const_adj_list_t": 60, "property_vertex_map_t": 60, "arrowprojectedvertexmap": 60, "label_id_typ": 60, "prop_id_typ": 60, "property_graph_t": 60, "eid_array_t": 60, "data_t": 60, "vertex_array_t": 60, "inner_vertex_array_t": 60, "outer_vertex_array_t": 60, "objectmeta": 60, "preparetorunapp": 60, "prepareconf": 60, "fnum": [60, 63], "vertex_label": [60, 63], "edge_label": [60, 63, 279], "vertex_prop_id": 60, "edge_prop_id": 60, "mirrorvertic": 60, "getvertex": 60, "getid": 60, "getinternalid": 60, "getfragid": 60, "typedarrai": 60, "value_typ": 60, "gid2vertex": 60, "vertex2gid": 60, "getinnerverticesnum": 60, "getouterverticesnum": 60, "getverticesnum": 60, "getedgenum": 60, "getinedgenum": 60, "getoutedgenum": 60, "getoutgoingedgenum": 60, "getincomingedgenum": 60, "gettotalverticesnum": 60, "isinnervertex": 60, "isoutervertex": 60, "getinnervertex": 60, "getoutervertex": 60, "getinnervertexid": 60, "getinnervertexinternalid": 60, "getoutervertexid": 60, "getoutervertexinternalid": 60, "gid2oid": 60, "oid2gid": 60, "innervertexgid2vertex": 60, "outervertexgid2vertex": 60, "getoutervertexgid": 60, "getinnervertexgid": 60, "getincominginnervertexadjlist": 60, "getoutgoinginnervertexadjlist": 60, "getincomingoutervertexadjlist": 60, "getoutgoingoutervertexadjlist": 60, "src_fid": 60, "dst_fid": 60, "getlocaloutdegre": 60, "getlocalindegre": 60, "destlist": 60, "iedest": 60, "oedest": 60, "ioedest": 60, "get_out_edges_ptr": 60, "get_in_edges_ptr": 60, "get_oe_offsets_begin_ptr": 60, "get_oe_offsets_end_ptr": 60, "get_ie_offsets_begin_ptr": 60, "get_ie_offsets_end_ptr": 60, "get_edata_array_accessor": 60, "get_vdata_array_accessor": 60, "get_arrow_frag": 60, "static": [60, 285], "constexpr": 60, "loadstrategi": 60, "load_strategi": 60, "kbothoutin": 60, "regist": [60, 63, 93, 279], "getoid": 60, "getgid": 60, "vm": 60, "oid_typ": [60, 61, 90, 112, 134, 305], "vid_typ": 60, "oid_t_": 60, "vid_t_": 60, "arrowfragmentload": 60, "efil": 60, "vfile": 60, "generate_eid": [60, 112, 134, 305], "retain_oid": [60, 112, 134, 305], "graph_info": 60, "leaf": [60, 62, 108, 137, 182, 266], "table_vec_t": 60, "loadvertexedget": 60, "loadvertext": 60, "loadedget": 60, "objectid": [60, 134], "loadfrag": 60, "loadfragmentasfragmentgroup": 60, "addlabelstofrag": 60, "frag_id": 60, "addlabelstofragmentasfragmentgroup": 60, "initpartition": 60, "doxygenclass": 60, "arrowfragmentappend": 60, "doxygen": 60, "runner": [60, 295], "_build": 60, "context_t": 60, "appbas": 60, "defaultmessagemanag": 60, "explicitli": [60, 122, 191, 279], "message_manager_t": 60, "need_split_edg": 60, "message_strategi": 60, "konlyout": 60, "propertyappbas": 60, "propertymessagemanag": 60, "propertyautoappbas": 60, "propertyautomessagemanag": 60, "app_t": 60, "defaultwork": 60, "fragment_t": 60, "parallelenginespec": 60, "pe_spec": 60, "defaultparallelenginespec": 60, "getcontext": 60, "ostream": 60, "parallelpropertywork": 60, "parallelpropertymessagemanag": 60, "propertyautowork": 60, "pointer": 60, "appfram": 60, "creatework": 60, "deletework": 60, "lib_path": 60, "spec": [60, 132], "worker_handl": 60, "queryarg": 60, "query_arg": [60, 106, 276], "context_kei": 60, "frag_wrapp": 60, "functiontyp": 60, "argsnum": 60, "argsunpack": 60, "proto": [60, 79, 106], "datatyp": 60, "argtypeat": 60, "defaultpropertywork": 60, "ctx_t": 60, "ctxwrapperbuild": 60, "contextwrapp": 60, "vertexpropertycontext": [60, 295], "contextbas": 60, "labeledvertexdatacontext": 60, "contextdatatyp": 60, "icolumn": 60, "get_column": 60, "get_typed_column": 60, "vertex_properti": [60, 61, 63], "properties_map": 60, "vertexdatacontextwrapp": 60, "ivertexdatacontextwrapp": 60, "context_typ": [60, 61, 68], "fragment_wrapp": 60, "unique_ptr": 60, "tondarrai": 60, "todatafram": 60, "tovineyardtensor": 60, "tovineyarddatafram": 60, "toarrowarrai": 60, "tensorcontext": [60, 62], "set_shap": 60, "tensor_t": 60, "tensorcontextwrapp": 60, "itensorcontextwrapp": 60, "uint32_t": 60, "axi": [60, 61, 62, 76, 102, 132, 278], "cmake_extra_opt": 61, "asset": 61, "dag": [61, 62, 79, 134, 272, 276, 279], "byte": [61, 68, 131], "vertex_data": [61, 68], "labeled_vertex_data": 61, "dynamic_vertex_data": 61, "labeled_vertex_properti": 61, "cpp_pie": [61, 68], "cpp_pregel": 61, "cython_pi": 61, "cython_pregel": 61, "appdagnod": [61, 97, 103], "calcul": [61, 63, 123, 137, 191, 223, 284], "bytesio": [61, 68], "is_compat": 61, "graphdagnod": [61, 72, 87, 88, 105, 112, 115, 134, 135, 279], "invalidargumenterror": [61, 279], "scannererror": 61, "yaml": [61, 68, 303], "incorrect": 61, "signatur": [61, 126, 272], "resouc": 61, "__call__": 61, "fulli": [61, 70, 214], "app_asset": [61, 72, 78], "bind": 61, "concret": [61, 62, 134], "app_nod": 61, "reus": [61, 132, 134, 279], "subsequ": [61, 121, 122], "ones": [61, 128], "__del__": 61, "unload": [61, 83, 103, 105], "critic": 61, "attribute_assortativity_coeffici": [61, 295], "assort": 61, "ref": 61, "_": [61, 134, 137, 272, 275, 295, 298, 300, 305], "joint": [61, 229, 230, 231, 232, 273], "mix": [61, 284], "newman": [61, 137, 201, 203, 264], "026126": 61, "2003": [61, 137, 194, 201, 212, 220], "eager": [61, 62, 112, 115, 116, 134, 135, 279], "numeric_assortativity_coeffici": [61, 295], "average_degree_connect": [61, 295], "nearest": 61, "analog": 61, "k_": [61, 173, 237], "w": [61, 137, 199, 205, 219, 222, 224, 229, 232, 234, 262, 272, 274, 303], "rac": 61, "s_i": 61, "sum_": [61, 137, 205], "w_": [61, 137, 205], "ij": [61, 137], "k_j": 61, "valueerror": [61, 114, 119, 134, 137, 211, 268, 279], "barrat": 61, "barth\u00e9lemi": 61, "pastor": 61, "satorra": 61, "vespignani": 61, "pna": 61, "101": [61, 301], "3747": 61, "3752": 61, "2004": [61, 226], "average_shortest_path_length": [61, 137, 273, 295], "frac": [61, 137, 147, 205], "breadth": [61, 137], "vertexdatacontextdagnod": [61, 62], "avg_clust": [61, 295], "degree_threshold": 61, "greater": [61, 122, 137, 191, 222, 279], "threshold": [61, 219, 220, 221, 222], "1e9": 61, "degree_assortativity_coeffici": [61, 295], "y": [61, 218, 219, 223], "unweight": [61, 137], "foster": 61, "grassberg": 61, "paczuski": 61, "107": [61, 225], "10815": 61, "centrality_typ": 61, "normal": [61, 126, 134, 137, 194], "toler": [61, 137, 191], "1e": [61, 132, 137, 191], "06": [61, 137], "max_round": [61, 295], "eigenvector": [61, 137, 264], "html": [61, 137, 221, 224, 233, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 252, 254], "gv": 61, "hyperlink": [61, 137], "induc": [61, 82, 148, 151, 167, 215, 272, 284], "hub": [61, 62, 137, 190, 278], "hits_algorithm": 61, "vertexpropertycontextdagnod": [61, 62], "is_simple_path": [61, 295], "nonempti": 61, "explan": [61, 124], "biject": [61, 267], "smallest": [61, 224, 244, 254], "zero": [61, 121, 126, 137, 154, 172, 181, 214, 266, 267], "pairwis": 61, "left": [61, 134, 137, 173, 205], "remov": [61, 64, 127, 144, 150, 152, 198, 201, 203, 205, 247, 250, 266, 272, 284], "boolean": [61, 63, 122, 126, 137, 156, 157, 194, 196, 199, 230, 270], "k_shell": [61, 295], "That": [61, 131, 189, 232, 275, 285], "alpha": [61, 137, 211, 212, 223, 264], "beta": [61, 137, 212, 223], "katz": [61, 137], "stabl": [61, 134, 302], "katz_centrality_numpi": [61, 137], "auttenu": 61, "factor": [61, 137, 172, 182, 204, 206], "immedi": [61, 63, 126, 137, 275, 279], "maximun": 61, "min_progress": 61, "1000": [61, 122, 137, 269, 272], "progress_tri": 61, "progress": [61, 216], "met": 61, "exit": [61, 303], "belong": [61, 62, 63, 134, 262, 265, 272, 278], "blondel": 61, "et": [61, 269], "al": [61, 269], "unfold": 61, "stat": [61, 219, 221], "mech": 61, "10008": 61, "2008": [61, 191, 214], "sotera": 61, "lpa_u2i": [61, 295], "labeledvertexpropertycontextdagnod": [61, 62], "evalut": 61, "dump": [61, 98, 134], "pagerank_nx": [61, 295], "max_it": [61, 137, 191], "tol": [61, 137, 191], "solver": 61, "voterank": [61, 295], "num_of_nod": 61, "unsign": 61, "seed": [61, 120, 128, 132, 191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 227, 228, 229, 232, 264, 267, 269], "vote": [61, 63], "weakli": [61, 137, 211], "basecontextdagnod": [62, 134], "bound_app": [62, 78], "contextdagnod": 62, "ndarrai": [62, 76, 88, 123, 124, 126, 129, 134, 136, 272, 305], "to_vineyard_tensor": [62, 278, 295], "to_vineyard_datafram": [62, 278, 295], "lazi": [62, 134, 279], "sg": 62, "r1": [62, 285, 286], "ramework": 62, "resultdagnod": [62, 98, 135], "r2": [62, 285, 286], "r3": [62, 285], "r4": [62, 285], "62586": 62, "vertex_rang": [62, 75, 76, 87, 88, 93, 101, 102, 134, 278], "slice": [62, 134, 278], "ident": [62, 77, 134, 168, 169, 173, 244, 264, 266, 272], "comparis": 62, "alphabet": [62, 278], "omit": [62, 145, 305], "tensorcontextdagnod": 62, "meaning": [62, 134], "yet": [62, 229, 232, 272, 278, 284], "quer": [62, 89, 135, 278], "labeledvertexdatacontextdagnod": 62, "label_nam": [62, 278], "property_nam": [62, 63, 278], "column_nam": [62, 278], "labeld": [62, 121], "context_nod": 62, "result_schema": 62, "preserv": [62, 134, 234, 264], "referenc": 62, "dynamicvertexdatacontext": 62, "dag_nod": 62, "op": [62, 71, 73, 74, 75, 76, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 101, 102, 103, 105, 106, 130, 272, 276, 279], "alwai": [62, 168, 169, 208, 210, 229, 232, 266], "get_str": 63, "property_id": 63, "get_doubl": 63, "edge_label_id": 63, "edge_label_nam": 63, "incoming_edg": 63, "longer": [63, 279], "addr": [63, 279], "register_aggreg": 63, "pregelaggregatortyp": 63, "aggr_typ": 63, "get_aggregated_valu": 63, "get_total_vertices_num": 63, "vertex_property_num": 63, "vertex_label_nam": 63, "vertex_label_id": 63, "edge_property_num": 63, "get_vertex_label_by_id": 63, "get_vertex_label_id_by_nam": 63, "get_edge_label_by_id": 63, "get_edge_label_id_by_nam": 63, "edge_properti": 63, "get_vertex_property_id_by_nam": 63, "vertex_property_nam": 63, "get_vertex_property_by_id": 63, "vertex_property_id": 63, "get_edge_property_id_by_nam": 63, "edge_property_nam": 63, "get_edge_property_by_id": 63, "edge_property_id": 63, "queue": 63, "kboolandaggreg": 63, "AND": 63, "noth": [63, 78, 134, 136, 272], "kbooloraggreg": 63, "OR": [63, 272], "kbooloverwriteaggreg": 63, "overwritten": 63, "kdoubleminaggreg": 63, "kdoublemaxaggreg": 63, "kdoublesumaggreg": 63, "kdoubleproductaggreg": 63, "kdoubleoverwriteaggreg": 63, "kint64minaggreg": 63, "int64": [63, 90, 112, 121, 123, 124, 129, 131, 132, 134, 305], "kint64maxaggreg": 63, "kint64sumaggreg": 63, "kint64productaggreg": 63, "kint64overwriteaggreg": 63, "ktextappendaggreg": 63, "kalongoutgoingedgetooutervertex": 63, "kalongincomingedgetooutervertex": 63, "kalongedgetooutervertex": 63, "sync": [63, 131], "nerghbor": 63, "get_total_nodes_num": 63, "get_nodes_num": 63, "get_inner_nodes_num": 63, "get_outer_nodes_num": 63, "outer_nod": 63, "get_node_fid": 63, "is_inner_nod": 63, "is_outer_nod": 63, "get_nod": [63, 123], "get_outer_nod": 63, "get_node_id": 63, "get_incoming_edg": 63, "has_child": 63, "child": [63, 174, 266], "has_par": 63, "parent": [63, 64, 106, 111, 266], "get_indegre": 63, "get_outdegre": 63, "kmaxaggreg": 63, "ksumaggreg": 63, "kproductaggreg": 63, "koverwriteaggreg": 63, "subproject": 64, "scratch": 64, "readm": 64, "never": [64, 272], "hopefulli": 64, "inspir": [64, 272], "dskiptest": 64, "dmaven": 64, "antrun": 64, "moment": 64, "remot": [64, 135, 279, 303], "analytical_engin": [64, 295], "jni": 64, "doesn": [64, 126, 134, 201, 203, 205, 272, 278, 285], "mac": [64, 297, 299], "gae_java": 65, "graphscope_typ": 67, "graphscopetyp": 67, "myalgorithm": 67, "previous": [68, 208, 209, 210], "filenotfounderror": 68, "permissionerror": 68, "typeerror": [68, 106, 279], "zip": [68, 219, 223, 272, 303], "gs_conf": 68, "class_nam": 68, "compatible_graph": 68, "arrowproperti": 69, "subrang": 69, "loader_op": 70, "notimplementederror": 70, "encount": 70, "implicitli": 70, "arrow_properti": [71, 275], "run_app": [75, 76, 93, 101, 102], "copy_typ": 77, "session_id": [79, 83, 106, 134, 135, 272, 276], "graph_typ": [79, 272], "graphtyp": [79, 272], "view_typ": 80, "vertex_or_edge_label_list": 81, "graph_util": 81, "vertexlabel": 81, "edgelabel": [81, 284], "op_typ": [83, 106, 276], "uiliti": 83, "dynamic_properti": [84, 275], "result_set": 85, "fetch_typ": 85, "raphscop": 85, "resultsetdagnod": 85, "resultset": 85, "interactive_queri": [89, 90, 116, 279], "request_opt": [89, 90, 135], "interactivequerydagnod": [89, 90, 116], "gremlin_script": [90, 135], "modify_typ": [91, 92], "attr": [91, 92, 106, 126, 139, 140, 141, 272, 275], "type_pb2": [91, 92, 96], "nx_add_edg": 91, "nx_del_edg": 91, "nx_update_edg": 91, "insert": 91, "nx_add_nod": 92, "nx_del_nod": 92, "nx_update_nod": 92, "fd": [93, 98, 295], "storage_opt": [93, 98], "write_opt": [93, 98], "adaptor": 93, "result_path": [93, 98], "vertex_collect": 94, "edge_collect": 94, "report_typ": 96, "simul": [96, 132], "variati": 96, "node_num": [96, 299, 303], "has_nod": [96, 272], "has_edg": [96, 272], "node_data": 96, "edge_data": [96, 285], "neighbors_by_nod": 96, "succs_by_nod": 96, "preds_by_nod": 96, "neighbors_by_loc": 96, "succs_by_loc": 96, "preds_by_loc": 96, "deg_by_nod": 96, "in_deg_by_nod": 96, "out_deg_by_nod": 96, "deg_by_loc": 96, "in_deg_by_loc": 96, "out_deg_by_loc": 96, "nodes_by_loc": 96, "loc": 96, "grape_engin": 96, "multigraph": [96, 137, 139, 147, 151, 160, 165, 166, 192, 193, 201, 203, 216, 217, 218, 272, 275], "multidigraph": [96, 139, 151, 160, 165, 166, 203, 211, 212, 270, 272], "hdf": [98, 131, 134, 295, 305], "large_attr": [106, 276], "types_pb2": [106, 272], "operationtyp": 106, "opdef": [106, 110], "attrvalu": [106, 134, 303], "largeattrvalu": 106, "op_def_pb2": 110, "accordingli": 111, "incoming_data": [112, 134], "vertex_map": [112, 134], "as_default": [112, 279], "num_work": [114, 119, 279, 303], "log_level": [114, 119, 279], "k8s_namespac": [114, 119, 279], "k8s_service_typ": [114, 119, 279, 299], "k8s_gs_imag": [114, 119, 279, 297], "k8s_etcd_imag": [114, 119], "k8s_image_pull_polici": [114, 119, 279], "k8s_image_pull_secret": [114, 119, 279], "k8s_coordinator_cpu": [114, 119, 279], "k8s_coordinator_mem": [114, 119, 279], "k8s_vineyard_daemonset": [114, 119, 279], "k8s_vineyard_cpu": [114, 119, 279], "k8s_engine_cpu": [114, 119, 279], "k8s_mars_worker_cpu": [114, 119, 279], "k8s_mars_worker_mem": [114, 119, 279], "k8s_mars_scheduler_cpu": [114, 119, 279], "k8s_mars_scheduler_mem": [114, 119, 279], "enabled_engin": [114, 119, 279], "with_mar": [114, 119, 279], "with_dataset": [114, 119, 279, 305], "k8s_volum": [114, 119, 279, 296, 299], "k8s_waiting_for_delet": [114, 119, 279], "dataset_download_retri": [114, 119], "feed": [115, 120, 123, 126, 132, 136, 279, 304], "handler": [116, 279], "interactivequeri": [116, 135, 277, 279, 303], "alia": [118, 120, 126, 272, 279, 304], "kv": 119, "\u02bbegograph": 120, "\u02bbegotensor": 120, "sample_se": [120, 304], "positive_sampl": [120, 304], "negative_sampl": [120, 129, 304], "receptive_fn": [120, 304], "egotensor": [120, 128, 304], "egoflow": [120, 128, 304], "appropri": 120, "1433": [120, 132, 304], "learningbasedmodel": [120, 304], "output_dim": [120, 304], "categorical_attrs_desc": [120, 304], "_sample_se": [120, 304], "_positive_sampl": [120, 304], "_receptive_fn": [120, 304], "emit": [120, 123, 126, 132, 284, 304], "ego_flow": [120, 304], "src_ego_spec": [120, 304], "pos_src_ego_tensor": [120, 304], "identityencod": [120, 304], "widendeepencod": [120, 304], "feature_encod": [120, 304], "gcnconv": [120, 304], "sparseegographencod": [120, 304], "align": [120, 123, 124, 223], "_encod": [120, 304], "conv_lay": [120, 304], "act": [120, 269, 272, 284, 304], "_supervised_loss": [120, 304], "emb": [120, 304], "full_graph_mod": [120, 304], "src_emb": [120, 304], "model_fn": [120, 132, 304], "batch_szi": [120, 304], "200": [120, 278, 286, 304], "server_id": [120, 304], "server_count": [120, 122, 132, 304], "tracker": [120, 132, 304], "explain": [121, 279, 303], "bought": 121, "saturdai": 121, "morn": 121, "bigint": 121, "enough": [121, 124, 191], "dst_id": [121, 122, 123, 125, 126, 132, 136], "shanghai": 121, "displai": 121, "mandatori": 121, "localfilesystem": 121, "pai": [121, 126, 127], "filesystem": 121, "tab": 121, "remain": [121, 126, 206, 233, 284], "s2": [121, 237], "hangzhou": [121, 305], "215340": 121, "933091": 121, "grei": 121, "362519": 121, "097545": 121, "chapter": [121, 122, 124, 218, 255], "comma": 121, "dscript": 121, "dentryfil": 121, "dtabl": 121, "odp": 121, "prj": 121, "flag": [121, 122], "define_str": 121, "node_sourc": 121, "edge_sourc": 121, "hash": 121, "bucket_s": 121, "greatli": [121, 122], "your_attr_typ": 121, "you_delimit": 121, "weightd": 121, "scr_id": 121, "10001": [121, 122, 123, 125], "feature1": 121, "10002": [121, 122, 123, 125], "feature2": 121, "10003": [121, 122, 123, 125], "feature3": 121, "123": 121, "124": 121, "\u02bbitem_node_decod": 121, "\u02bbuser_node_decod": 121, "\u02bbedge_decod": 121, "item_node_decod": 121, "user_node_decod": 121, "edge_decod": [121, 132], "graph_object": 121, "isomorph": [122, 126, 251, 273], "topolog": 122, "commod": 122, "swing": [122, 123], "30001": [122, 123, 125], "30002": [122, 123, 125], "30003": [122, 123, 125], "table_1": 122, "table_2": 122, "dest": 122, "10004": [122, 123], "20001": [122, 123, 125], "23": [122, 123, 125], "29": [122, 123, 125, 284], "20003": [122, 123, 125], "33": [122, 123, 125, 262, 265], "20004": [122, 123, 125], "43": [122, 123, 125, 137, 239, 265, 295], "46": [122, 123, 125, 137, 259], "ui_decod": 122, "uv_decod": 122, "table_3": 122, "table_4": 122, "click_v": 122, "interconnect": 122, "decid": [122, 219], "task_index": [122, 132], "task_count": 122, "elimin": 122, "burden": 122, "atyp": 122, "job_nam": [122, 132], "worker_host": 122, "join": [122, 132, 173, 176, 184, 191, 200, 201, 214, 216, 219, 220, 221, 222, 223, 231, 232, 272], "respond": 122, "necessarili": [122, 234], "serious": 122, "decreas": [122, 201, 203], "client_count": [122, 132], "wait_for_clos": [122, 132], "matter": [122, 278], "infom": 123, "statist": 123, "get_topologi": 123, "src_type": 123, "dst_type": 123, "figure1": 123, "topo": 123, "print_al": 123, "egde_typ": 123, "ravers": 123, "sparsenod": [123, 124, 126], "sparseedg": [123, 124, 126], "int_attr": [123, 124, 125, 129, 132], "float_attr": [123, 124, 125, 129, 132], "string_attr": 123, "src_node": 123, "dst_node": 123, "diment": 123, "dense_shap": 123, "arra": 123, "__next__": 123, "dimenti": 123, "table1": 123, "u_nod": 123, "np": [123, 126, 132, 136, 285], "traves": 123, "get_edg": 123, "inferfac": 123, "table2": 123, "table3": 123, "click_edg": 123, "table4": 123, "mainstream": [124, 125], "conduc": 124, "character": 124, "recept": [124, 128], "theori": [124, 132], "rapidli": 124, "recent": 124, "ai": 124, "th": [124, 137, 250], "neighbor_sampl": 124, "neighborsampl": 124, "layer_nod": 124, "layer_edg": 124, "meta_path": 124, "expand_factor": [124, 129], "layer_id": 124, "famili": [124, 137, 175, 233, 261], "layer1": 124, "layer2": 124, "i2i": [124, 126], "random_without_replac": 124, "pad": 124, "topk": [124, 126], "q": [124, 126, 132, 214, 218], "ueri": 124, "default_neighbor_id": 124, "miss": [124, 134, 182, 279], "set_default_neighbor_id": [124, 133], "xx": 124, "set_padding_mod": 124, "circular": [124, 126, 176], "semant": 125, "alogrithm": 125, "throw": 125, "outofrangeerror": [125, 126, 132], "nodesampl": 125, "node_sampl": 125, "by_ord": 125, "node_from": [125, 136], "edge_src": [125, 136], "edge_dst": [125, 136], "edgesampl": 125, "edge_sampl": [125, 129], "matur": 126, "dl": 126, "realiti": 126, "sheer": 126, "opposit": [126, 200, 247, 284], "statement": 126, "sink": 126, "entranc": 126, "generatortyp": [126, 136], "shuffl": [126, 132, 136, 284], "won": [126, 285], "cursor": 126, "inv": [126, 132, 303], "inE": [126, 303], "ingo": 126, "query\u5bf9\u8c61": 126, "upstream": 126, "outneg": [126, 129], "inneg": [126, 129, 132], "candid": [126, 129], "branch": [126, 172, 182, 303], "merg": [126, 284], "node_weight": [126, 129], "backward": [126, 223], "u2i": 126, "ouv": 126, "func": 126, "512": 126, "edeg": 126, "strongli": [126, 211, 279], "easier": [126, 279, 284], "src_1hop": 126, "dst_1hop": 126, "neg_i": 126, "neg_i_1hop": 126, "parmas_list": 126, "bodi": [126, 130, 238], "params_list": 126, "arrang": 126, "thing": 126, "recurs": [126, 174], "anonym": [126, 264], "src_attr": 126, "neg_attr": 126, "encode_fn": [126, 132], "src_atr": 126, "outnegv": 126, "gen1": 126, "gen2": 126, "circumst": 126, "sour": 126, "foewa": 126, "from_gener": [126, 132], "make_one_shot_iter": [126, 132], "get_next": [126, 132], "slightli": [127, 191, 278], "relev": [127, 166, 272], "whl": [127, 130], "zhangjiak": 127, "cp27": 127, "cp27mu": 127, "linux_x86_64": 127, "sudo": [127, 296, 297], "apt": 127, "autoconf": 127, "automak": 127, "libtool": 127, "cmake": 127, "submodul": [127, 130], "your_wheel_nam": [127, 130], "sh": [127, 302, 303], "test_cpp_ut": 127, "test_python_ut": 127, "gpu": 127, "checkout": 127, "fastgcn": [128, 304], "graphsaint": 128, "amd": 128, "convolut": 128, "oprat": 129, "negativesampl": 129, "object_typ": 129, "neg_nod": 129, "oprequest": 130, "req": 130, "oprespons": 130, "params_": 130, "scalar": [130, 137], "tensors_": 130, "redirect": [130, 210], "rewrit": 130, "till": [130, 279], "happen": [130, 285], "stitch": 130, "myoper": 130, "register_oper": 130, "opnam": 130, "randomsampl": 130, "writ": 130, "xxxsampler": 130, "xxx": [130, 279, 295], "kubeflow": 131, "seek": 131, "litestr": 131, "char": [131, 134], "buffer": 131, "getfiles": 131, "record": 131, "getrecordcount": 131, "register_file_system": 131, "myfilesystem": 131, "registr": 131, "ppi": 132, "assess": [132, 249], "train_supervis": 132, "gen_test_data": 132, "sy": 132, "getopt": 132, "argv": 132, "cur_path": 132, "opt": 132, "elif": 132, "102": [132, 268], "__name__": 132, "__main__": 132, "dirnam": 132, "pwd": 132, "rf": 132, "\u4f60\u9700\u8981\u628agen_test_data": 132, "py\u653e\u5230shell\u811a\u672c\u540c\u4e00\u76ee\u5f55\u4e0b": 132, "sleep": 132, "seven": [132, 171], "case_bas": 132, "genetic_algorithm": 132, "neural_network": 132, "probabilistic_method": 132, "reinforcement_learn": 132, "rule_learn": 132, "preprocess": 132, "bag": 132, "1033": 132, "103482": 132, "103515": 132, "31336": 132, "1061127": 132, "05882353": 132, "1106406": 132, "n_featur": 132, "node_decod": 132, "n_class": 132, "140": [132, 195], "n_hop": 132, "n_epoch": 132, "tripl": 132, "graph_object_cn": 132, "md": 132, "sample_gen": 132, "reshap": 132, "input_fn": 132, "sample_input_fn": 132, "float64": 132, "tensorshap": 132, "layer_featur": 132, "aggregate_fn": 132, "self_vec": 132, "neigh_vec": 132, "raw_feat_layer_index": 132, "layer_index": 132, "variable_scop": 132, "_layer": 132, "auto_reus": 132, "neigh_weight": 132, "get_vari": 132, "self_weight": 132, "output_shap": 132, "get_shap": 132, "neigh_mean": 132, "from_neigh": 132, "matmul": 132, "from_self": 132, "add_n": 132, "leaky_relu": 132, "depth_to_encod": 132, "h_self_vec": 132, "h_neighbor_vec": 132, "features_column": 132, "feature_column": 132, "numeric_column": 132, "loss_fn": 132, "train_op": 132, "global_step": 132, "get_global_step": 132, "estimatorspec": 132, "modekei": 132, "set_xxx": 133, "set_yyi": 133, "other_model": 133, "fill": [133, 173, 184, 194, 228], "nbr_id": 133, "set_default_int_attribut": 133, "set_default_float_attribut": 133, "set_default_string_attribut": 133, "set_inter_threadnum": 133, "intra": [133, 191, 194], "set_intra_threadnum": 133, "16mb": 133, "reset": 133, "enlarg": 133, "set_rpc_message_max_s": 133, "del": [134, 272], "objectnam": 134, "_e": [134, 305], "src_label": [134, 275, 279, 299, 300], "dst_label": [134, 275, 279, 299, 300], "src_field": [134, 300], "dst_field": [134, 300], "unspecifi": [134, 149], "deduc": [134, 305], "union": [134, 200, 300], "invalid": [134, 279], "vid_field": [134, 300], "graph_nod": 134, "detach": 134, "varaibl": 134, "leav": [134, 172, 182], "lexic": 134, "classmethod": 134, "deseri": 134, "broken": 134, "save_to": 134, "restor": 134, "path_": 134, "s3": [134, 305], "graphschema": [134, 272], "schema_path": 134, "currrent": 134, "vineyard_id": 134, "object_id": [134, 135, 136], "delimit": [134, 274, 300], "header_row": 134, "filetyp": 134, "ordinari": 134, "header": 134, "orc": 134, "parquet": 134, "graph_build": 134, "deprec": [134, 152, 250, 279], "admin": 134, "group_id": 134, "member_s": 134, "leader_student_id": 134, "student": 134, "member_student_id": 134, "group_for_teacher_stud": 134, "group_nam": 134, "establish_d": 134, "teacher_in_charge_id": 134, "teacher": 134, "lesson_num": 134, "avg_scor": 134, "student_id": 134, "salari": 134, "teacher_id": 134, "both_in_out": 134, "unambigu": 134, "int32_t": [134, 305], "orign": 134, "frontend_endpoint": 135, "around": 135, "standard": [135, 205, 220, 221, 222], "graph_url": [135, 303], "concis": 135, "lifetim": 135, "traversal_sourc": 135, "graphtraversalsourc": 135, "contruct": 135, "runtimeerror": 135, "modern_graph_data_dir": 135, "tolist": 135, "entri": [136, 137, 184, 201, 203, 204, 229, 231, 232, 250, 284], "dtype": 136, "pywrap": 136, "nodefrom": 136, "get_handl": 136, "worker_count": 136, "base64": 136, "nstart": 137, "integ": [137, 172, 175, 176, 177, 178, 179, 181, 183, 184, 186, 187, 190, 191, 194, 195, 196, 197, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 250, 264, 265, 266, 267, 269, 272, 284], "poweriterationfailedconverg": 137, "langvil": 137, "meyer": 137, "survei": [137, 225], "cites": 137, "ist": 137, "psu": 137, "edu": 137, "713792": 137, "jon": 137, "kleinberg": 137, "authorit": 137, "journal": [137, 206, 214, 231, 262, 265, 269], "acm": [137, 212, 263, 295], "604": 137, "1999": [137, 192, 193], "doi": [137, 207, 214, 249], "1145": 137, "324133": 137, "324140": 137, "cornel": 137, "kleinber": 137, "auth": 137, "pdf": [137, 219, 221, 222], "load_centr": 137, "loop": [137, 147, 160, 199, 201, 203, 205, 211, 219, 220, 221, 222, 223, 229, 232, 272, 273, 303], "higher": [137, 147, 211], "in_degree_centr": [137, 273], "networkxnotimpl": 137, "out_degree_centr": [137, 273], "equat": 137, "ax": 137, "eigenvalu": [137, 217], "virtu": 137, "perron": 137, "frobeniu": 137, "theorem": [137, 216, 228], "0e": 137, "strength": 137, "2f": 137, "networkxpointlessconcept": [137, 267], "null": [137, 154, 170, 171, 178, 185, 237, 267, 272], "networkxerror": [137, 143, 150, 152, 156, 157, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 207, 213, 216, 217, 218, 229, 232, 264, 272, 275], "eigenvector_centrality_numpi": 137, "shift": [137, 237], "discern": 137, "domin": 137, "phillip": 137, "bonacich": 137, "american": 137, "sociologi": 137, "92": 137, "1170": 137, "1182": 137, "1986": [137, 261], "leonidzhukov": 137, "net": [137, 191], "hse": 137, "socialnetwork": 137, "oxford": [137, 170, 171, 220, 264], "press": [137, 170, 171, 218, 260, 263, 264], "usa": [137, 224, 225, 271], "pp": [137, 201, 204, 205, 206, 219, 225, 226, 263, 269], "169": 137, "x_i": 137, "a_": 137, "x_j": 137, "lambda_": 137, "influenc": 137, "distant": 137, "penal": 137, "attenu": 137, "strictli": [137, 191], "invers": [137, 216], "phi": 137, "sqrt": [137, 217], "adjacency_spectrum": 137, "720": 137, "leo": 137, "sociometr": 137, "psychometrika": 137, "1953": 137, "springer": [137, 226], "1007": [137, 171, 207], "bf02289026": 137, "has_path": [137, 273], "accept": [137, 219, 223], "djikstra": 137, "floyd": 137, "warshal": 137, "disconnect": [137, 213, 214, 229, 232, 279], "bfs_edg": [137, 273], "depth_limit": 137, "reachabl": 137, "core_numb": 137, "maxim": [137, 225, 271], "vladimir": 137, "batagelj": 137, "matjaz": 137, "zaversnik": 137, "arxiv": [137, 180, 195, 196, 197, 211, 264], "ab": [137, 195, 196, 197, 211, 219, 223, 264, 266], "0310049": 137, "c_u": 137, "deg": [137, 191, 205, 272], "geometr": [137, 259, 273], "vw": 137, "hat": 137, "uv": [137, 205], "uw": 137, "tot": 137, "2deg": 137, "leftrightarrow": 137, "reciproc": 137, "complete_graph": [137, 143, 272], "saram\u00e4ki": 137, "kivel\u00e4": 137, "onnela": 137, "kaski": 137, "kert\u00e9sz": 137, "027105": 137, "2007": [137, 219, 265], "jponnela": 137, "web_docu": 137, "a9": 137, "intens": 137, "coher": 137, "motif": 137, "065103": 137, "2005": [137, 213, 219], "sign": 137, "correl": 137, "costantini": 137, "perugini": 137, "plo": 137, "e88669": 137, "fagiolo": 137, "76": 137, "026107": 137, "average_clust": [137, 273], "count_zero": 137, "c_v": 137, "nonzero": [137, 201, 218], "avg": 137, "routin": [137, 272], "marcu": 137, "kaiser": 137, "0802": 137, "2512": 137, "g_to_add_to": [139, 140, 141], "nodes_for_cycl": 139, "keyword": [139, 140, 141, 208, 215, 219, 220, 221, 222, 223, 272, 275, 278, 279], "add_path": [139, 141, 272], "add_star": [139, 140], "nodes_for_path": 140, "add_cycl": [140, 141], "nodes_for_star": 141, "star": [141, 178, 187], "middl": 141, "cnbor": 143, "with_data": 144, "empty_graph": [144, 185], "frequenc": 146, "hist": 146, "width": 146, "2m": [147, 225], "prevent": 150, "err": 150, "frozen": [150, 155], "unfreez": 150, "frozen_graph": 150, "unfrozen_graph": 150, "is_frozen": 150, "freez": [155, 273], "signifi": [156, 157], "nodelist": [160, 199], "selfloop_edg": [160, 165, 201, 203], "number_of_selfloop": [160, 166], "selfloop": [165, 166, 199, 205], "nloop": 165, "nodes_with_selfloop": [165, 166], "datadict": [166, 272], "datavalu": 166, "attrnam": [166, 303], "edgeit": 166, "ekei": 166, "graph_atlas_g": 170, "linearli": [170, 186], "ronald": [170, 171, 261], "robin": [170, 171], "wilson": [170, 171], "1998": [170, 171], "111223": 171, "112222": 171, "automorph": [171, 244], "graph_atla": 171, "expens": 171, "popul": [171, 172, 174, 175, 177, 179, 182, 184, 186, 187, 190, 201, 203, 204, 206, 208, 209, 210, 216, 217, 218, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 267, 274], "book": 171, "violat": 171, "lexicograph": 171, "nondecreas": 171, "001111": 171, "000112": 171, "1008": 171, "3333444": 171, "3333336": 171, "1012": 171, "1213": 171, "1244555": 171, "1244456": 171, "perfectli": 172, "ari": [172, 182], "height": 172, "children": [172, 182, 266], "constructor": [172, 174, 175, 177, 179, 181, 182, 184, 186, 187, 190, 201, 203, 204, 206, 208, 209, 210, 212, 216, 217, 218, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 267, 274], "m2": 173, "barbel": [173, 184], "bell": 173, "p_": [173, 205, 219], "mere": [173, 184], "david": [173, 184, 249], "aldou": [173, 184], "jim": [173, 184], "binomi": 174, "leftmost": 174, "circul": 175, "ci_n": 175, "x_1": 175, "x_2": 175, "x_m": 175, "mod": [175, 189, 218, 237], "subfamili": 175, "plu": [175, 247], "minu": 175, "ladder": [176, 183], "cl_n": 176, "k_n": 177, "distinct": [177, 239, 265, 284], "is_direct": [177, 272], "subset_s": 178, "multipartit": [178, 189], "tripartit": 178, "bc": 178, "complete_bipartite_graph": 178, "c_n": 179, "hierarch": 180, "dorogovtsev": 180, "goltsev": 180, "mend": 180, "cond": 180, "mat": 180, "0112143": 180, "kw": [181, 279], "unknown": 181, "abc": 181, "sometim": [182, 242], "rightmost": 182, "bottom": 182, "jame": 182, "andrew": 182, "storer": 182, "birkhaus": 182, "boston": 182, "2001": [182, 195, 203, 208, 210, 218, 227], "225": [182, 272], "lollipop": 184, "k_m": 184, "p_n": [184, 186], "etext": 184, "center": [187, 190, 215], "turan": 189, "disjoint": [189, 200, 238], "down": 189, "2r": 189, "tau1": 191, "tau2": 191, "mu": 191, "average_degre": 191, "min_degre": 191, "max_degre": 191, "min_commun": 191, "max_commun": 191, "500": 191, "lfr": 191, "proce": 191, "approxim": [191, 264], "accomplish": 191, "mathrm": 191, "expon": 191, "reassign": [191, 229], "interv": [191, 223, 279], "affili": [191, 299], "random_st": [191, 194, 195, 196, 197, 199, 201, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 226, 227, 228, 232, 264, 267, 269], "exceededmaxiter": 191, "250": 191, "frozenset": [191, 274], "rewir": [191, 193, 197, 229, 232], "wire": 191, "robust": 191, "somewhat": 191, "narrow": 191, "suggest": 191, "event": 191, "andrea": 191, "lancichinetti": 191, "santo": [191, 195, 196, 197], "fortunato": [191, 195, 196, 197], "filippo": 191, "radicchi": 191, "phy": [191, 203, 208, 209, 210, 213], "rev": [191, 203, 208, 209, 210, 213], "046110": 191, "santofortunato": 191, "caveman": [192, 193, 197], "unclear": [192, 193], "connected_caveman_graph": [192, 198], "watt": [192, 193, 203], "phenomenon": [192, 193], "amer": [192, 193], "493": [192, 193], "527": [192, 193], "caveman_graph": 193, "p_in": [194, 195, 196], "p_out": [194, 195, 196], "gaussian": [194, 220, 221, 222], "drawn": [194, 222], "varianc": 194, "probabilti": [194, 197], "random_partition_graph": [194, 199], "ulrik": 194, "brand": 194, "marco": 194, "gaertler": 194, "dorothea": 194, "wagner": 194, "11th": 194, "europ": 194, "symp": 194, "plant": [195, 196], "random_partition_model": 195, "condon": 195, "karp": 195, "algor": 195, "116": 195, "486": [195, 196, 197], "174": [195, 196, 197], "0906": [195, 196, 197], "0612": [195, 196, 197], "relax": 197, "februari": 197, "num_cliqu": 198, "clique_s": 198, "ring": 198, "stochast": [199, 273], "densiti": [199, 201, 219, 221], "symmetr": [199, 218, 241, 245, 251, 253, 264], "squar": [199, 218, 246, 247, 250, 265], "duplic": [199, 201, 203, 272, 273, 284], "300": [199, 268], "prob": 199, "05": [199, 212], "02": 199, "450": 199, "quotient_graph": 199, "relabel": 199, "245": 199, "348": 199, "405": 199, "051": 199, "022": 199, "planted_partition_graph": 199, "gaussian_random_partition_graph": 199, "gnp_random_graph": [199, 226, 227, 228], "holland": 199, "laskei": 199, "leinhardt": 199, "blockmodel": 199, "109": 199, "1983": 199, "windmil": 200, "thought": 200, "contract": 200, "altern": [200, 219, 223, 272], "wd": 200, "deg_sequ": [201, 202, 203, 204, 206], "pseudograph": [201, 203], "nonneg": [201, 203], "is_graph": [201, 207], "graphic": [201, 203, 206, 207], "realiz": [201, 203, 206, 229, 230, 231, 232, 259], "tend": 201, "poisson": 201, "constant": [201, 303], "siam": [201, 206, 212], "167": 201, "random_sequ": 201, "hundr": [201, 212], "random_powerlaw_tree_sequ": 201, "5000": 201, "actual_degre": 201, "in_degree_sequ": 203, "out_degree_sequ": 203, "directed_random": 203, "configuration_model": [203, 204, 207], "finit": [203, 205, 218], "strogatz": 203, "026118": 203, "din": 203, "dout": 203, "in_deg_sequ": 204, "out_deg_sequ": 204, "kleitman": [204, 206], "wang": [204, 206], "valenc": [204, 206], "mathemat": [204, 206, 214, 216, 218, 227], "1973": [204, 206], "w_0": 205, "w_1": 205, "ldot": 205, "w_u": [205, 219, 222], "w_v": [205, 219, 222], "sum_k": 205, "w_k": 205, "z": [205, 218, 219, 223], "mathcal": 205, "ne": 205, "uu": 205, "fan": [205, 219, 295], "chung": [205, 219], "lu": [205, 295], "ann": 205, "combinator": [205, 265], "145": 205, "2002": 205, "joel": 205, "miller": 205, "aric": [205, 219], "hagberg": [205, 219], "waw": [205, 219], "alan": 205, "friez": 205, "paul": 205, "horn": 205, "pawe\u0142": 205, "pra\u0142at": 205, "lnc": 205, "6732": 205, "115": 205, "havel": 206, "hakimi": 206, "networkxexcept": 206, "highest": 206, "resort": 206, "linear": [206, 208, 264, 284], "496": 206, "506": 206, "1962": [206, 224, 225, 271], "d_m": 207, "uniform": [207, 219, 228], "networkxunfeas": 207, "moshen": 207, "bayati": 207, "jeong": 207, "han": 207, "kim": 207, "amin": 207, "saberi": 207, "algorithmica": 207, "58": 207, "860": 207, "910": 207, "s00453": 207, "009": 207, "9340": 207, "kernel": 208, "gn": [208, 271], "a_k": 208, "krapivski": [208, 209, 210, 213], "redner": [208, 209, 210], "066123": [208, 210], "gnc": 209, "uniformli": [209, 210, 211, 219, 220, 221, 222, 223, 267], "036118": 209, "2005k": 209, "gnr": 210, "probabilii": 210, "self_loop": 211, "preferenti": 211, "proport": 211, "regular": [211, 216, 217, 218, 240, 245, 248, 253, 256, 257, 258, 259], "peterson": [211, 254], "nichola": 211, "bori": 211, "pittel": 211, "preprint": 211, "1311": 211, "5961": 211, "2013": [211, 231], "gamma": 212, "delta_in": 212, "delta_out": 212, "bia": 212, "bollob\u00e1": 212, "borg": 212, "chay": 212, "riordan": 212, "fourteenth": 212, "annual": 212, "symposium": 212, "132": [212, 227], "139": 212, "diverg": [213, 273], "retain": [213, 284], "retent": 213, "disallow": 213, "ispolatov": 213, "yuryev": 213, "061911": 213, "inclus": 214, "knudsen": 214, "michael": 214, "carsten": 214, "wiuf": 214, "markov": 214, "chain": 214, "1155": 214, "190836": 214, "radiu": [215, 220, 221, 222], "chordal": 216, "chord": [216, 230], "modulo": 216, "mildli": 216, "prime": [216, 218], "lubotzki": 216, "invari": 216, "birkh\u00e4us": 216, "verlag": 216, "basel": 216, "1994": 216, "marguli": 217, "gabber": 217, "galil": 217, "palei": 218, "pz": 218, "f_q": 218, "odd": 218, "bolloba": 218, "edit": [218, 255], "cambridg": 218, "theta": [219, 222], "po": [219, 220, 221, 222, 223], "metric": [219, 220, 221, 222, 223], "p_dist": [219, 221], "geograph": [219, 222], "rectangular": [219, 223], "ge": [219, 223], "larger": 219, "prone": 219, "le": [219, 223, 263], "euclidean": [219, 220, 221, 222, 223], "conceiv": 219, "apart": 219, "exponenti": [219, 221, 222, 284], "taxicab": [219, 223], "expovari": [219, 222], "masuda": 219, "miwa": 219, "konno": 219, "036108": 219, "milan": 219, "bradonji\u0107": 219, "allon": 219, "percu": 219, "giant": 219, "antoni": 219, "bonato": 219, "209": 219, "216": 219, "cube": [220, 221, 222, 240, 257], "kdtree": [220, 221, 222], "minkowski": [220, 221, 222], "infin": [220, 221, 222], "confus": [220, 221, 222], "erd\u0151": [220, 221, 222], "r\u00e9nyi": [220, 221, 222], "twenti": 220, "2d": [220, 221, 222, 272, 275], "deviat": [220, 221, 222], "gauss": [220, 221, 222], "penros": [220, 221], "mathew": [220, 221], "soft": 221, "exp": [221, 223], "annal": 221, "2016": 221, "986": 221, "1028": 221, "summat": 222, "nodethr": 222, "cole": 222, "maclean": 222, "blog": 222, "thesi": [222, 228], "waxman": 223, "x_min": 223, "y_min": 223, "x_max": 223, "y_max": 223, "earlier": 223, "Their": 223, "incompat": 223, "rout": 223, "multipoint": 223, "ieee": [223, 231, 232, 264, 269], "area": [223, 269], "1988": 223, "1617": 223, "1622": 223, "harari": [224, 225, 273], "h_": [224, 225], "ceil": 224, "kn": 224, "hnm_harary_graph": 224, "weisstein": 224, "eric": 224, "mathworld": [224, 233, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 252], "wolfram": [224, 233, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 252], "hararygraph": 224, "proc": [224, 225, 229, 230, 271], "nat": [224, 225, 271], "acad": [224, 225, 271], "sci": [224, 225, 271], "1142": [224, 225, 271], "1146": [224, 225, 271], "floor": 225, "hkn_harary_graph": 225, "boesch": 225, "satyanarayana": 225, "suffel": 225, "reliabl": 225, "synthesi": 225, "2009": [225, 265], "uniform_random_intersection_graph": [226, 227], "nikoletsea": 226, "raptopoulo": 226, "spiraki": 226, "icalp": 226, "\u0131az": 226, "karhum": 226, "aki": 226, "lepist": 226, "sannella": 226, "vol": [226, 269], "3142": 226, "lectur": 226, "scienc": [226, 249], "1029": 226, "1040": 226, "godehardt": 227, "jaworski": 227, "electron": [227, 265], "singer": 228, "cohen": 228, "1995": 228, "phd": 228, "john": [228, 245], "hopkin": 228, "scheinerman": 228, "evolut": 228, "2000": 228, "156": 228, "nkk": [229, 230], "degree_seq": 229, "correspondingli": [229, 232], "n_edges_add": 229, "li": [229, 232], "fact": [229, 232], "unsatur": 229, "proof": 229, "tillman": [229, 230, 232], "markopoul": [229, 230, 231, 232, 264], "butt": [229, 230, 264], "gjoka": [229, 230, 231, 232], "2k": [229, 230], "kdd": [229, 230], "seconnd": 230, "exce": [230, 231], "joint_degre": [231, 232], "diagon": [231, 247], "joint_degree_graph": 231, "kurant": 231, "5k": 231, "infocom": [231, 232, 264], "stanton": 231, "pinar": 231, "prescrib": 231, "experiment": [231, 279], "2012": 231, "n_th": 233, "infinit": 233, "m_1": 233, "singleton": [233, 272], "m_2": 233, "m_i": 233, "mycielskian": 233, "m_": 233, "mycielskigraph": 233, "p_2": 233, "chromat": [234, 265], "2n": 234, "bigcup": 234, "nonisomporph": 235, "adjanc": 235, "matric": [235, 264], "nonisomorph": 236, "shift_list": 237, "cubic": [237, 240, 241, 244, 245, 251, 253, 254, 259], "lcf": [237, 239, 241, 243, 245, 251, 253], "lederberg": 237, "coxet": 237, "frucht": [237, 244], "hamiltonian": [237, 239, 244, 245, 248, 253, 259], "symmetri": [237, 244], "dodecahedral_graph": 237, "desargues_graph": 237, "heawood_graph": 237, "pappus_graph": 237, "s1": 237, "sk": 237, "v_current": 237, "shiftlist": 237, "heawood": [237, 245], "lcfnotat": 237, "bull": 238, "planar": [238, 241, 242, 244], "pendant": 238, "leg": 238, "chv\u00e1tal": 239, "370": 239, "chv": 239, "c3": [239, 251, 252], "a1tal_graph": 239, "chvatalgraph": 239, "platon": [240, 243, 248, 252, 256, 258], "skeleton": [240, 243, 257, 258], "hypercub": 240, "solid": [240, 257, 258], "desargu": 241, "desarguesgraph": 241, "diamond": 242, "kite": [242, 249], "diamondgraph": 242, "dodecahedr": 243, "dodecahedron": 243, "regular_dodecahedron": 243, "dodecahedralgraph": 243, "fruchtgraph": 244, "cage": 245, "perci": 245, "nonplanar": 245, "girth": 245, "heawoodgraph": 245, "win": [245, 254], "tue": [245, 254], "nl": [245, 254], "aeb": [245, 254], "housegraph": [246, 247], "pentatop": 247, "icosahedr": 248, "icosahedron": 248, "icosahedralgraph": 248, "krackhardt": 249, "tradit": 249, "andr": 249, "beverlei": 249, "carol": 249, "dian": 249, "fernando": 249, "garth": 249, "heather": 249, "ik": 249, "jane": 249, "polit": 249, "landscap": 249, "cognit": 249, "administr": 249, "quarterli": 249, "342": [249, 272], "369": 249, "2307": 249, "2393394": 249, "jstor": 249, "june": 249, "1990": 249, "graph_descript": 250, "ltype": 250, "adjacencylist": 250, "from_dict_of_list": 250, "from_edgelist": 250, "xlist": 250, "c_4": 250, "w2": 250, "vk": 250, "wk": 250, "vj": 250, "wj": 250, "moebiu": 251, "kantor": 251, "m\u00f6biu": 251, "petersen": [251, 254], "b6biu": 251, "e2": 251, "93kantor_graph": 251, "octahedr": 252, "octahedron": 252, "shake": 252, "hand": [252, 284], "hi": [252, 262, 271], "her": 252, "partner": 252, "handshak": 252, "cocktail": 252, "octahedralgraph": 252, "tur": 252, "a1n_graph": 252, "special_cas": 252, "pappu": 253, "juliu": 254, "counterexampl": [254, 259], "claim": 254, "bridgeless": 254, "colour": 254, "drg": 254, "maze": 255, "sedgewick": 255, "3rd": 255, "tetrahedr": 256, "k4": 256, "w4": 256, "grpah": 256, "tetrahedron": [256, 258, 259], "truncat": [257, 258, 259, 264], "archimedean": [257, 258], "octagon": 257, "triangular": 257, "tip": 257, "truncated_cub": 257, "coolmath": 257, "polyhedra": 257, "hexagon": 258, "equilater": 258, "truncated_tetrahedron": 258, "tutt": 259, "polyhedr": 259, "tait": 259, "conjectur": 259, "polyhedron": 259, "multipli": 259, "davi": 260, "southern": 260, "women": 260, "gardner": 260, "1941": 260, "south": 260, "chicago": 260, "il": 260, "florentin": 261, "breiger": 261, "philippa": 261, "pattison": 261, "cumul": 261, "dualiti": 261, "algebra": 261, "septemb": 261, "zachari": 262, "karat": 262, "club": 262, "mr": [262, 265], "offic": 262, "wayn": 262, "fission": 262, "anthropolog": 262, "research": [262, 279], "452": 262, "473": 262, "1977": 262, "coappear": 263, "charact": [263, 268, 274], "novel": 263, "miser": 263, "knuth": 263, "1993": 263, "graphbas": 263, "combinatori": 263, "york": 263, "resembl": [264, 269, 271], "spectral": [264, 273], "forg": 264, "sgf": 264, "eigenstructur": 264, "particularli": 264, "synthes": 264, "realist": 264, "sensit": 264, "ratio": 264, "percentag": 264, "modular": 264, "driven": 264, "precis": 264, "telecommun": 264, "bernoulli": 264, "baldesi": 264, "1801": 264, "01715": 264, "karate_club_graph": 264, "cell": 265, "grid": 265, "sud": 265, "81": 265, "810": 265, "52": 265, "herzberg": 265, "murti": 265, "polynomi": 265, "am": 265, "708": 265, "717": 265, "sander": 265, "torsten": 265, "7pp": 265, "2529816": 265, "contributor": 265, "encyclopedia": 265, "dec": 265, "2019": 265, "letter": 266, "descend": 266, "nil": 266, "themselv": 266, "arboresc": 266, "downward": 266, "synthet": 266, "acycl": 266, "trie": 266, "recov": [266, 279], "pr\u00fcfer": 267, "from_prufer_sequ": 267, "forest_str": 267, "triad_nam": 268, "003": 268, "012": 268, "021d": 268, "021u": 268, "021c": 268, "111d": 268, "111u": 268, "030t": 268, "030c": 268, "120d": 268, "120u": 268, "120c": 268, "triadic_censu": 268, "AS": [269, 273], "10000": 269, "autonom": [269, 271], "elmokashfi": 269, "tier": 269, "mid": 269, "cp": 269, "adv": 269, "bidirect": 269, "peer": 269, "commerci": 269, "agreement": 269, "kvalbein": 269, "dovroli": 269, "bgp": 269, "1250": 269, "1261": 269, "octob": 269, "reweight": 270, "mathematician": 271, "frank": 271, "incoming_graph_data": [272, 275], "default_label": [272, 275], "to_networkx_graph": 272, "110": 272, "warn": 272, "protect": 272, "bracket": 272, "shortcut": 272, "nbrsdict": 272, "someth": 272, "persion": 272, "miscellan": 272, "__contains__": 272, "__getitem__": 272, "adj_dict": 272, "atlasview": 272, "__iter__": 272, "niter": 272, "__len__": 272, "nnode": 272, "u_of_edg": 272, "v_of_edg": 272, "ebunch_to_add": 272, "preced": 272, "wn2898": 272, "node_for_ad": 272, "nodes_for_ad": 272, "hello": 272, "k3": 272, "attrdict": 272, "behav": 272, "idiom": 272, "foovalu": 272, "adj_it": 272, "nbrdict": 272, "adjlist_inner_dict_factori": 272, "neighbordict": 272, "adjlist_outer_dict_factori": 272, "adjlistdict": 272, "clear_edg": 272, "alter": [272, 284], "reproduc": 272, "peopl": 272, "deepcopi": 272, "fresh": 272, "__class__": 272, "degreeview": 272, "nd_view": 272, "edge_attr_dict_factori": 272, "neighborattrdict": 272, "edge_subgraph": 272, "edgeview": 272, "edgedataview": 272, "ddict": 272, "get_edge_data": 272, "edge_dict": 272, "permit": 272, "safe": 272, "graph_attr_dict_factori": 272, "graph_cache_factori": 272, "keyerror": 272, "edge_ind": 272, "data_dictionari": 272, "readabl": 272, "simpler": 272, "is_multigraph": 272, "corespond": 272, "nbunch_it": 272, "membership": 272, "exhaust": 272, "possibli": 272, "node_attr_dict_factori": 272, "nodeattrdict": 272, "node_dict_factori": 272, "nodedict": 272, "nodeview": 272, "nodedataview": 272, "nodedata": 272, "bar": 272, "Not": 272, "rest": 272, "nedg": 272, "Will": 272, "nodes_for_remov": 272, "set_edge_data": 272, "set_node_data": 272, "set_item": 272, "adjedgeattr": 272, "dd": 272, "nodeattr": 272, "to_undirected_class": 272, "taken": 272, "itertool": 272, "mg": 272, "nd_iter": 272, "outedgeview": 272, "in_edg": 272, "outedgedataview": 272, "has_predecessor": 272, "has_successor": 272, "indegreeview": 272, "inedgeview": 272, "outdegreeview": 272, "pred": 272, "succ": 272, "_convert_arrow_to_dynam": [273, 275], "atla": 273, "triad": 273, "mycielski": 273, "sudoku": 273, "edgetyp": 274, "utf": 274, "filenam": 274, "rb": 274, "bz2": 274, "uncompress": 274, "whitespac": 274, "obsolet": 274, "write_edgelist": 274, "fh": 274, "textlin": 274, "parse_edgelist": 274, "read_adjlist": 274, "marker": 274, "v_0": 275, "v_1": 275, "implicit": 275, "add_label": 276, "eval": 276, "talk": 278, "output_to_cli": [278, 295], "person_id": 278, "400": 278, "preemptiv": 279, "nodeport": [279, 299], "k8s_image_registri": 279, "k8s_image_repositori": 279, "k8s_image_tag": 279, "ifnotpres": 279, "512mi": 279, "etcd_addr": 279, "etcd_listening_client_port": 279, "2379": 279, "etcd_listening_peer_port": 279, "2380": 279, "k8s_vineyard_imag": 279, "vineyardcloudn": 279, "vineyardd": 279, "4gi": 279, "1gi": 279, "4mi": 279, "2mi": 279, "k8s_coordinator_pod_node_selector": 279, "k8s_engine_pod_node_selector": 279, "dangling_timeout_second": 279, "reconnect": 279, "localhost": [279, 305], "deregist": 279, "256mi": 279, "json": 279, "5gi": 279, "__enter__": 279, "__exit__": 279, "exc_typ": 279, "exc_valu": 279, "exc_tb": 279, "unregist": 279, "default_config_fil": 279, "gs_config_path": 279, "overwrit": 279, "ip": [279, 303], "inspect": 279, "burstabl": 279, "qo": 279, "preempt": 279, "namespac": 279, "loadbalanc": [279, 299], "secret": [279, 296, 305], "daemonset": 279, "fallback": 279, "bundl": 279, "etcd01": 279, "etcd02": 279, "etcd03": 279, "2gi": 279, "tinyurl": 279, "3nx6k7ph": 279, "bucket": [279, 295], "hostpath": [279, 296, 299], "mountpath": [279, 296, 299], "path1": 279, "path2": 279, "pvc": 279, "persistentvolumeclaim": 279, "claimnam": 279, "kill": 279, "heartbeat": 279, "dangl": 279, "k8s_client_config": 279, "kube_config": 279, "load_kube_config": 279, "eg": 279, "config_fil": 279, "kube": 279, "client_configur": 279, "persist_config": 279, "current_context": 279, "gcp": 279, "token": [279, 284], "refresh": 279, "reject": 279, "lost": 279, "resource_nam": 279, "sigint": 279, "sigterm": 279, "signal": 279, "engine_config": 279, "node_label": 279, "recreat": 279, "run_fetch": 279, "lock": 279, "describl": 280, "meant": 284, "moreov": 284, "vertexid": 284, "inject": 284, "edgeid": 284, "tail": 284, "elementid": 284, "propertykei": 284, "accessor": 284, "marko": 284, "neq": [284, 303], "gt": [284, 303], "lt": [284, 303], "outsid": [284, 303], "textp": [284, 303], "startingwith": [284, 303], "endingwith": [284, 303], "rko": 284, "ark": 284, "notstartingwith": [284, 303], "notendingwith": [284, 303], "notcontain": [284, 303], "unequ": 284, "nest": 284, "wheretravers": 284, "startkei": 284, "nottravers": 284, "deduplabel": 284, "composit": 284, "impli": 284, "flat": 284, "littl": 284, "selectkei": 284, "accompani": 284, "aggregatefunc": 284, "ascend": 284, "asc": 284, "desc": 284, "bias": 284, "toss": 284, "uniontravers": 284, "sentenc": 284, "throughout": 284, "durat": 284, "matchsent": 284, "binder": 284, "graphnam": 284, "lengthrang": 284, "keyvaluepair": 284, "result_opt": [284, 303], "end_v": [284, 303], "all_v": [284, 303], "arithmet": 284, "connector": 284, "bit": 284, "vada": 284, "lop": 284, "josh": 284, "rippl": 284, "peter": 284, "alias": 284, "k1": 284, "k2": 284, "unrol": 284, "simplepath": [284, 303], "reflect": 284, "sack": [284, 303], "willing": 285, "past": 285, "implic": 285, "polymorph": 285, "instant": 285, "aka": 285, "applciat": 285, "pygrap": [285, 286], "frist": 285, "from_numpi": 285, "bind_sssp1": 285, "delai": 285, "screen": 285, "bind_sssp2": 285, "again": 285, "hardwar": 286, "vertex_bal": 286, "vcut": 286, "ecut": 286, "\u7684\u56fe\u5206\u6790\u5f15\u64ce\u7ee7\u627f\u4e86": 295, "\u8be5\u7cfb\u7edf\u4e8e": 295, "\u4e0a\u9996\u6b21\u63d0\u51fa\u5e76\u83b7\u5f97\u6700\u4f73\u8bba\u6587\u5956": 295, "\u4e0e\u4ee5\u5f80\u7684\u7cfb\u7edf\u7684\u4e0d\u540c": 295, "\u652f\u6301\u5c06\u4e32\u884c\u56fe\u7b97\u6cd5\u81ea\u52a8\u5e76\u884c\u5316": 295, "\u5728": [295, 296, 297, 298, 299, 302, 303, 304, 305], "\u4e2d": [295, 297, 298, 299, 305], "\u53ea\u9700\u8fdb\u884c\u5f88\u5c0f\u7684\u66f4\u6539\u5373\u53ef\u8f7b\u677e\u5730\u5c06\u4e32\u884c\u7b97\u6cd5\u5373\u63d2\u5373\u7528": 295, "\u4f7f\u5176\u5e76\u884c\u5316\u7684\u8fd0\u884c\u5728\u5206\u5e03\u5f0f\u73af\u5883": 295, "\u5e76\u9ad8\u6548\u5730\u5904\u7406\u5927\u89c4\u6a21\u56fe\u6570\u636e": 295, "\u9664\u4e86\u6613\u4e8e\u7f16\u7a0b\u5916": 295, "\u8fd8\u88ab\u8bbe\u8ba1\u4e3a\u9ad8\u6548\u4e14\u53ef\u62d3\u5c55\u7684\u7cfb\u7edf": 295, "\u53ef\u7075\u6d3b\u5e94\u5bf9\u73b0\u5b9e\u4e2d\u56fe\u5e94\u7528\u591a\u53d8\u7684\u89c4\u6a21": 295, "\u591a\u6837\u6027\u548c\u590d\u6742\u6027": 295, "\u56fe\u5206\u6790\u5f15\u64ce\u5185\u7f6e\u4e86\u8bb8\u591a\u5e38\u7528\u7684\u56fe\u5206\u6790\u7b97\u6cd5": 295, "\u5305\u62ec\u8fde\u901a\u6027\u5206\u6790\u7b97\u6cd5": 295, "\u8def\u5f84\u5206\u6790\u7b97\u6cd5": 295, "\u793e\u533a\u68c0\u6d4b\u548c\u4e2d\u5fc3\u5ea6\u8ba1\u7b97\u7b49\u7c7b\u578b": 295, "\u5185\u7f6e\u7b97\u6cd5\u53ef\u4ee5\u5728\u56fe\u4e0a\u8f7b\u677e\u8c03\u7528": 295, "\u521b\u5efa\u9ed8\u8ba4": 295, "\u5e76\u52a0\u8f7d\u5c5e\u6027\u56fe": 295, "\u5927\u591a\u6570\u5185\u7f6e\u7b97\u6cd5\u53ea\u652f\u6301\u5728\u7b80\u5355\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 295, "\u56e0\u6b64\u6211\u4eec\u9700\u8981\u5148\u901a\u8fc7\u9876\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u6765\u751f\u6210\u4e00\u4e2a\u7b80\u5355\u56fe": 295, "result_lpa": 295, "result_sssp": 295, "\u5185\u7f6e\u7b97\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u5982\u4e0b\u6240\u793a": 295, "\u5177\u4f53\u67d0\u4e2a\u7b97\u6cd5\u662f\u5426\u652f\u6301\u5c5e\u6027\u56fe\u4e5f\u5728\u5176\u6587\u6863\u8fdb\u884c\u4e86\u63cf\u8ff0": 295, "\u7b97\u6cd5\u7684\u652f\u6301\u5217\u8868\u4f1a\u968f\u7740\u4e0d\u65ad\u589e\u52a0\u6301\u7eed\u66f4\u65b0\u4e2d": 295, "\u5f53\u5b8c\u6210\u4e00\u6b21\u56fe\u8ba1\u7b97": 295, "\u8ba1\u7b97\u7ed3\u679c\u4f1a\u88ab\u5305\u88c5\u6210": 295, "\u7c7b": [295, 305], "\u4fdd\u5b58\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u5185\u5b58\u4e2d": 295, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u5c06\u7ed3\u679c\u4f20\u5230\u5ba2\u6237\u7aef\u8fdb\u884c\u5904\u7406": 295, "\u6216\u662f\u5199\u5165\u4e91\u4e2d\u67d0\u4f4d\u7f6e\u6216\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf": 295, "\u652f\u6301\u7528\u6237\u901a\u8fc7\u4ee5\u4e0b\u65b9\u6cd5\u6765\u83b7\u53d6\u7ed3\u679c\u6570\u636e": 295, "\u8f6c\u5316\u4e3a\u76f8\u5e94\u6570\u636e\u7c7b\u578b": 295, "\u6216\u5199\u5165": 295, "\u6216\u672c\u5730\u76ee\u5f55\u4e2d": 295, "pod\u4e2d\u7684\u672c\u5730\u76ee\u5f55": 295, "\u6216\u5199\u5165\u672c\u5730\u7684": 295, "lpa_result": 295, "txt": 295, "\u6570\u636e\u7ed3\u6784": 295, "\u6b64\u5916": [295, 299], "\u5982": [295, 298, 301, 303], "\u5feb\u901f\u4e0a\u624b": [295, 301], "\u4e2d\u6240\u793a": 295, "\u7528\u6237\u53ef\u4ee5\u5c06\u8ba1\u7b97\u7ed3\u679c\u52a0\u56de\u5230\u8be5\u56fe\u6570\u636e\u4e2d\u4f5c\u4e3a\u9876\u70b9": 295, "\u7684\u65b0\u5c5e\u6027": 295, "\u5217": 295, "\u5c06\u7ed3\u679c\u4f5c\u4e3a\u65b0\u5217\u6dfb\u52a0\u56de\u5c5e\u6027\u56fe": 295, "\u5217\u540d\u4e3a": 295, "\u5e76\u751f\u6210\u4e00\u5f20\u65b0\u56fe": 295, "new_graph": [295, 300], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u9009\u62e9\u5668": 295, "\u6765\u5b9a\u4e49\u5c06\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e9b\u90e8\u5206\u5199\u56de\u56fe\u6570\u636e": 295, "\u9009\u62e9\u5668\u6307\u5b9a\u4e86\u8ba1\u7b97\u7ed3\u679c\u4e2d\u7684\u54ea\u4e00\u90e8\u5206\u4f1a\u88ab\u5904\u7406": 295, "\u7c7b\u4f3c\u7684": 295, "\u56fe\u6570\u636e\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u88ab\u5904\u7406\u6570\u636e\u7684\u4e00\u90e8\u5206": 295, "\u4f8b\u5982\u9876\u70b9id": 295, "\u6211\u4eec\u4e3a\u9009\u62e9\u5668\u4fdd\u7559\u4e86\u4e09\u4e2a\u5173\u952e\u5b57": 295, "\u4ee3\u8868\u7ed3\u679c": 295, "\u5206\u522b\u4ee3\u8868\u9876\u70b9\u548c\u8fb9": 295, "\u4ee5\u4e0b\u662f\u7ed3\u679c\u5904\u7406\u4e2d\u9009\u62e9\u5668\u7684\u4e00\u4e9b\u793a\u4f8b": 295, "\u83b7\u53d6\u9876\u70b9\u4e0a\u7684\u7ed3\u679c": 295, "\u8f6c\u6362\u4e3a": [295, 304], "\u4f7f\u7528\u9876\u70b9\u7684": 295, "\u4f5c\u4e3a\u540d\u4e3a": 295, "\u7684\u5217": 295, "df_vd": 295, "\u4f7f\u7528\u7ed3\u679c\u5217\u4f5c\u4e3a\u540d\u4e3a": 295, "df_result": 295, "property0": 295, "label0": 295, "\u5bf9\u4e8e\u5c5e\u6027\u56fe\u7684\u7ed3\u679c": 295, "\u4f5c\u4e3av\u548ce\u7684\u6807\u7b7e\u9009\u62e9\u5668": 295, "\u5c06": [295, 304], "\u9876\u70b9\u7684": 295, "\u4f5c\u4e3a": [295, 296, 305], "\u4f7f\u7528\u5199\u5728\u5e26\u6709label0\u7684\u9876\u70b9\u4e0a\u7684property0\u4f5c\u4e3a": 295, "gs_data": 295, "\u53ef\u4ee5\u67e5\u770b": 295, "\u83b7\u53d6\u66f4\u591a\u7ec6\u8282": 295, "\u5982\u679c\u5185\u7f6e\u7b97\u6cd5\u65e0\u6cd5\u6ee1\u8db3\u9700\u6c42": 295, "\u7528\u6237\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 295, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": 295, "\u5728\u7eaf": 295, "\u6a21\u5f0f": [295, 303], "\u4e0b\u4f7f\u7528": 295, "\u7f16\u7a0b\u6a21\u578b\u7f16\u5199\u7b97\u6cd5": 295, "\u4e3a\u4e86\u5b9e\u73b0\u81ea\u5df1\u7684\u7b97\u6cd5": 295, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u6b64\u7c7b": 295, "\u5982\u4ee3\u7801\u6240\u793a": 295, "\u7528\u6237\u9700\u8981\u5b9e\u73b0\u4e00\u4e2a\u4ee5": 295, "\u88c5\u9970\u7684\u7c7b": 295, "\u5e76\u63d0\u4f9b\u4e09\u4e2a\u4e32\u884c": 295, "\u56fe\u7b97\u6cd5\u51fd\u6570": 295, "\u51fd\u6570\u7528\u4e8e\u8bbe\u7f6e\u7b97\u6cd5\u521d\u59cb\u72b6\u6001": 295, "\u51fd\u6570\u5b9a\u4e49\u7b97\u6cd5\u7684\u5c40\u90e8\u8ba1\u7b97": 295, "\u51fd\u6570\u5b9a\u4e49\u5bf9\u5206\u533a\u6570\u636e\u7684\u589e\u91cf\u8ba1\u7b97": 295, "\u4e0e": 295, "\u76f8\u5173\u7684\u5b8c\u6574": 295, "\u53ef\u4ee5\u53c2\u8003": 295, "\u4ee5\u5355\u6e90\u6700\u77ed\u8def\u5f84\u7b97\u6cd5": 295, "\u4e3a\u4f8b": [295, 299], "\u7528\u6237\u5728": 295, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u7684": 295, "\u7b97\u6cd5\u53ef\u5982\u4e0b\u6240\u793a": 295, "\u521d\u59cb\u5316\u6bcf\u4e2a\u9876\u70b9\u7684\u8ddd\u79bb": 295, "\u4ececontext\u4e2d\u83b7\u53d6\u6e90\u9876\u70b9": 295, "\u5728\u6e90\u9876\u70b9\u6240\u5728\u5206\u533a\u4e2d": 295, "\u8fd0\u884cdijkstra\u7b97\u6cd5\u4f5c\u4e3a\u90e8\u5206\u8ba1\u7b97": 295, "\u4f7f\u7528\u8fb9\u4e0a\u7b2c\u4e09\u5217\u6570\u636e\u4f5c\u4e3a\u4e24\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb": 295, "\u589e\u91cf\u8ba1\u7b97": 295, "\u66f4\u65b0\u6700\u77ed\u8ddd\u79bb": 295, "\u7528\u6237\u4ec5\u9700\u8981\u8bbe\u8ba1\u548c\u5b9e\u73b0\u5355\u5206\u533a\u7684\u4e32\u884c\u7b97\u6cd5": 295, "\u800c\u4e0d\u9700\u8981\u8003\u8651\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u7684\u5206\u533a\u901a\u4fe1\u548c\u6d88\u606f\u4f20\u9012": 295, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": [295, 305], "\u7ecf\u5178\u7684": 295, "\u7b97\u6cd5\u53ca\u5176\u589e\u91cf\u7248\u672c\u5c31\u53ef\u4ee5\u7528\u4e8e\u5728\u96c6\u7fa4\u4e0a\u7684\u5927\u89c4\u6a21\u56fe\u6570\u636e\u8ba1\u7b97": 295, "\u9664\u4e86\u57fa\u4e8e\u5b50\u56fe\u7684": 295, "\u6a21\u578b\u4e4b\u5916": 295, "\u4e5f\u652f\u6301\u4ee5\u9876\u70b9\u4e3a\u4e2d\u5fc3\u7684": 295, "\u7f16\u7a0b\u6a21\u578b": 295, "\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u4ee5\u4e0b\u7b97\u6cd5\u7c7b\u6765\u5728": 295, "\u6a21\u578b\u4e2d\u5f00\u53d1\u7b97\u6cd5": 295, "\u6a21\u578b\u4e0d\u540c": 295, "\u7b97\u6cd5\u7c7b\u7684\u88c5\u9970\u5668\u4e3a": 295, "\u8be5\u7c7b\u65b9\u6cd5\u662f": 295, "\u5b9a\u4e49\u5728\u9876\u70b9\u4e0a\u7684": 295, "\u800c\u4e0d\u540c\u4e8e": 295, "\u6a21\u578b\u4e2d\u5b9a\u4e49\u5728\u56fe\u5206\u533a\u4e0a": 295, "\u8fd8\u662f\u4ee5": 295, "\u6a21\u578b\u4e0b\u7684\u7b97\u6cd5\u5982\u4e0b\u6240\u793a": 295, "\u88c5\u9970\u5668": 295, "\u5b9a\u4e49\u9876\u70b9\u6570\u636e\u548c\u6d88\u606f\u6570\u636e\u7684\u7c7b\u578b": 295, "\u652f\u6301\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u901a\u8fc7": 295, "\u4e0a\u7684\u63a5\u53e3\u6765\u4f7f\u7528\u5b9a\u4e49\u5728": 295, "\u4e2d\u7684": [295, 296, 298], "\u51fd\u6570": [295, 303], "\u4e0b\u5217\u4ee3\u7801": 295, "\u4f1a\u88ab\u7ffb\u8bd1\u6210\u5982\u4e0b\u7684": 295, "\u4ee3\u7801\u4ee5\u9ad8\u6548\u5730\u6267\u884c": 295, "\u7528\u6237\u9700\u8981\u5728\u5b9a\u4e49\u7b97\u6cd5\u540e\u8c03\u7528\u7b97\u6cd5": 295, "\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 295, "\u5728\u56fe\u4e0a\u8fd0\u884c\u81ea\u5df1\u7684\u7b97\u6cd5": 295, "\u5f97\u5230\u8ba1\u7b97\u7ed3\u679c": 295, "\u8fd9\u91cc": [295, 296, 305], "\u662f\u4e0e": 295, "\u76f8\u5bf9\u5e94\u7684": 295, "\u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u4e4b\u540e": 295, "\u60a8\u53ef\u4ee5\u901a\u8fc7": 295, "\u65b9\u6cd5\u5c06\u7b97\u6cd5\u4fdd\u5b58\u6210": 295, "\u5305\u4ee5\u5907\u5c06\u6765\u4f7f\u7528": 295, "\u5728\u6b64\u4e4b\u540e": 295, "\u60a8\u53ef\u4ee5\u4ece": 295, "\u5305\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 295, "\u4ecegar\u5305\u4e2d\u52a0\u8f7d\u81ea\u5df1\u7684\u7b97\u6cd5": 295, "\u652f\u6301\u7528\u6237\u7f16\u5199java\u7684pi": 295, "\u5e76\u4e14\u8fd0\u884c\u5728\u56fe\u5206\u6790\u5f15\u64ce\u4e0a": 295, "\u6211\u4eec\u9996\u5148\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u6f14\u793a\u5982\u679c\u5728graphscop": 295, "\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u4e00\u4e2ajava\u7684\u56fe\u7b97\u6cd5": 295, "\u7136\u540e\u6211\u4eec\u5c06\u5c55\u793a\u5982\u679c\u5b9e\u73b0\u5e76\u8fd0\u884c\u81ea\u5b9a\u4e49\u7684java\u56fe\u7b97\u6cd5": 295, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7ecf\u5178\u56fe\u5206\u6790\u7b97\u6cd5\u7684\u793a\u4f8b\u5b9e\u73b0": 295, "\u901a\u8fc7\u4e0b\u9762\u5c55\u793a\u7684\u4f8b\u5b50": 295, "\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u5728graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8bd5\u7740\u8fd0\u884c\u4ed6\u4eec": 295, "\u9996\u5148\u4f60\u9700\u8981\u4ece\u4e0b\u8f7d\u6211\u4eec\u63d0\u4f9b\u7684\u793a\u4f8bapp\u7684\u5408\u96c6": 295, "\u65e0\u9700\u4efb\u4f55\u66f4\u6539\u4f60\u5c31\u53ef\u4ee5\u5728": 295, "graphscope\u56fe\u5206\u6790\u5f15\u64ce\u4e0a\u8fd0\u884c\u8fd9\u4e9b\u793a\u4f8b\u7b97\u6cd5": 295, "\u7136\u540e\u4f60\u9700\u8981\u6253\u5f00graphscope\u7684python": 295, "\u5c1d\u8bd5\u8f7d\u56fe\u5e76\u4e14\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684bfs\u7684\u7b97\u6cd5": 295, "dist_0": 295, "\u4e3a\u4e86\u7f16\u5199java\u5b9e\u73b0\u7684\u56fe\u7b97\u6cd5": 295, "\u7528\u6237\u9700\u8981\u501f\u52a9\u4e8e": 295, "\u8bf7\u53c2\u8003": [295, 303], "\u6765\u5c06": 295, "\u5b89\u88c5\u5230\u4f60\u7684\u672c\u5730\u73af\u5883\u4e0a": 295, "\u5b89\u88c5\u5b8c\u6210\u540e": 295, "\u4f60\u9700\u8981\u5c06": 295, "\u7684\u4f9d\u8d56\u6dfb\u52a0\u5230\u4f60\u7684maven\u9879\u76ee\u4f9d\u8d56\u4e2d": 295, "\u7528\u6237\u5e94\u5f53\u6ce8\u610f\u5728": 295, "\u7684\u4f9d\u8d56\u914d\u7f6e\u4e0a\u5e94\u5f53\u6dfb\u52a0": 295, "\u6765\u786e\u4fdd": 295, "\u6240\u6709\u5fc5\u8981\u7684\u4f9d\u8d56\u90fd\u88ab\u5305\u62ec\u5230": 295, "\u7528\u6237\u5728\u5f00\u53d1\u81ea\u5df1\u7b97\u6cd5\u7684\u8fc7\u7a0b\u4e2d": 295, "\u53ef\u80fd\u4f1a\u7528\u5230\u5176\u4ed6\u7684\u7b2c\u4e09\u65b9jar\u5305": 295, "\u4e3a\u4e86\u89e3\u51b3\u4f9d\u8d56jar\u5305\u7684\u7248\u672c\u95ee\u9898": 295, "\u7528\u6237\u9700\u8981\u4f7f\u7528\u786e\u4fdd\u81ea\u5df1\u751f\u6210\u7684jar\u5305\u5305\u542b\u6240\u6709\u4f9d\u8d56\u7684jar\u5305": 295, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528maven\u63d2\u4ef6": 295, "pluge": 295, "\u7528\u6237\u5728\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5\u65f6": 295, "\u7528\u6237\u9700\u8981\u6309\u7167": 295, "\u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7b97\u6cd5": 295, "\u5e76\u4e14\u9700\u8981\u6839\u636e\u9700\u8981\u7684app\u7c7b\u578b\u6765\u5b9e\u73b0": 295, "\u4e2d\u76f8\u5e94\u7684\u63a5\u53e3\u5e76\u4e14\u5b9e\u73b0\u63a5\u53e3": 295, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u5c5e\u6027\u56fe\u4e0a": 295, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u63a5\u53e3": 295, "defaultpropertyappbas": 295, "\u6216": [295, 296, 297, 298, 301, 303], "parallelpropertyappbas": 295, "\u5982\u679c\u7528\u6237\u671f\u671b\u7b97\u6cd5\u8fd0\u884c\u5728\u7b80\u5355\u56fe\u4e0a": 295, "\u90a3\u4e48\u5b9a\u4e49\u7684app\u5e94\u8be5\u5b9e\u73b0\u501f\u53e3": 295, "defaultappbas": 295, "\u540c\u65f6\u7528\u6237\u9700\u8981\u5b9e\u73b0app\u76f8\u5e94\u7684": 295, "\u6765\u4fdd\u5b58\u8de8superstep\u7684\u6570\u636e": 295, "\u5176\u5e94\u8be5\u662f": 295, "defaultpropertycontextbas": 295, "parallelpropertycontextbas": 295, "defaultcontextbas": 295, "\u6216\u8005": [295, 297, 304, 305], "\u7684\u7684\u5b50\u7c7b": 295, "\u901a\u8fc7\u7ee7\u627f": 295, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5230\u4e0d\u540c\u7c7b\u578b\u7684context\u6240\u62e5\u6709\u7684\u7279\u6027": 295, "\u901a\u8fc7\u8fd9\u4e24\u79cdcontext\u63d0\u4f9b\u7684\u501f\u53e3\u6240\u5b58\u50a8\u7684\u6570\u636e\u5728\u7a0b\u5e8f\u6267\u884c\u5b8c\u4e4b\u540e\u53ef\u4ee5\u88ab\u7528\u6237\u8bbf\u95ee": 295, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728python": 295, "client\u4e2dquery\u8fd4\u56de\u7684context": 295, "\u5bf9\u8c61\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e": 295, "\u8fd9\u91cc\u6211\u4eec\u5c55\u793a\u4e00\u4e2a\u7b80\u5355\u7684app\u7684\u5b9e\u73b0": 295, "\u5b83\u6240\u505a\u7684\u4e8b\u60c5\u53ea\u662f\u5bf9\u4e00\u4e2a\u7b80\u5355\u56fe\u7684\u6240\u6709\u8fb9\u8fdb\u884c\u4e86\u904d\u5386": 295, "\u8be5app\u5bf9\u5e94\u7684context\u7684\u5b9e\u73b0": 295, "\u5728\u5b9e\u73b0\u4e86\u81ea\u5df1\u7684\u7b97\u6cd5\u4e4b\u540e": 295, "\u7528\u6237\u53ef\u80fd\u4f1a\u60f3\u5728\u63d0\u4ea4\u5230graphscope\u7684\u56fe\u5206\u6790\u5f15\u64ce\u8fd0\u884c\u524d": 295, "\u5148\u5728\u672c\u5730\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 295, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u811a\u672c\u6765\u6ee1\u8db3\u7528\u6237\u7684": 295, "\u8fd9\u4e2a\u9700\u6c42": 295, "\u4e3a\u4e86\u9a8c\u8bc1\u7b97\u6cd5\u5b9e\u73b0\u7684\u6b63\u786e\u6027": 295, "\u7528\u6237\u53ea\u9700\u8981\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4": 295, "graphscope_repo": 295, "app_class_nam": 295, "java_path": 295, "path_to_your_jar": 295, "param_str": 295, "params_str": 295, "\u662f\u7528\u6237\u81ea\u5b9a\u4e49\u7684java": 295, "app\u7684\u7c7b\u7684\u5168\u540d": 295, "\u6307\u5411\u5305\u542b\u7528\u6237\u60f3\u8981\u8fd0\u884c\u7684\u7b97\u6cd5\u7684jar\u5305": 295, "\u53ef\u4ee5\u901a\u8fc7": 295, "\u6765\u5236\u5b9acontext\u521d\u59cb\u5316\u9700\u8981\u7684\u53c2\u6570": 295, "\u4f8b\u5982\u5bf9\u4e8ebfs\u7b97\u6cd5\u53ef\u4ee5\u4f7f\u7528": 295, "\u6765\u6807\u8bb0\u521d\u59cb\u8282\u70b9\u662f6": 295, "\u5e76\u884c\u7ebf\u7a0b\u6570\u4e3a1": 295, "\u53ef\u4ee5": 295, "\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6765\u8fd0\u884ctravers": 295, "jar_path": 295, "\u5728\u672c\u5730\u9a8c\u8bc1\u81ea\u5b9a\u4e49\u7b97\u6cd5\u7684\u6b63\u786e\u6027\u4e4b\u540e": 295, "\u4f60\u53ef\u4ee5\u901a\u8fc7graphscope\u7684python": 295, "client\u6765\u63d0\u4ea4\u8fd0\u884cjar\u5305": 295, "\u4e00\u4e2ajar\u5305\u4e2d\u53ef\u4ee5\u5305\u542b\u4e0d\u540c\u7684app\u5b9e\u73b0": 295, "\u7528\u6237\u53ef\u4ee5\u591a\u6b21\u63d0\u4ea4\u76f8\u540c\u7684jar\u5305\u4f46\u662f\u8fd0\u884c\u4e0d\u540c": 295, "\u7684app": 295, "\u8bf7\u8010\u5fc3\u7b49\u5f85\u8ba1\u7b97\u5b8c\u6210": 295, "\u5f53\u8ba1\u7b97\u5b8c\u6210\u540e": 295, "\u4f60\u53ef\u4ee5\u901a\u8fc7": [295, 296, 298], "\u5bf9\u8c61\u6765\u83b7\u53d6\u8ba1\u7b97\u7ed3\u679c": 295, "\u76f8\u5173\u8bba\u6587": 295, "wenfei": 295, "jingbo": 295, "xu": 295, "wenyuan": 295, "yu": 295, "jingren": 295, "zhou": 295, "xiaojian": 295, "luo": 295, "ping": 295, "qiang": 295, "yin": 295, "yang": 295, "cao": 295, "ruiqi": 295, "tod": [295, 301], "yinghui": 295, "wu": 295, "jiaxin": 295, "jiang": 295, "43rd": 295, "vldb": [295, 301], "award": 295, "zeyu": 295, "zheng": 295, "bohan": 295, "zhang": 295, "chao": 295, "tian": 295, "sig": 295, "\u4ee5": [296, 299, 300, 302, 305], "\u955c\u50cf\u7684\u65b9\u5f0f\u5206\u53d1\u5f15\u64ce\u7b49\u7ec4\u4ef6": 296, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [296, 298], "\u5982\u679c\u8fd0\u884c": 296, "\u7684\u96c6\u7fa4\u673a\u5668\u4e0a\u4e0d\u5b58\u5728\u8be5\u955c\u50cf": 296, "\u5219\u4f1a\u62c9\u53d6\u5bf9\u5e94\u7248\u672c\u7684\u6700\u65b0\u955c\u50cf": 296, "\u56e0\u6b64": [296, 297, 299], "\u8bf7\u786e\u4fdd\u60a8\u7684\u96c6\u7fa4\u53ef\u4ee5\u8bbf\u95ee\u516c\u5171\u955c\u50cf\u4ed3\u5e93": 296, "\u4f1a\u8bdd": [296, 299], "\u5ba2\u6237\u7aef": [296, 297, 301], "\u5b83\u5c01\u88c5": 296, "\u7ba1\u7406\u7740": 296, "\u5f15\u64ce\u7684\u5404\u79cd\u7ec4\u4ef6": 296, "\u5e76": 296, "\u8fde\u63a5": 296, "\u64cd\u4f5c\u7528\u6237\u5728": 296, "\u96c6\u7fa4\u4e0a\u7684": 296, "\u5f15\u64ce": 296, "\u5982\u4e0a\u8ff0\u4ee3\u7801\u6240\u793a": 296, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u7684\u901a\u8fc7\u4f1a\u8bdd\u6765\u62c9\u8d77\u4e00\u4e2a": 296, "\u5b9e\u4f8b": 296, "\u7528\u6237\u6709\u65f6\u9700\u8981\u4f7f\u7528\u5728\u672c\u673a\u78c1\u76d8\u4e0a\u7684\u6570\u636e": 296, "\u6211\u4eec\u63d0\u4f9b\u4e86\u9009\u9879\u4f9b\u7528\u6237\u5c06\u672c\u673a\u7684\u76ee\u5f55\u6302\u8f7d\u5230\u96c6\u7fa4\u4e0a": 296, "\u5047\u5b9a\u6211\u4eec\u8981\u5c06\u672c\u673a\u7684": 296, "\u7684\u8def\u5f84\u6302\u8f7d\u5230": 296, "testingdata": [296, 299], "\u8def\u5f84": [296, 305], "\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u5982\u4e0b\u4e00\u4e2a\u5b57\u5178": 296, "\u7136\u540e": [296, 304], "\u5c06\u5176\u901a\u8fc7": 296, "\u7684\u53c2\u6570\u4f20\u7ed9\u4f1a\u8bdd\u7684\u6784\u9020\u51fd\u6570": 296, "\u6ce8\u610f\u8fd9\u91cc\u7684\u672c\u673a\u8def\u5f84\u662f\u76f8\u5bf9\u4e8e": 296, "\u8282\u70b9\u7684\u6982\u5ff5": 296, "\u5982\u679c\u4f60\u662f\u901a\u8fc7": 296, "\u521b\u5efa\u7684\u96c6\u7fa4": 296, "\u90a3\u4e48\u4f60\u9700\u8981\u5c06\u8fd9\u4e2a\u76ee\u5f55\u62f7\u8d1d\u5230": 296, "\u7684\u865a\u62df\u4e3b\u673a\u7684\u76f8\u5e94\u8def\u5f84\u4e0a": 296, "\u6216\u8005\u5728\u914d\u7f6e\u4e2d\u5c06\u8def\u5f84\u63d0\u524d\u6302\u8f7d\u5230\u865a\u62df\u4e3b\u673a\u4e0a\u53bb": 296, "\u67e5\u770b\u66f4\u591a\u7ec6\u8282": 296, "expandus": [296, 299], "\u4e0a\u7684\u4e00\u4e2a": 296, "\u5b9e\u4f8b\u5305\u542b": 296, "\u4e00\u4e2a\u8fd0\u884c": 296, "\u7684": [296, 297, 298, 301, 306], "\u8d1f\u8d23\u5143\u4fe1\u606f\u7684\u540c\u6b65": 296, "\u8d1f\u8d23\u5bf9": 296, "\u5f15\u64ce\u5bb9\u5668\u7684\u7ba1\u7406": 296, "\u4ee5\u53ca\u4e00\u7ec4\u8fd0\u884c": 296, "\u5f15\u64ce\u5bb9\u5668\u7684": 296, "replicaset": 296, "\u5bf9\u8c61": 296, "\u540e\u7aef\u670d\u52a1\u7684\u5165\u53e3": 296, "\u901a\u8fc7": [296, 299], "\u63a5\u6536\u6765\u81ea": 296, "\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u548c\u547d\u4ee4": 296, "\u5e76\u7ba1\u7406\u7740\u56fe\u5206\u6790\u5f15\u64ce": 296, "\u56fe\u67e5\u8be2\u5f15\u64ce": 296, "\u56fe\u5b66\u4e60\u5f15\u64ce": [296, 301], "\u7684\u751f\u547d\u5468\u671f": 296, "\u60a8\u53ef\u4ee5\u6839\u636e\u9700\u6c42\u914d\u7f6e\u5f15\u64ce\u955c\u50cf\u5730\u5740\u7b49\u53c2\u6570": 296, "\u8bf7\u5728": 296, "\u4e2d\u53c2\u9605\u66f4\u591a\u7684\u8be6\u7ec6\u4fe1\u606f": 296, "\u83b7\u53d6\u5e76\u6dfb\u52a0\u4ed3\u5e93\u4fe1\u606f": 296, "repo": [296, 297], "\u5b89\u88c5": [296, 301], "release_nam": 296, "\u68c0\u6d4bgraphscope\u670d\u52a1\u53ef\u7528\u6027": 296, "\u53c2\u8003": 296, "\u8be5\u94fe\u63a5": 296, "\u4ee5\u901a\u8fc7python\u5ba2\u6237\u7aef\u8fde\u63a5\u5230\u9884\u542f\u52a8\u7684graphscope\u670d\u52a1": 296, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728aws\u6216\u963f\u91cc\u4e91\u4e0a\u521b\u5efa": 296, "\u96c6\u7fa4\u7684\u4ea4\u4e92\u5f0f\u811a\u672c": 296, "\u8fd9\u4e00\u811a\u672c\u53ef\u4ee5\u5e2e\u52a9\u7528\u6237\u4f7f\u7528\u5df2\u6709\u7684\u96c6\u7fa4\u6216\u521b\u5efa\u65b0\u7684": 296, "\u96c6\u7fa4": [296, 298, 302], "\u7136\u540e\u8f93\u51fa\u96c6\u7fa4\u7684\u914d\u7f6e\u6587\u4ef6": 296, "\u7528\u6cd5\u5982\u4e0b": 296, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7": 296, "launch_clust": 296, "\u83b7\u5f97\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 296, "pyyaml": 296, "boto3": 296, "your_access_key_id": 296, "your_access_key_secret": 296, "region": 296, "your_region_nam": 296, "kube_config_path": 296, "alibabacloud_cs20151215": 296, "alibabacloud_ecs20140526": 296, "alibabacloud_vpc20160428": 296, "your_region_id": 296, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u53ef\u5728\u672c\u5730\u5b89\u88c5graphscope\u76f8\u5173\u4f9d\u8d56\u7684\u811a\u672c": 296, "\u8be5\u811a\u672c\u53ef\u4ee5\u8fd0\u884c\u5728": 296, "\u5e73\u53f0\u4e0a": 296, "\u4e3b\u8981\u7684\u7528\u6cd5\u5982\u4e0b": 296, "\u83b7\u53d6\u66f4\u8be6\u7ec6\u7684\u5e2e\u52a9\u4fe1\u606f": 296, "\u5f00\u53d1\u76f8\u5173\u4f9d\u8d56": 296, "install_dep": [296, 297, 302], "\u672c\u5730\u90e8\u7f72": 296, "graphscope_env": [296, 297], "\u7684\u80cc\u540e\u6709\u4e00\u7fa4\u6d3b\u8dc3\u7684\u5de5\u7a0b\u4eba\u5458\u548c\u7814\u7a76\u4eba\u5458\u56e2\u961f\u6765\u63a8\u8fdb\u65e5\u5e38\u7684\u5f00\u53d1\u548c\u7ef4\u62a4": 297, "\u6211\u4eec\u70ed\u5ff1\u6b22\u8fce\u6765\u81ea\u5f00\u6e90\u793e\u533a\u7684": 297, "\u4e3a\u6539\u5584\u8be5\u9879\u76ee\u6240\u505a\u7684\u4efb\u4f55\u8d21\u732e": 297, "\u9075\u5faa": 297, "licens": 297, "\u7684\u5f00\u6e90\u534f\u8bae": 297, "\u9700\u8981\u4e00\u4e9b\u7b2c\u4e09\u65b9\u7684\u5de5\u5177\u548c\u4f9d\u8d56": 297, "\u4e3a\u4e86\u8ba9\u5f00\u53d1\u8005\u66f4\u5bb9\u6613\u4e0a\u624b": 297, "\u6211\u4eec\u63d0\u4f9b\u4e86\u5b89\u88c5\u4e86\u6240\u9700\u4f9d\u8d56\u7684": 297, "\u955c\u50cf": 297, "\u5f00\u53d1\u8005\u9700\u8981\u901a\u8fc7": 297, "\u7684\u547d\u4ee4\u4ece\u6211\u4eec\u7684\u5f00\u6e90\u4ee3\u7801\u5e93": 297, "\u4e2d\u83b7\u5f97\u6700\u65b0\u7248\u7684\u4ee3\u7801": 297, "\u5728\u6b64\u57fa\u7840\u4e0a\u505a\u5f00\u53d1\u6216\u4ee3\u7801\u7684\u66f4\u6539": 297, "\u7136\u540e\u5728\u4ee3\u7801\u7684\u6839\u76ee\u5f55": 297, "\u6267\u884c": 297, "10240m": 297, "bash": 297, "minitest": 297, "unittest": 297, "\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6784\u5efa\u547d\u4ee4\u5f00\u53d1\u5e76\u6d4b\u8bd5\u5176\u4e2d\u67d0\u4e00\u4e2a\u6a21\u5757": 297, "\u6bd4\u5982": [297, 305], "\u56fe\u5206\u6790\u5f15\u64ce": [297, 301], "\u6a21\u5757": 297, "\u7136\u540e\u901a\u8fc7\u5982\u4e0b\u547d\u4ee4\u6784\u5efa": 297, "\u8be5\u547d\u4ee4\u4f1a\u5f00\u59cb": 297, "\u7684\u6784\u5efa\u8fc7\u7a0b": 297, "\u8be5\u8fc7\u7a0b\u5c06\u5728": 297, "\u7684\u5bb9\u5668\u4e2d\u6784\u5efa\u5f53\u524d\u6e90\u4ee3\u7801": 297, "\u5e76\u5c06\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u590d\u5236\u5230": 297, "\u8fd0\u884c\u65f6\u57fa\u7840\u955c\u50cf": 297, "\u751f\u6210\u7684\u955c\u50cf\u5c06\u88ab\u6807\u8bb0": 297, "\u4e3a": [297, 298, 299], "shortsha": 297, "\u5ba2\u6237\u7aef\u4e0d\u5305\u542b\u5728\u8be5\u955c\u50cf\u4e2d": 297, "\u6784\u5efa\u4e5f\u4e0e\u5f15\u64ce\u6709\u6240\u4e0d\u540c": 297, "\u5982\u679c\u5f00\u53d1\u8005\u6b63\u5728\u5f00\u53d1": 297, "\u5ba2\u6237\u7aef\u5e76\u4e14\u672a\u4fee\u6539\u5f15\u64ce\u76f8\u5173\u7684\u6587\u4ef6": 297, "\u90a3\u4e48": 297, "\u955c\u50cf\u662f\u4e0d\u9700\u8981\u91cd\u5efa\u7684": 297, "\u5f00\u53d1\u8005\u53ea\u9700\u8981\u5728\u672c\u5730\u91cd\u65b0\u5b89\u88c5": 297, "\u5ba2\u6237\u7aef\u5373\u53ef": 297, "\u6d4b\u8bd5\u65b0\u6784\u5efa\u7684\u955c\u50cf": 297, "\u7528\u6237\u53ef\u4ee5\u624b\u52a8\u6253\u5f00\u4e00\u4e2a\u4f1a\u8bdd": 297, "\u6307\u5b9a\u7528\u65b0\u7f16\u8bd1\u7684\u955c\u50cf": 297, "\u4e0b\u7684": 297, "\u5206\u53d1\u5305\u662f\u57fa\u4e8e": 297, "manylinux2014": 297, "\u73af\u5883\u4e0b\u6784\u5efa\u7684": 297, "py3": 297, "install_prefix": 297, "\u4e0b\u5206\u522b\u6784\u5efa": 297, "\u7531\u4e8e": 297, "\u4e0b\u7684\u6784\u5efa\u8fc7\u7a0b\u662f\u5728\u672c\u5730": 297, "\u975edocker": 297, "\u4e2d\u8fdb\u884c": 297, "\u56e0\u6b64\u9700\u8981\u672c\u5730\u4e8b\u5148\u5b89\u88c5": 297, "\u7684\u4f9d\u8d56": 297, "\u57fa\u4e8e\u5f53\u524d": 297, "\u73af\u5883\u4e0b\u7684": 297, "\u7248\u672c\u6784\u5efa": 297, "\u9700\u8981\u6ce8\u610f\u7684\u662f": [297, 299], "\u5982\u679c\u4f60\u9700\u8981\u8be5\u5206\u53d1\u5305\u80fd\u652f\u6301\u4e0d\u540c\u7684": 297, "\u7248\u672c": [297, 302], "\u4f60\u53ef\u80fd\u9700\u8981\u901a\u8fc7": 297, "conda": 297, "pyenv": 297, "\u5b89\u88c5\u591a\u4e2a": 297, "\u7684\u7248\u672c": 297, "black": 297, "\u98ce\u683c": 297, "\u5982\u679c\u4f60\u7684\u4ee3\u7801\u6ca1\u6709\u901a\u8fc7ci\u7684\u98ce\u683c\u68c0\u67e5": 297, "\u4f60\u53ef\u4ee5\u4f7f\u7528": 297, "clang": 297, "\u683c\u5f0f\u5316\u4f60\u7684\u4ee3\u7801": 297, "\u6211\u4eec\u6536\u96c6\u4e86\u7528\u6237\u4f7f\u7528": 298, "\u8fc7\u7a0b\u4e2d\u7684\u5e38\u89c1\u95ee\u9898": 298, "\u5982\u679c\u5728\u4e0b\u9762\u7684\u5217\u8868\u4e2d\u4ecd\u7136\u65e0\u6cd5\u627e\u5230\u60a8\u9047\u5230\u7684\u95ee\u9898\u7684\u7b54\u6848": 298, "\u53ef\u901a\u8fc7\u63d0\u4ea4": 298, "\u6216\u8005\u5728": 298, "\u4e0e\u6211\u4eec\u8054\u7cfb": 298, "\u8fd0\u884c": 298, "\u7cfb\u7edf\u9700\u8981\u7684\u6700\u5c0f\u8d44\u6e90\u662f\u591a\u5c11": 298, "\u5728\u901a\u8fc7": 298, "\u5ba2\u6237\u7aef\u4f7f\u7528": 298, "\u8fc7\u7a0b\u4e2d": 298, "\u9700\u8981\u7684\u6700\u4f4e": 298, "\u7248\u672c\u662f3": 298, "\u6700\u4f4epip\u7248\u672c\u662f": 298, "\u7cfb\u7edf\u652f\u6301\u4ee5\u5355\u673a\u6216\u5206\u5e03\u5f0f\u7684\u65b9\u5f0f\u90e8\u7f72": 298, "\u5355\u673a\u60c5\u51b5\u4e0b": 298, "\u8d44\u6e90\u9700\u6c42": 298, "\u6838": 298, "\u5185\u5b58": 298, "\u5728\u652f\u6301\u4ee5\u4e0b\u73af\u5883\u4e2d\u8fd0\u884c": 298, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u90e8\u7f72": 298, "\u9700\u8981\u7528\u6237\u62e5\u6709\u4e00\u4e2a": 298, "\u7684\u73af\u5883\u4e0a\u6d4b\u8bd5\u901a\u8fc7": 298, "\u662f\u5426\u5f3a\u4f9d\u8d56": 298, "\u652f\u6301\u5728\u5355\u673a\u6a21\u5f0f\u5b89\u88c5\u8fd0\u884c": 298, "\u7684\u9884\u7f16\u8bd1\u5305\u4ee5": 298, "\u7684\u5f62\u5f0f\u5206\u53d1": 298, "\u53ef\u4ee5\u7528": 298, "\u5feb\u901f\u5b89\u88c5": 298, "\u5982\u4f55\u5982\u67e5\u770b": 298, "\u7684\u8fd0\u884c\u65f6\u4fe1\u606f": 298, "\u8fd0\u884c\u4e0d\u6253\u5370\u65e5\u5fd7\u4fe1\u606f": 298, "\u53c2\u6570\u5f00\u542f\u65e5\u5fd7\u8f93\u51fa": 298, "\u5982\u679c\u60a8\u7684graphscope\u8fd0\u884c\u5728k8s\u96c6\u7fa4\u4e0a": 298, "\u53ef\u4ee5\u4f7f\u7528": [298, 304], "\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u5f53\u524d\u72b6\u6001": 298, "\u540c\u65f6\u5982\u679c\u4f60\u53ef\u4ee5\u8bbf\u95ee": 298, "\u7684\u78c1\u76d8": 298, "\u4e5f\u53ef\u5728": 298, "\u76ee\u5f55\u4e0b\u67e5\u770b\u8fd0\u884c\u65f6\u65e5\u5fd7": 298, "\u4e3a\u4ec0\u4e48\u5728\u4f7f\u7528": 298, "\u547d\u4ee4\u65f6": 298, "\u53d1\u73b0\u4e86\u4e00\u4e9b\u591a\u4f59\u7684": 298, "\u5bf9\u4e8e\u5176\u4e2d\u4e00\u4e9b\u5931\u8d25\u7684": 298, "\u53ea\u80fd\u901a\u8fc7\u624b\u52a8\u6267\u884c\u547d\u4ee4\u5982": 298, "pod_nam": 298, "\u8fdb\u884c\u5220\u9664": 298, "\u901a\u5e38\u60c5\u51b5\u4e0b": 298, "\u8be5\u95ee\u9898\u51fa\u73b0\u5728\u4f7f\u7528": 298, "\u90e8\u7f72": [298, 301], "\u65f6": [298, 299], "\u4f9d\u8d56\u4e00\u4e9b\u6743\u9650\u6765\u5220\u9664\u8fd0\u884c\u65f6\u7684\u8d44\u6e90": 298, "\u5982\u679c\u7528\u6237\u6ca1\u6709\u6b63\u786e\u8bbe\u7f6e": 298, "\u7b49\u6743\u9650": 298, "\u53ef\u80fd\u4e0d\u80fd\u6b63\u786e\u56de\u6536\u5206\u914d\u7684\u8d44\u6e90": 298, "\u8be6\u7ec6\u7ec6\u8282\u53ef\u4ee5\u67e5\u770b": 298, "\u662f\u56fe\u6570\u636e\u5e93\u5417": 298, "\u5e76\u4e0d\u662f\u4e00\u4e2a\u56fe\u6570\u636e\u5e93": 298, "\u4f46\u5176\u5305\u542b\u4e00\u4e2a\u6301\u4e45\u56fe\u5b58\u50a8\u7684\u7ec4\u4ef6": 298, "\u53ef\u4ee5\u88ab\u7528\u4f5c\u6570\u636e\u5e93": 298, "\u4e0a\u7684\u517c\u5bb9\u6027\u5982\u4f55": 298, "\u76ee\u524d": [298, 305], "graphscope\u652f\u6301gremlin\u8bed\u8a00\u4e2d\u7684\u5927\u90e8\u5206\u67e5\u8be2\u7b97\u5b50": 298, "\u53ef\u901a\u8fc7": 298, "\u8be5\u6587\u6863": 298, "\u67e5\u770b\u8be6\u7ec6\u7684\u652f\u6301\u4fe1\u606f": 298, "\u770b\u8d77\u6765\u5728\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u5361\u4f4f\u4e86": 298, "\u5982\u679c": 298, "\u770b\u8d77\u6765\u50cf\u5361\u4f4f": 298, "\u53ef\u80fd\u7684\u539f\u56e0\u6709": 298, "\u5728\u4f1a\u8bdd\u7684\u62c9\u8d77\u9636\u6bb5": 298, "\u5982\u679c\u5f53\u524d\u7f51\u7edc\u4e0b\u8f7d\u955c\u50cf\u8fc7\u6162": 298, "\u6216\u5f53\u524d\u96c6\u7fa4\u8d44\u6e90\u65e0\u6cd5\u6ee1\u8db3\u8bf7\u6c42\u7684\u8d44\u6e90\u65f6": 298, "\u4f1a\u9020\u6210\u5361\u4f4f\u7684\u73b0\u8c61": 298, "\u8f7d\u56fe\u9636\u6bb5": 298, "\u53ef\u80fd\u4f1a\u7531\u4e8e\u6570\u636e\u91cf\u8fc7\u5927\u9020\u6210\u77ed\u6682\u7684\u5361\u4f4f\u73b0\u8c61": 298, "\u5728\u6267\u884c\u56fe\u7b97\u6cd5\u5206\u6790\u9636\u6bb5": 298, "\u6216\u8005\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7b97\u6cd5": 298, "\u7f16\u8bd1\u6784\u5efa\u5e94\u7528\u7684\u5e93\u65f6\u4f1a\u82b1\u8d39\u4e00\u4e9b\u65f6\u95f4": 298, "\u4e3a\u4ec0\u4e48\u8f7d\u56fe\u65f6\u62a5\u627e\u4e0d\u5230\u6587\u4ef6\u7684\u9519\u8bef": 298, "\u8fd9\u901a\u5e38\u53d1\u751f\u5728\u4ee5\u96c6\u7fa4\u65b9\u5f0f\u90e8\u7f72\u8fd0\u884c": 298, "\u6570\u636e\u6587\u4ef6\u5fc5\u987b\u8981\u5bf9": 298, "\u53ef\u89c1": 298, "\u4f60\u4e5f\u8bb8\u9700\u8981\u6302\u8f7d\u78c1\u76d8\u6216\u8005\u4f7f\u7528\u4e91\u5b58\u50a8\u63d0\u4f9b\u5546\u7684\u670d\u52a1": 298, "\u5982\u679c\u4f60\u7684\u96c6\u7fa4\u662f\u4f7f\u7528": 298, "\u90e8\u7f72\u7684": 298, "\u4f60\u5e94\u8be5\u9700\u8981\u8bbe\u7f6e": 298, "\u6765\u628a\u672c\u673a\u76ee\u5f55\u6302\u8f7d\u5230": 298, "\u865a\u62df\u7684": 298, "\u6709\u4ec0\u4e48\u533a\u522b": 298, "\u5982\u4f55\u8bbe\u7f6e": 298, "\u5bb9\u5668\u5206\u914d\u7684\u5185\u5b58": 298, "\u5b83\u5b58\u50a8\u7531": 298, "\u7ba1\u7406\u7684\u539f\u59cb\u6570\u636e\u7684": 298, "\u7684\u5143\u4fe1\u606f": 298, "\u4f8b\u5982\u5f62\u72b6": 298, "\u540d\u79f0\u7b49": 298, "\u7531\u4e8e\u5143\u6570\u636e\u6bd4\u6570\u636e\u96c6\u5c0f\u5f97\u591a": 298, "\u56e0\u6b64\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u9ed8\u8ba4\u914d\u7f6e\u5c31\u8db3\u591f\u4e86": 298, "\u5b83\u76f8\u5f53\u4e8e": 298, "\u5b58\u50a8\u6570\u636e\u96c6\u7684\u5185\u5b58": 298, "\u6211\u4eec\u53d1\u73b0\u5c06\u5176\u8bbe\u7f6e\u4e3a\u6570\u636e\u96c6\u5728\u78c1\u76d8\u4e0a\u7684\u5927\u5c0f\u7684": 298, "\u500d\u901a\u5e38\u662f\u4e00\u4e2a\u5408\u7406\u7684\u503c": 298, "\u5bb9\u5668\u7684\u5185\u5b58\u5927\u5c0f": 298, "\u4e00\u822c\u5c06\u5176\u8bbe\u7f6e\u4e3a": 298, "\u7684\u540c\u6837\u5927\u5c0f": 298, "\u5bfc\u81f4\u5728": 298, "\u73af\u5883\u4e0b\u5b89\u88c5": 298, "\u5931\u8d25\u7684\u539f\u56e0\u53ef\u80fd\u6709\u54ea\u4e9b": 298, "\u7f16\u8bd1": 298, "\u5931\u8d25": 298, "\u6765\u5c1d\u8bd5\u4f7f\u7528\u7cfb\u7edf\u5b89\u88c5\u7684": 298, "\u8be6\u60c5\u53ef\u53c2\u8003": 298, "\u4f60\u53ef\u4ee5\u6839\u636e": 298, "\u6b64\u6559\u7a0b": 298, "\u6765\u6e90\u7801\u7f16\u8bd1": 298, "\u6216\u5c1d\u8bd5\u901a\u8fc7": 298, "\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898": 298, "\u4e0a\u5206\u914d": 298, "\u65f6\u9047\u5230\u4e86": 298, "\u95ee\u9898": 298, "\u5982\u4f55\u89e3\u51b3": 298, "\u901a\u5e38\u5f53\u4f7f\u7528": 298, "\u7684\u65b9\u5f0f\u5b89\u88c5": 298, "\u4f1a\u62a5": 298, "\u9519\u8bef": [298, 300], "\u6211\u4eec\u901a\u8fc7": 298, "\u6765\u67e5\u770b\u65e5\u5fd7": 298, "\u6b64\u65f6\u65e5\u5fd7\u663e\u793a": 298, "\u901a\u5e38\u6709\u4e24\u79cd\u89e3\u51b3\u65b9\u5f0f": 298, "\u5feb\u901f\u7684\u65b9\u5f0f\u662f\u5728\u6240\u6709\u76f8\u5173\u7684": 298, "\u76ee\u5f55\u4e0a\u4f7f\u7528": 298, "\u4f46\u4e0d\u5efa\u8bae\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u4f7f\u7528": 298, "\u4f18\u96c5\u7684\u65b9\u6cd5\u662f\u9996\u5148\u521b\u5efa": 298, "\u7528\u6237\u548c\u7528\u6237\u7ec4": 298, "\u7136\u540e\u5c06": 298, "\u4e0a\u7684\u8bbf\u95ee\u6743\u9650\u6388\u4e88\u76f8\u5173nfs\u76ee\u5f55": 298, "\u4e3a\u4ec0\u4e48\u5728": 298, "\u96c6\u7fa4\u4e0a\u62c9\u8d77": 298, "\u5b9e\u4f8b\u65f6": 298, "\u4ea7\u751f\u8d85\u65f6\u5f02\u5e38": 298, "\u5927\u591a\u6570\u60c5\u51b5\u4e0b": 298, "\u8d85\u65f6\u7684\u539f\u56e0\u662f\u56e0\u4e3a\u5728": 298, "\u96c6\u7fa4\u62c9\u8d77": 298, "\u5b9e\u4f8b\u65f6\u9700\u8981\u4e0b\u8f7d\u5bf9\u5e94\u955c\u50cf": 298, "\u8fd9\u4e00\u6b65\u901a\u5e38\u9700\u8981\u51e0\u5206\u949f\u7684\u65f6\u95f4": 298, "\u9002\u5f53\u7684\u589e\u52a0\u8d85\u65f6\u7b49\u5f85\u65f6\u95f4\u6765\u89e3\u51b3\u8be5\u95ee\u9898": 298, "\u542f\u52a8graphscope\u65f6\u7531\u4e8e\u8fde\u63a5v6d": 298, "etcd\u7b49\u7ec4\u4ef6\u5931\u8d25\u800c\u5bfc\u81f4graphscope\u542f\u52a8\u5931\u8d25": 298, "\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u4f60\u6240\u4f7f\u7528\u7684\u673a\u5668": 298, "\u6216\u5bb9\u5668": 298, "\u6240\u5728\u7684\u4f01\u4e1a\u7f51\u7edc\u5185\u8981\u6c42\u76f8\u5e94\u7684\u4ee3\u7406\u8bbe\u7f6e\u65b9\u53ef\u6b63\u5e38\u4f7f\u7528\u7f51\u7edc": 298, "\u8fd9\u4e9b\u4ee3\u7406\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9519\u8bef\u7684\u5730\u5740\u89e3\u6790\u4ee5\u53ca\u7aef\u53e3\u5360\u7528": 298, "\u4e3a\u907f\u514d\u7c7b\u4f3c\u60c5\u51b5": 298, "\u53ef\u5728\u73af\u5883\u53d8\u91cf": 298, "\u4e2d\u52a0\u5165graphscope\u76f8\u5173\u7684\u5730\u5740": 298, "\u4ee5\u53ca": [298, 305], "\u8bf7\u6ce8\u610f": 298, "no_proxy\u7684\u524d\u540e\u7f00\u89c4\u5219": 298, "unix": 298, "stackexchang": 298, "23452": 298, "\u5176\u4ed6\u95ee\u9898": 298, "\u60a8\u53ef\u4ee5\u63d0\u4ea4": 298, "\u63d0\u51fa\u4f60\u7684\u95ee\u9898": 298, "\u540c\u65f6": [298, 303], "\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528": 298, "\u505a\u4e3a\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 299, "\u53ef\u4ee5\u5904\u7406\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2": 299, "\u56fe\u5206\u6790\u548c\u56fe\u5b66\u4e60\u4efb\u52a1": 299, "\u5e76\u4e14\u5177\u6709\u6613\u4e8e\u4f7f\u7528": 299, "\u9ad8\u6027\u80fd\u548c\u826f\u597d\u7684\u53ef\u6269\u5c55\u6027\u7b49\u7279\u70b9": 299, "\u672c\u7ae0\u8282\u5c06\u901a\u8fc7\u4e00\u4e2a\u4f8b\u5b50\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e": 299, "\u4f7f\u7528": [299, 301, 304, 305, 306], "\u5e76\u5e2e\u52a9\u6570\u636e\u79d1\u5b66\u5bb6\u6765\u9ad8\u6548\u7684\u5206\u6790\u5927\u56fe": 299, "\u6570\u636e\u96c6": 299, "\u662f\u7531\u5fae\u8f6f\u5b66\u672f\u5173\u7cfb\u56fe": 299, "\u7684\u5b50\u96c6\u7ec4\u6210\u7684\u5f02\u6784\u56fe\u7f51\u7edc": 299, "\u8be5\u56fe\u4e2d\u5305\u542b4\u79cd\u7c7b\u578b\u7684\u5b9e\u4f53": 299, "\u5373\u8bba\u6587": 299, "\u4f5c\u8005": 299, "\u673a\u6784\u548c\u7814\u7a76\u9886\u57df": 299, "\u4ee5\u53ca\u8fde\u63a5\u4e24\u4e2a\u5b9e\u4f53\u7684\u56db\u79cd\u7c7b\u578b\u7684\u6709\u5411\u5173\u7cfb\u8fb9": 299, "\u6211\u4eec\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u662f": 299, "\u7ed9\u51fa\u5f02\u6784\u7684": 299, "\u6570\u636e": 299, "\u5728\u8be5\u56fe\u4e0a\u9884\u6d4b\u6bcf\u7bc7\u8bba\u6587\u7684\u7c7b\u522b": 299, "\u8fd9\u662f\u4e00\u4e2a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 299, "\u8be5\u4efb\u52a1\u53ef\u4ee5\u5f52\u7c7b\u5728\u5404\u4e2a\u9886\u57df": 299, "\u5404\u4e2a\u65b9\u5411\u6216\u7814\u7a76\u5c0f\u7ec4\u7684\u8bba\u6587": 299, "\u901a\u8fc7\u5bf9\u8bba\u6587\u5c5e\u6027\u548c\u5f15\u7528\u56fe\u4e0a\u7684\u7ed3\u6784\u4fe1\u606f\u5bf9\u8bba\u6587\u8fdb\u884c\u5206\u7c7b": 299, "\u5728\u8be5\u6570\u636e\u4e2d": 299, "\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u5305\u542b\u4e86\u4e00\u4e2a\u4ece\u8bba\u6587\u6807\u9898": 299, "\u6458\u8981\u62bd\u53d6\u7684": 299, "\u7ef4": 299, "\u5411\u91cf\u4f5c\u4e3a\u8868\u5f81": 299, "\u8be5\u8868\u5f81\u662f\u7ecf\u8fc7": 299, "\u9884\u8bad\u7ec3\u63d0\u524d\u83b7\u53d6\u7684": 299, "\u800c\u7ed3\u6784\u4fe1\u606f\u662f\u5728\u4ee5\u4e0b\u8fc7\u7a0b\u4e2d\u5373\u65f6\u8ba1\u7b97\u7684": 299, "\u4e0a\u56fe\u8868\u793a\u4e86\u7528\u6237\u901a\u8fc7": 299, "\u5ba2\u6237\u7aef\u8c03\u7528": 299, "\u89e3\u51b3\u8be5\u95ee\u9898\u7684\u5de5\u4f5c\u6d41\u7a0b": 299, "\u6b65\u9aa4": 299, "\u5efa\u7acb\u4e00\u4e2a\u4f1a\u8bdd": 299, "\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4": 299, "\u5b9a\u4e49\u548c\u8f7d\u5165\u56fe": 299, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u56fe": 299, "\u6267\u884c\u56fe\u7b97\u6cd5\u505a\u56fe\u5206\u6790": 299, "\u6267\u884c\u57fa\u4e8e\u56fe\u6570\u636e\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1": 299, "\u7684\u7b2c\u4e00\u6b65": 299, "\u6211\u4eec\u9700\u8981\u5728": 299, "\u4e2d\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 299, "ogbn_mag_smal": [299, 305], "\u5bf9\u4e8e": [299, 302], "\u521b\u5efa\u4f1a\u8bdd\u9700\u8981\u4f7f\u7528": 299, "\u670d\u52a1\u7c7b\u578b": 299, "\u9ed8\u8ba4\u662f": 299, "\u53e6\u5916": [299, 305], "\u6ce8\u610f": [299, 302], "\u662f": 299, "\u4e3b\u673a\u4e0a\u7684\u8def\u5f84": 299, "\u5f53\u5728": 299, "\u4e0a\u4f7f\u7528": 299, "desktop": 299, "\u9700\u8981\u9996\u5148\u5c06\u6b64\u8def\u5f84\u52a0\u5165\u5230": 299, "\u7684\u5171\u4eab\u76ee\u5f55\u4e2d": 299, "\u901a\u5e38\u4e3a": 299, "\u66f4\u8be6\u7ec6\u7684\u6307\u5f15\u8bf7\u53c2\u770b": 299, "\u7684\u5efa\u7acb\u8fc7\u7a0b\u4e2d": 299, "\u9996\u9009\u4f1a\u5728\u80cc\u540e\u5c1d\u8bd5\u62c9\u8d77\u4e00\u4e2a": 299, "\u4f5c\u4e3a\u540e\u7aef\u5f15\u64ce\u7684\u5165\u53e3": 299, "\u8be5": 299, "\u8d1f\u8d23\u7ba1\u7406\u8be5\u6b21\u4f1a\u8bdd\u7684": 299, "\u6240\u6709\u8d44\u6e90": 299, "\u4ee5\u53ca\u4ea4\u4e92\u5f0f\u67e5\u8be2": 299, "\u56fe\u5b66\u4e60\u5f15\u64ce\u7684\u751f\u547d\u5468\u671f": 299, "\u540e\u7eed\u62c9\u8d77\u7684\u5176\u4ed6\u6bcf\u4e2a": 299, "\u90fd\u6709\u4e00\u4e2a": 299, "\u5b9e\u4f8b\u4f5c\u4e3a\u5185\u5b58\u7ba1\u7406\u5c42": 299, "\u5206\u5e03\u5f0f\u7684\u7ba1\u7406\u56fe\u6570\u636e": 299, "\u8f7d\u56fe": [299, 300, 301], "\u4ee5\u5c5e\u6027\u56fe": 299, "\u5efa\u6a21\u56fe\u6570\u636e": [299, 305], "\u5c5e\u6027\u56fe\u4e2d": 299, "\u70b9\u548c\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 299, "\u4e0d\u540c\u7684\u6807\u7b7e\u6709\u4e0d\u540c\u7684\u5c5e\u6027": 299, "\u4e0b\u56fe\u5c55\u793a\u4e86\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 299, "\u8be5\u56fe\u5177\u6709\u56db\u79cd\u9876\u70b9": 299, "\u5206\u522b\u6807\u8bb0\u4e3a": 299, "\u8bba\u6587": 299, "\u673a\u6784": 299, "\u7814\u7a76\u9886\u57df": 299, "\u6709\u56db\u79cd\u8fde\u63a5\u5b83\u4eec\u7684\u8fb9": 299, "\u6bcf\u79cd\u8fb9\u90fd\u6709\u4e00\u4e2a\u6807\u7b7e": 299, "\u5e76\u4e14\u8fb9\u7684\u4e24\u7aef\u9876\u70b9\u7684\u6807\u7b7e\u4e5f\u662f\u786e\u5b9a\u7684": 299, "\u5f15\u7528": 299, "\u8fd9\u79cd\u6807\u7b7e\u7684\u8fb9\u8fde\u63a5\u4e24\u4e2a": 299, "\u9876\u70b9": 299, "\u53e6\u4e00\u4e2a\u4f8b\u5b50\u662f\u6807\u8bb0\u4e3a": 299, "\u64b0\u5199": 299, "\u7684\u8fb9": [299, 305], "\u5b83\u8981\u6c42\u8be5\u8d77\u59cb\u70b9\u7684\u6807\u8bb0\u4e3a": 299, "\u7ec8\u6b62\u70b9\u7684\u6807\u8bb0\u4e3a": 299, "\u6240\u6709\u7684\u9876\u70b9": 299, "\u548c\u8fb9\u90fd\u53ef\u4ee5\u5177\u6709\u5c5e\u6027": 299, "\u9876\u70b9\u5177\u6709\u8bf8\u5982\u53d1\u5e03\u5e74\u4efd": 299, "\u4e3b\u9898\u6807\u7b7e\u7b49\u5c5e\u6027": 299, "\u8981\u5c06\u6b64\u56fe\u52a0\u8f7d\u5230": 299, "\u53ef\u4ee5\u5c06\u4ee5\u4e0b\u4ee3\u7801\u4e0e": 299, "\u6570\u636e\u6587\u4ef6": 299, "\u7ed3\u5408\u4f7f\u7528": 299, "\u8bf7\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u89e3\u538b\u7f29\u5230\u672c\u5730\u7684\u6302\u8f7d\u76ee\u5f55": 299, "\u5728\u672c\u4f8b\u4e2d\u4e3a": 299, "author_affiliated_with_institut": 299, "paper_has_topic_field_of_studi": 299, "hastop": 299, "paper_cites_pap": 299, "author_writes_pap": 299, "\u4e5f\u53ef\u901a\u8fc7\u6211\u4eec\u63d0\u4f9b\u7684\u5185\u7f6e\u6570\u636e\u96c6\u51fd\u6570\u5e2e\u52a9\u5b8c\u6210\u8f7d\u56fe\u6d41\u7a0b": 299, "\u8fd9\u91cc\u7684": 299, "\u5df2\u7ecf\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5b58\u50a8\u5728": 299, "\u4e2d\u7684\u56fe": 299, "\u56fe\u6570\u636e\u5206\u5e03\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u80cc\u540e\u62c9\u8d77\u7684": 299, "\u66f4\u591a\u7ec6\u8282\u8bf7\u67e5\u770b": 299, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u5141\u8bb8\u7528\u6237\u4ee5": 299, "\u63a2\u7d22\u6027": 299, "\u65b9\u5f0f\u6765\u63a2\u7d22": 299, "\u67e5\u770b\u548c\u663e\u793a\u56fe\u6570\u636e": 299, "\u4ee5\u65b9\u4fbf\u7684\u5b9a\u4f4d\u548c\u6d1e\u5bdf\u7279\u5b9a\u7684\u6df1\u5165\u4fe1\u606f": 299, "\u91c7\u7528\u79f0\u4e3a": 299, "\u7684\u9ad8\u7ea7\u8bed\u8a00\u8fdb\u884c\u56fe\u904d\u5386": 299, "\u5e76\u63d0\u4f9b\u5927\u89c4\u6a21\u7684\u9ad8\u6548\u6267\u884c": 299, "\u5728\u6b64\u793a\u4f8b\u4e2d": 299, "\u6211\u4eec\u4f7f\u7528\u56fe\u904d\u5386\u6765\u67e5\u770b\u4e24\u4f4d\u7ed9\u5b9a\u4f5c\u8005\u5171\u540c\u64b0\u5199\u7684\u8bba\u6587\u6570\u91cf": 299, "\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2": 299, "\u6211\u4eec\u5047\u8bbe\u4f5c\u8005\u53ef\u4ee5\u5206\u522b\u7531id": 299, "\u552f\u4e00\u6807\u8bc6": 299, "entrypoint": 299, "\u56fe\u5206\u6790\u662f\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4e00\u7c7b\u56fe\u8ba1\u7b97": 299, "\u4e8b\u5b9e\u8bc1\u660e": 299, "\u8bb8\u591a\u7b97\u6cd5": 299, "\u4f8b\u5982\u793e\u533a\u68c0\u6d4b": 299, "\u8def\u5f84\u548c\u8fde\u63a5\u6027": 299, "\u96c6\u4e2d\u6027": 299, "\u5728\u5404\u79cd\u4e1a\u52a1\u4e2d\u90fd\u975e\u5e38\u6709\u6548": 299, "\u5185\u5efa\u4e86\u4e00\u7ec4\u9884\u7f6e\u5e38\u7528\u7b97\u6cd5": 299, "\u65b9\u4fbf\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5206\u6790\u56fe\u6570\u636e": 299, "\u4e0b\u9762\u6211\u4eec\u9996\u5148\u901a\u8fc7\u5728\u7279\u5b9a\u5468\u671f\u5185\u4ece\u5168\u56fe\u4e2d\u63d0\u53d6\u8bba\u6587": 299, "\u80cc\u540e\u57fa\u4e8e": 299, "\u6765\u5bfc\u51fa\u4e00\u4e2a\u5b50\u56fe": 299, "\u7136\u540e\u8fd0\u884c": 299, "\u5206\u89e3\u548c\u4e09\u89d2\u5f62\u8ba1\u6570\u4ee5\u751f\u6210\u6bcf\u4e2a\u8bba\u6587\u8282\u70b9\u7684\u7ed3\u6784\u7279\u5f81": 299, "\u7531\u4e8e\u8bb8\u591a\u7b97\u6cd5\u53ef\u80fd\u4ec5\u9002\u7528\u4e8e\u540c\u6784\u56fe": 299, "\u53ea\u6709\u4e00\u7c7b\u70b9\u548c\u4e00\u7c7b\u8fb9\u800c\u4e0d\u533a\u5206\u6807\u7b7e": 299, "\u8981\u5728\u5c5e\u6027\u56fe\u4e0a\u4f7f\u7528\u8fd9\u4e9b\u7b97\u6cd5": 299, "\u6211\u4eec\u9996\u5148\u9700\u8981\u5c06\u5176\u6295\u5f71\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u540c\u6784\u56fe\u4e2d": 299, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5728": 299, "\u4e2d\u7f16\u5199\u81ea\u5df1\u7684\u7b97\u6cd5": 299, "\u5f53\u524d": 299, "\u652f\u6301\u7528\u6237\u4ee5": 299, "\u6a21\u578b\u548c": 299, "\u6a21\u578b\u81ea\u5b9a\u4e49\u56fe\u7b97\u6cd5": 299, "\u7ed3\u5408\u4e86\u56fe\u7ed3\u6784\u548c\u673a\u5668\u5b66\u4e60\u7684\u4f18\u52bf": 299, "\u53ef\u4ee5\u5c06\u56fe\u4e2d\u7684\u7ed3\u6784\u4fe1\u606f\u548c\u5c5e\u6027\u4fe1\u606f\u538b\u7f29\u4e3a\u6bcf\u4e2a\u8282\u70b9\u4e0a\u7684\u4f4e\u7ef4\u5d4c\u5165\u5411\u91cf": 299, "\u8fd9\u4e9b\u5d4c\u5165\u548c\u8868\u5f81\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8f93\u5165\u5230\u4e0b\u6e38\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d": 299, "\u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d": 299, "\u6211\u4eec\u8bad\u7ec3\u4e86": 299, "\u6a21\u578b": 299, "\u5c06\u8282\u70b9": 299, "\u5206\u7c7b\u4e3a349\u4e2a\u7c7b\u522b": 299, "\u6bcf\u4e2a\u7c7b\u522b\u4ee3\u8868\u4e00\u4e2a\u51fa\u5904": 299, "\u4f8b\u5982\u9884\u5370\u672c\u548c\u4f1a\u8bae": 299, "\u4e3a\u6b64": 299, "\u63a5\u7740\u4e0a\u4e00\u6b65": 299, "\u9996\u5148\u9700\u8981\u542f\u52a8\u5b66\u4e60\u5f15\u64ce\u5e76\u6784\u5efa\u4e00\u4e2a\u5177\u6709\u7279\u5f81\u7684\u6570\u636e\u56fe": 299, "\u7136\u540e\u6211\u4eec\u5b9a\u4e49\u4e00\u4e2a\u8bad\u7ec3\u8fc7\u7a0b\u5e76\u6267\u884c": 299, "\u6700\u540e": [299, 300, 303], "\u5f53\u6211\u4eec\u5b8c\u6210\u6240\u6709\u7684\u8ba1\u7b97\u8fc7\u7a0b\u540e": 299, "\u5173\u95ed\u5f53\u524d\u7684\u4f1a\u8bdd": 299, "\u8be5\u6b65\u9aa4\u4f1a\u544a\u77e5\u80cc\u540e\u7684": 299, "\u548c\u5f15\u64ce": 299, "\u91ca\u653e\u5f53\u524d\u6240\u6709\u7684\u8d44\u6e90": 299, "\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u7cfb\u5217\u53ef\u4ee5\u5728\u56fe\u4e0a\u8fdb\u884c\u65b0\u589e": 300, "\u6295\u5f71\u7684\u65b9\u6cd5": 300, "\u4ee5\u53ca\u5982\u4f55\u5c06\u4e00\u4e2a\u590d\u6742\u7684\u56fe\u8f6c\u6362\u4e3a\u53ef\u4ee5\u9002\u914d\u666e\u901a\u7b97\u6cd5\u5e94\u7528\u7684\u65b9\u6cd5": 300, "\u6211\u4eec\u5c55\u793a\u5982\u4f55\u5c06\u7b97\u6cd5\u5f97\u5230\u7684\u7ed3\u679c\u52a0\u56de\u5230\u56fe\u4e2d\u53bb": 300, "\u5177\u4f53\u800c\u8a00": 300, "\u56fe": 300, "\u63d0\u4f9b\u4e86\u4e24\u4e2a\u589e\u52a0\u6807\u7b7e\u7684\u51fd\u6570": 300, "\u548c\u4e00\u4e2a\u6295\u5f71\u7684\u51fd\u6570": 300, "\u6211\u4eec\u5df2\u7ecf\u5728": 300, "\u4e00\u8282\u89c1\u5230\u8fc7": 300, "\u8fd9\u4e24\u4e2a\u51fd\u6570": 300, "\u5f53\u65f6\u6211\u4eec\u7528\u5b83\u6765\u6784\u5efa\u4e00\u5f20\u56fe": 300, "\u8fdb\u4e00\u6b65\u7684": 300, "\u5f53\u56fe\u6784\u5efa\u597d\u5e76\u8f7d\u5165\u4e86": 300, "\u4e2d\u4e4b\u540e": 300, "\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u7528\u5176\u589e\u52a0\u66f4\u591a\u7684\u6807\u7b7e": 300, "\u5f53\u7136\u8fd9\u4e00\u6b65\u5e76\u4e0d\u4f1a\u5728\u539f\u56fe\u4e0a\u4fee\u6539": 300, "\u800c\u662f\u4f1a\u8fd4\u56de\u57fa\u4e8e\u539f\u56fe\u4e4b\u4e0a": 300, "\u589e\u52a0\u4e86\u65b0\u7684\u6807\u7b7e\u7684\u65b0\u56fe": 300, "snb": [300, 305], "\u5c5e\u6027\u56fe\u4e3a\u4f8b": 300, "\u6211\u4eec\u73b0\u5728\u8f7d\u5165\u5176\u4e2d\u4e00\u90e8\u5206\u6807\u7b7e": 300, "\u4f5c\u4e3a\u63a5\u4e0b\u6765\u4e00\u7cfb\u5217\u8f6c\u6362\u64cd\u4f5c\u7684\u8d77\u59cb\u56fe": 300, "pathlib": 300, "person_0_0": [300, 305], "person_knows_person_0_0": [300, 305], "\u5230\u8fd9\u91cc": 300, "\u6211\u4eec\u5df2\u7ecf\u8f7d\u5165\u4e86\u4e00\u5f20\u56fe": 300, "\u63a5\u4e0b\u6765\u6211\u4eec\u5728\u8fd9\u5f20\u56fe\u4e0a\u518d\u6dfb\u52a0\u51e0\u4e2a\u6807\u7b7e": 300, "graph1": 300, "comment_0_0": [300, 305], "graph2": 300, "comment_replyof_comment_0_0": [300, 305], "replyof": 300, "\u53ef\u4ee5\u770b\u5230\u6bcf\u6b21": 300, "\u90fd\u4f1a\u4ea7\u751f\u4e00\u5f20\u65b0\u7684\u56fe": 300, "\u5728\u5e95\u5c42": 300, "\u4ed6\u4eec\u5171\u6709\u7684\u90e8\u5206\u4f1a\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58": 300, "\u6240\u4ee5\u5e76\u4e0d\u4f1a\u5c06\u539f\u56fe\u7684\u6570\u636e\u590d\u5236\u4e00\u4efd": 300, "\u5728\u67d0\u4e9b\u573a\u666f\u4e0b": 300, "\u6211\u4eec\u9700\u8981\u5c06\u4ece\u4e00\u5f20\u590d\u6742\u7684\u56fe\u63d0\u53d6\u51fa\u4e00\u4e2a\u5b50\u56fe": 300, "\u8fd9\u4e2a\u64cd\u4f5c\u53ef\u4ee5\u501f\u52a9": 300, "\u6765\u5b8c\u6210": 300, "\u5305\u542b\u4e24\u4e2a\u53c2\u6570": 300, "\u5176\u503c\u4e3a\u4e00\u4e2a\u5b57\u5178": 300, "\u5b57\u5178\u7684\u952e\u662f\u6807\u7b7e\u540d": 300, "\u503c\u662f\u8981\u53d6\u7684\u5c5e\u6027\u7684\u5217\u8868": 300, "\u503c\u53ef\u4ee5\u4e3a": 300, "\u4ee3\u8868\u9009\u62e9\u6240\u6709\u7684\u5c5e\u6027": 300, "\u7684\u8fd4\u56de\u503c\u4e5f\u662f\u4e00\u4e2a\u5c5e\u6027\u56fe": 300, "\u5e76\u4e14\u53ef\u4ee5\u88ab\u8fdb\u4e00\u6b65": 300, "\u4ee5\u4e0b\u662f\u51e0\u4e2a\u4f8b\u5b50": 300, "firstnam": [300, 305], "lastnam": [300, 305], "\u5305\u542b\u4e00\u4e2a\u70b9\u6807\u7b7e": 300, "\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 300, "\u4ee5\u53ca\u6240\u9009\u62e9\u7684\u5c5e\u6027": 300, "sub_graph2": 300, "\u73b0\u5728\u70b9\u4e0a\u6ca1\u6709\u5c5e\u6027": 300, "\u8fb9\u4e0a\u6709\u4e00\u4e2a\u5c5e\u6027": 300, "\u5f53\u6267\u884c\u4e00\u4e2a\u4ec5\u53ef\u4ee5\u8dd1\u5728\u7b80\u5355\u56fe\u4e0a\u7684\u7b97\u6cd5\u65f6": 300, "\u5176\u4f1a\u9ed8\u8ba4\u5c06\u5176\u53c2\u6570\u4e2d\u7684\u5c5e\u6027\u56fe\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 300, "\u5982\u679c\u4e0d\u80fd\u8fdb\u884c\u8fd9\u79cd\u8f6c\u6362": 300, "\u5373\u591a\u4e8e\u4e00\u4e2a\u70b9\u6807\u7b7e\u548c\u4e00\u4e2a\u8fb9\u6807\u7b7e": 300, "\u6216\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 300, "\u90a3\u4e48\u5c31\u4f1a\u62a5\u9519": 300, "\u8f6c\u6362\u4e0d\u5408\u6cd5": 300, "\u591a\u4e8e\u4e00\u4e2a\u70b9": 300, "\u8fb9\u6807\u7b7e": 300, "\u591a\u4e8e\u4e00\u4e2a\u5c5e\u6027": 300, "\u4e0a\u4e00\u6b65\u7b97\u6cd5\u7684\u8fd0\u884c\u7ed3\u679c\u53ef\u4ee5\u88ab\u52a0\u5165\u4e00\u5f20\u56fe\u4e2d": 300, "\u4f5c\u4e3a\u70b9\u7684\u4e00\u4e2a\u5c5e\u6027": 300, "\u4e0d\u4ec5\u53ef\u4ee5\u52a0\u5165\u8fd0\u7b97\u7ed3\u679c\u5230\u76f4\u63a5\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 300, "\u8fd8\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u67e5\u8be2\u7ed3\u679c\u52a0\u5230\u88ab": 300, "\u800c\u5f97\u5230\u88ab\u67e5\u8be2\u7684\u56fe\u4e0a": 300, "\u53ea\u8981\u88ab\u52a0\u5165\u5c5e\u6027\u7684\u70b9\u6807\u7b7e\u76f8\u540c": 300, "cc": 300, "\u662f\u963f\u91cc\u5df4\u5df4\u8fbe\u6469\u9662\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u7814\u53d1\u5e76\u5f00\u6e90\u7684\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u5e73\u53f0": 301, "\u4f9d\u6258\u4e8e\u963f\u91cc\u6d77\u91cf\u6570\u636e\u548c\u4e30\u5bcc\u573a\u666f": 301, "\u4e0e\u8fbe\u6469\u9662\u7684\u9ad8\u6c34\u5e73\u7814\u7a76": 301, "\u81f4\u529b\u4e8e\u9488\u5bf9\u5b9e\u9645\u751f\u4ea7\u573a\u666f\u4e2d\u56fe\u8ba1\u7b97\u7684\u6311\u6218": 301, "\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848": 301, "\u63d0\u4f9b\u4e86": 301, "\u80fd\u5341\u5206\u65b9\u4fbf\u7684\u5bf9\u63a5\u4e0a\u4e0b\u6e38\u5de5\u4f5c\u6d41": 301, "\u5177\u6709\u4e00\u7ad9\u5f0f": 301, "\u5f00\u53d1\u4fbf\u6377": 301, "\u6027\u80fd\u6781\u81f4\u7b49\u7279\u70b9": 301, "\u5b83\u6574\u5408\u4e86\u667a\u80fd\u8ba1\u7b97\u5b9e\u9a8c\u5ba4\u591a\u4e2a\u91cd\u8981\u7684\u521b\u65b0\u6027\u6280\u672f": 301, "\u5305\u62ec": [301, 304], "maxgraph": 301, "\u652f\u6301\u4e86\u56fe\u5206\u6790": 301, "\u56fe\u7684\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u5b66\u4e60": 301, "\u5176\u4e2d\u6838\u5fc3\u4f18\u52bf\u5305\u62ec\u5728\u4e1a\u754c\u9996\u6b21\u652f\u6301\u4e86": 301, "\u5206\u5e03\u5f0f\u7f16\u8bd1\u4f18\u5316": 301, "\u652f\u6301\u4e86\u7b97\u6cd5\u7684\u81ea\u52a8\u5e76\u884c\u5316": 301, "\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u573a\u666f\u4e0b\u7684\u6781\u81f4\u6027\u80fd\u7b49": 301, "\u5728\u963f\u91cc\u5df4\u5df4\u5185\u5916\u90e8\u5e94\u7528\u4e2d": 301, "\u5df2\u7ecf\u8bc1\u660e\u5728\u591a\u4e2a\u5173\u952e\u4e92\u8054\u7f51\u9886\u57df": 301, "\u5982\u98ce\u63a7": 301, "\u7535\u5546\u63a8\u8350": 301, "\u5e7f\u544a": 301, "\u7f51\u7edc\u5b89\u5168": [301, 304], "\u77e5\u8bc6\u56fe\u8c31\u7b49": 301, "\u5b9e\u73b0\u4e86\u91cd\u8981\u7684\u4e1a\u52a1\u65b0\u4ef7\u503c": 301, "\u6574\u5408\u4e86\u8fbe\u6469\u9662\u7684\u591a\u9879\u5b66\u672f\u7814\u7a76\u6210\u679c": 301, "\u5176\u4e2d\u7684\u6838\u5fc3\u6280\u672f\u66fe\u83b7\u5f97\u6570\u636e\u5e93\u9886\u57df\u9876\u7ea7\u5b66\u672f\u4f1a\u8bae": 301, "\u6700\u4f73\u8bba\u6587\u5956": 301, "vldb2017": 301, "\u6700\u4f73\u6f14\u793a\u5956": 301, "vldb2020": 301, "\u6700\u4f73\u8bba\u6587\u5956\u4e9a\u519b": 301, "\u4e16\u754c\u4eba\u5de5\u667a\u80fd\u521b\u65b0\u5927\u8d5bsail\u5956\u7b49": 301, "\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce\u7684\u8bba\u6587\u5df2\u88ab": 301, "nsdi": 301, "2021\u5f55\u7528": 301, "\u8fd8\u6709\u5176\u5b83\u56f4\u7ed5": 301, "\u7684\u5341\u591a\u9879\u7814\u7a76\u6210\u679c\u53d1\u8868\u5728\u9886\u57df\u9876\u7ea7\u7684\u5b66\u672f\u4f1a\u8bae\u6216\u671f\u520a\u4e0a": 301, "kdd\u7b49": 301, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 301, "\u57fa\u4e8e": [301, 306], "\u793a\u4f8b": 301, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 301, "\u521b\u5efa\u4f1a\u8bdd": 301, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 301, "\u56fe\u5206\u6790": 301, "\u56fe\u795e\u7ecf\u7f51\u7edc": 301, "\u5173\u95ed\u4f1a\u8bdd": 301, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 301, "\u5728aw": 301, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 301, "\u672c\u5730\u90e8\u7f72graphscop": 301, "\u5165\u95e8\u6559\u7a0b": 301, "\u8bba\u6587\u5f15\u7528\u5173\u7cfb\u7f51\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [301, 306], "\u4f7f\u7528\u517c\u5bb9": [301, 306], "\u8fdb\u884c\u56fe\u64cd\u4f5c": [301, 306], "\u7528": [301, 303, 306], "\u50cf": [301, 306], "\u4e00\u6837\u8fdb\u884c\u56fe\u5206\u6790": [301, 306], "\u8f7d\u5165\u56fe\u6570\u636e": [301, 306], "\u5185\u7f6e\u7684\u56fe\u5206\u6790\u7b97\u6cd5": [301, 306], "\u7f16\u5199\u81ea\u5b9a\u4e49\u56fe\u5206\u6790\u7b97\u6cd5": [301, 306], "\u4f7f\u7528\u67e5\u8be2\u8bed\u8a00": [301, 306], "\u8fdb\u884c\u4ea4\u4e92\u5f0f\u67e5\u8be2": [301, 306], "\u8fdb\u884c\u65e0\u76d1\u7763\u56fe\u5b66\u4e60": [301, 306], "bipartitegraphsag": [301, 306], "\u7684\u4e8c\u90e8\u56fe\u65e0\u76d1\u7763\u5b66\u4e60": [301, 306], "\u8fdb\u884c\u6709\u76d1\u7763\u56fe\u5b66\u4e60": [301, 306], "\u73af\u5883\u518d\u63a2\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [301, 306], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 301, "\u624b\u52a8\u914d\u7f6e\u56fe": 301, "\u9ad8\u7ea7\u7528\u6cd5": 301, "\u4ece": [301, 303], "\u4e2d\u8f7d\u56fe": 301, "\u7684\u53d8\u79cd": 301, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 301, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 301, "\u6295\u5f71": 301, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 301, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 301, "\u5185\u7f6e\u7b97\u6cd5": 301, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 301, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 301, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 301, "\u4e2d\u7684\u51fd\u6570": 301, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 301, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 301, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 301, "\u5229\u7528python": 301, "\u8fde\u63a5graphscop": 301, "\u5229\u7528java": 301, "\u5f00\u53d1\u63a7\u5236\u53f0": 301, "gremlin\u7f16\u7a0b\u5165\u95e8": 301, "gremlin\u517c\u5bb9\u6027": 301, "\u5bf9\u6bd4tinkerpop": 301, "\u56fe\u5b66\u4e60\u6a21\u578b": 301, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 301, "\u5e38\u89c1\u95ee\u9898": 301, "\u5f00\u53d1\u8005\u6307\u5357": 301, "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 301, "\u6784\u5efa": 301, "\u4ee3\u7801\u98ce\u683c": 301, "\u76ee\u524d\u652f\u6301\u7684\u5e73\u53f0\u5982\u4e0b": 302, "sur": 302, "intel": 302, "chip": 302, "\u7a0b\u5e8f\u5305": 302, "\u7684\u5f62\u5f0f\u53d1\u5e03": 302, "\u53ef\u76f4\u63a5\u901a\u8fc7": 302, "\u9700\u8981\u6ee1\u8db3": 302, "\u6211\u4eec\u53ef\u4ee5\u6309\u7167\u672c\u6587\u6863\u7684\u4ee5\u4e0b\u6b65\u9aa4\u90e8\u7f72\u4e00\u4e2a\u672c\u5730": 302, "\u5e76\u52a0\u8f7d\u9884\u7f16\u8bd1\u597d\u7684\u955c\u50cf": 302, "\u73af\u5883\u4e0b\u8fd0\u884c": 302, "\u9996\u5148\u9700\u8981\u9884\u5148\u5b89\u88c5\u4ee5\u4e0b\u4f9d\u8d56": 302, "window": 302, "\u7684\u7528\u6237": 302, "\u53ef\u901a\u8fc7\u5b98\u65b9\u6587\u6863\u6765\u5b89\u88c5\u4e0a\u8ff0\u4f9d\u8d56": 302, "\u5e76\u5728": 302, "\u4e2d\u5f00\u542f": 302, "\u529f\u80fd": 302, "\u53d1\u884c\u7248\u7528\u6237": 302, "\u6211\u4eec\u63d0\u4f9b\u4e86\u811a\u672c\u6765\u51c6\u5907\u8fd0\u884c\u65f6\u73af\u5883": 302, "\u60a8\u4e5f\u53ef\u4ee5\u5728": 302, "\u4e0a\u5b89\u88c5": 302, "wsl2": 302, "\u4ee5\u4f7f\u7528\u811a\u672c": 302, "\u63a5\u4e0b\u6765": [302, 303, 304], "\u6211\u4eec\u53ea\u9700\u8981\u901a\u8fc7": 302, "graphscope\u7684\u4ea4\u4e92\u67e5\u8be2\u5f15\u64ce": 303, "\u7b80\u79f0gie": 303, "\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf": 303, "\u5b83\u4e3a\u4e0d\u540c\u7ecf\u9a8c\u7684\u7528\u6237\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6613\u7528\u7684\u4ea4\u4e92\u5f0f\u73af\u5883": 303, "\u652f\u6301\u6d77\u91cf\u590d\u6742\u56fe\u6570\u636e\u4e0a\u7684": 303, "\u5b9e\u65f6\u5206\u6790\u4e0e\u4ea4\u4e92\u63a2\u7d22": 303, "\u8be5\u5f15\u64ce\u652f\u6301": 303, "\u8bed\u8a00\u8868\u8fbe\u7684\u4ea4\u4e92\u56fe\u67e5\u8be2": 303, "\u5e76\u63d0\u4f9b\u4e86\u81ea\u52a8\u5316\u548c\u7528\u6237\u900f\u660e\u7684\u5206\u5e03\u5f0f\u5e76\u884c\u6267\u884c": 303, "\u662f\u57fa\u4e8egremlin\u8bed\u8a00\u5f00\u53d1\u4ea4\u4e92\u5f0f\u56fe\u5e94\u7528\u7684\u4e00\u4e2a\u5f00\u6e90\u6846\u67b6\u548c\u4e8b\u5b9e\u6807\u51c6": 303, "gie\u901a\u8fc7tinkerpop\u63d0\u4f9b\u7684": 303, "\u63a5\u53e3": [303, 304], "\u5b9e\u73b0\u4e86\u4e0etinkerpop\u751f\u6001\u65e0\u7f1d\u96c6\u6210": 303, "\u4ece\u800c\u7528\u6237\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528\u8bf8\u5982": 303, "\u7684\u5f00\u53d1\u5de5\u5177\u6216\u901a\u8fc7java\u548cpython\u7b49\u591a\u79cd\u8bed\u8a00\u63a5\u53e3\u7f16\u5199\u5e94\u7528\u903b\u8f91": 303, "\u5982\u4e0b\u6240\u793a": 303, "\u7528\u6237\u53ef\u4ee5\u5f88\u7b80\u5355\u7684\u901a\u8fc7python\u8fde\u4e0a\u4e00\u4e2a\u8f7d\u5165graphscope\u7cfb\u7edf\u7684\u56fe\u5e76\u53d1\u8d77gremlin\u67e5\u8be2": 303, "\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u4ea4\u4e92\u4f1a\u8bdd": 303, "\u8f7d\u5165ldbc\u793a\u4f8b\u56fe\u6570\u636e": 303, "\u968f\u540e\u8fd4\u56de\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 303, "ldbc_sampl": [303, 305], "\u4e0b\u9762\u4e24\u53e5gremlin\u793a\u4f8b\u67e5\u8be2\u5206\u522b\u8ba1\u7b97\u56fe\u4e2d\u9876\u70b9\u548c\u8fb9\u7684\u603b\u6570": 303, "\u4e0a\u9762\u4ee3\u7801\u4e2d\u7684": 303, "\u5bf9\u8c61\u4e8b\u5b9e\u4e0a\u662fpython\u7c7b": 303, "\u7684\u4e00\u4e2a\u5b9e\u4f8b": 303, "\u800c\u8fd9\u4e00\u7c7b\u5c01\u88c5\u4e86\u7528python\u5b9e\u73b0\u7684\u5b8c\u6574gremlin\u5ba2\u6237\u7aef\u7c7b\u5e93": 303, "\u6bcf\u4e00\u4e2a\u8f7d\u5165graphscope\u7684\u56fe\u90fd\u5305\u542b\u4e00\u4e2agremlin\u67e5\u8be2\u63d0\u4ea4\u5165\u53e3": 303, "\u53ef\u4ee5\u50cf\u4e0b\u9762\u8fd9\u6837\u83b7\u5f97\u5177\u4f53\u7684\u8bbf\u95ee\u5730\u5740": 303, "\u4e0a\u9762\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u5982\u4e0b": 303, "\u683c\u5f0f": 303, "\u7684\u8f93\u51fa": 303, "\u6709\u4e86\u8fd9\u4e00url\u4fe1\u606f": 303, "\u7528\u6237\u4e5f\u53ef\u4ee5\u76f4\u63a5\u91c7\u7528gremlin": 303, "python\u8bbf\u95ee\u56fe\u6570\u636e": 303, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 303, "\u5b98\u65b9\u6587\u6863": 303, "tinkerpop\u540c\u65f6\u652f\u6301java\u8bed\u8a00\u6309\u7c7b\u4f3c\u65b9\u5f0f\u8bbf\u95ee": 303, "\u8be6\u89c1gremlin": 303, "java\u7684": 303, "\u4e3a\u5f00\u53d1\u8005\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4e0egraphscope\u5b58\u50a8\u7684\u56fe\u6570\u636e\u8fdb\u884c\u4ea4\u4e92\u7684\u63a7\u5236\u53f0": 303, "\u4e5f\u53eb\u505arepl\u73af\u5883": 303, "\u4e0b\u9762\u63cf\u8ff0\u5982\u4f55\u5229\u7528\u4e0a\u6587\u83b7\u5f97\u7684url": 303, "\u5b89\u88c5\u548c\u914d\u7f6egremlin": 303, "console\u4ee5\u8fde\u63a5graphscope\u7684\u6b65\u9aa4": 303, "\u5b89\u88c5gremlin": 303, "console\u4f9d\u8d56\u7684java\u8fd0\u884c\u65f6\u73af\u5883": 303, "\u7248\u672c\u9700\u8981\u6ee1\u8db3": 303, "\u4e0b\u8f7d\u9002\u5f53\u7248\u672c\u7684gremlin": 303, "\u89e3\u538b\u7f29\u4e0b\u8f7d\u7684\u6587\u4ef6": 303, "unzip": 303, "\u8fdb\u5165\u89e3\u538b\u7f29\u7684\u76ee\u5f55": 303, "\u5b50\u76ee\u5f55\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 303, "\u7684\u6587\u672c\u6587\u4ef6\u4ee5\u914d\u7f6eurl": 303, "\u5177\u4f53\u5185\u5bb9\u5982\u4e0b\u6240\u793a": 303, "\u5176\u4e2d\u7684": 303, "\u9700\u8981\u5206\u522b\u66ff\u6362\u4e3a\u4ecegraphscope\u4f1a\u8bdd\u5f97\u5230\u7684url\u4e2d\u5bf9\u5e94\u7684\u4e3b\u673a\u540d": 303, "\u6216ip": 303, "\u548c\u7aef\u53e3": 303, "classnam": 303, "ser": 303, "gryomessageserializerv1d0": 303, "serializeresulttostr": 303, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u542f\u52a8gremlin": 303, "\u63d0\u793a\u7b26\u4e0b": 303, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u8fde\u63a5\u5230\u5bf9\u5e94\u7684graphscope\u4f1a\u8bdd": 303, "\u7b2c\u4e8c\u6761\u547d\u4ee4\u5207\u6362\u5230\u8fdc\u7a0b\u6a21\u5f0f": 303, "\u4ece\u800c\u63a5\u4e0b\u6765\u8f93\u5165\u7684\u6240\u6709gremlin\u67e5\u8be2\u90fd\u88ab\u81ea\u52a8\u4f20\u8f93\u5230": 303, "\u8fdc\u7a0b": 303, "graphscope\u6267\u884c": 303, "\u73b0\u5728\u4f60\u53ef\u4ee5\u5c1d\u8bd5\u4e00\u4e9b\u7b80\u5355\u7684gremlin\u67e5\u8be2\u4e86": 303, "\u5f53\u4f60\u5b8c\u6210\u4ea4\u4e92": 303, "\u8f93\u5165\u4e0b\u5217\u547d\u4ee4\u53ef\u4ee5\u9000\u51fagremlin": 303, "gie\u4ee5\u5fe0\u5b9e\u4fdd\u7559gremlin\u7f16\u7a0b\u6a21\u578b\u4e3a\u8bbe\u8ba1\u76ee\u6807": 303, "\u4ece\u800c\u8ba9\u5df2\u6709\u7684\u5e94\u7528\u53ea\u9700\u6700\u5c0f\u5316\u7684\u4fee\u6539\u5c31\u53ef\u4ee5\u6269\u5c55\u5230\u5927\u89c4\u6a21\u8ba1\u7b97\u96c6\u7fa4": 303, "\u5728\u6b64\u6211\u4eec\u63d0\u4f9b\u4e00\u4e2agremlin\u7684\u603b\u4f53\u4ecb\u7ecd": 303, "\u7279\u522b\u662f\u5176\u4e2d\u5305\u542b\u7684\u56fe\u6570\u636e\u6a21\u578b\u548c\u67e5\u8be2\u8bed\u8a00\u7b49\u5173\u952e\u6982\u5ff5": 303, "\u66f4\u8be6\u7ec6\u548c\u5b8c\u6574\u7684\u4ecb\u7ecd": 303, "gremlin\u5141\u8bb8\u7528\u6237\u5728\u5c5e\u6027\u56fe\u6a21\u578b\u4e0a\u5b9a\u4e49\u7279\u8bbe": 303, "hoc": 303, "\u904d\u5386\u67e5\u8be2": 303, "\u4e00\u4e2a\u5c5e\u6027\u56fe\u662f\u4e00\u4e2a\u6709\u5411\u56fe": 303, "\u5176\u4e2d\u7684\u9876\u70b9\u548c\u8fb9\u53ef\u4ee5\u62e5\u6709\u4e00\u7ec4\u5c5e\u6027": 303, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61": 303, "\u70b9\u6216\u8fb9": 303, "\u90fd\u6709\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6": 303, "\u548c\u4e00\u4e2a\u7c7b\u522b\u540d\u79f0": 303, "\u6307\u5b9a\u5176\u7c7b\u578b\u6216\u89d2\u8272": 303, "\u6bcf\u4e2a\u5c5e\u6027\u662f\u4e00\u4e2a\u5305\u542b\u5c5e\u6027\u540d\u548c\u5c5e\u6027\u503c\u7684": 303, "\u952e": 303, "\u503c": 303, "\u5bf9": 303, "\u5176\u6240\u5c5e\u5bf9\u8c61\u7684": 303, "\u52a0\u4e0a\u5c5e\u6027\u540d\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u5c5e\u6027\u503c": 303, "\u4e0a\u56fe\u5c55\u793a\u4e86\u4e00\u4e2a\u5c5e\u6027\u56fe\u6a21\u578b\u793a\u4f8b": 303, "\u5b83\u5305\u542b": 303, "\u7528\u6237": 303, "\u5546\u54c1": 303, "\u5730\u5740": 303, "\u4e09\u7c7b\u70b9": 303, "\u5b83\u4eec\u901a\u8fc7": 303, "\u8d2d\u4e70": 303, "\u9012\u9001": 303, "\u5c5e\u4e8e": 303, "\u5bb6\u5ead\u5730\u5740": 303, "\u56db\u7c7b\u8fb9\u76f8\u4e92\u5173\u8054": 303, "\u56fe\u4e2d\u865a\u7ebf\u5c55\u793a\u7684\u4e00\u6761": 303, "\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684": 303, "\u8def\u5f841": 303, "\u4ee3\u8868\u4e86\u4e00\u4e2a\u7528\u6237": 303, "\u4e70\u5bb6": 303, "\u8d2d\u4e70\u4e86\u4e00\u4e2a\u5356\u5bb6": 303, "\u63d0\u4f9b\u7684\u6807\u4ef7": 303, "\u7684\u5546\u54c1": 303, "\u4e00\u4e2agremlin\u67e5\u8be2\u6216\u56fe\u904d\u5386\u7684\u6267\u884c": 303, "\u53ef\u4ee5\u7528\u4e00\u7ec4": 303, "\u904d\u5386\u5668": 303, "\u6807\u8bc6": 303, "\u5b83\u4eec\u4f9d\u636egremlin\u67e5\u8be2\u63d0\u4f9b\u7684\u7528\u6237\u6307\u4ee4\u5728\u8f93\u5165\u56fe\u4e2d\u6e38\u8d70": 303, "\u6700\u7ec8\u6240\u6709\u505c\u6b62\u7684\u904d\u5386\u5668\u96c6\u5408": 303, "\u5305\u542b\u5b83\u4eec\u7684\u4f4d\u7f6e": 303, "\u4ee3\u8868\u4e86\u67e5\u8be2\u7684\u7ed3\u679c": 303, "\u4e00\u4e2a\u904d\u5386\u5668\u662fgremlin\u5f15\u64ce\u5904\u7406\u7684\u6700\u5c0f\u6570\u636e\u5355\u5143": 303, "\u6bcf\u4e2a\u904d\u5386\u5668\u90fd\u7ef4\u62a4\u5b83\u5bf9\u5e94\u7684\u56fe\u4e2d\u7684\u5f53\u524d\u4f4d\u7f6e": 303, "\u53ef\u4ee5\u662f\u88ab\u8bbf\u95ee\u7684\u70b9": 303, "\u8fb9\u6216\u5c5e\u6027": 303, "\u53ef\u9009\u7684\u5b83\u4e5f\u53ef\u4ee5\u5305\u542b\u8d70\u8fc7\u7684\u5b8c\u6574\u8def\u5f84\u5386\u53f2\u751a\u81f3\u5e94\u7528\u72b6\u6001": 303, "gremlin\u8bed\u8a00\u4e30\u5bcc\u7075\u6d3b\u7684\u8868\u8fbe\u80fd\u529b\u4e3b\u8981\u6765\u81ea\u4e8e\u5b83\u5bf9": 303, "\u5d4c\u5957\u904d\u5386": 303, "\u7684\u652f\u6301": 303, "\u5b83\u5141\u8bb8\u4e00\u4e2a": 303, "\u5b50": 303, "\u67e5\u8be2\u6216\u904d\u5386\u88ab\u5305\u542b\u5728\u53e6\u4e00\u4e2a\u64cd\u4f5c\u4e2d": 303, "\u4f5c\u4e3a\u4e00\u4e2a\u53ef\u8c03\u7528\u7684\u51fd\u6570\u88ab\u5305\u88f9\u64cd\u4f5c\u7528\u4e8e\u5904\u7406\u5176\u6bcf\u4e00\u4e2a\u8f93\u5165": 303, "\u51fd\u6570\u7684\u58f0\u660e\u548c\u4f5c\u7528\u90fd\u7531\u5305\u88f9\u64cd\u4f5c\u7684\u8bed\u4e49\u51b3\u5b9a": 303, "\u8fc7\u6ee4": 303, "\u64cd\u4f5c\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u67e5\u8be2": 303, "\u4f5c\u4e3a\u8fc7\u6ee4\u6761\u4ef6\u8c13\u8bcd": 303, "\u800c": 303, "\u6620\u5c04": 303, "\u6392\u5e8f": 303, "\u64cd\u4f5c\u5404\u81ea\u53ef\u4ee5\u901a\u8fc7\u5d4c\u5957\u67e5\u8be2\u8bb2\u6bcf\u4e00\u4e2a\u8f93\u5165\u5355\u72ec\u6620\u5c04\u5230\u4ece\u5b83\u5f00\u59cb\u7684\u5b50\u904d\u5386\u5f97\u5230\u7684\u7ed3\u679c": 303, "\u6216\u4f9d\u636e\u7ed3\u679c\u503c\u4f5c\u4e3a\u6392\u5e8f\u4f9d\u636e": 303, "\u5d4c\u5957\u904d\u5386\u7684\u53e6\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\u662f\u8868\u8fbe\u5faa\u73af": 303, "\u5728gremlin\u4e2d\u901a\u8fc7": 303, "\u5faa\u73af": 303, "\u64cd\u4f5c\u548c\u968f\u540e\u7684": 303, "\u7ec8\u6b62\u6761\u4ef6": 303, "\u8868\u8fbe": 303, "\u64cd\u4f5c\u5305\u542b\u4e00\u4e2a\u5d4c\u5957\u904d\u5386\u4f5c\u4e3a\u5faa\u73af\u4f53": 303, "\u6bcf\u4e00\u4e2a\u8f93\u5165\u90fd\u4f1a\u91cd\u590d\u9001\u5165\u8fd9\u4e00\u5b50\u67e5\u8be2": 303, "\u76f4\u5230\u7ec8\u6b62\u6761\u4ef6\u6ee1\u8db3": 303, "\u6761\u4ef6\u7ec8\u6b62": 303, "\u64cd\u4f5c\u7c7b\u4f3c": 303, "\u53ef\u4ee5\u8868\u8fbe\u4e00\u4e2a\u6761\u4ef6\u8c13\u8bcd": 303, "\u5b83\u88ab\u72ec\u7acb\u5e94\u7528\u4e8e\u5faa\u73af\u4f53\u7684\u6bcf\u4e00\u4e2a\u8f93\u51fa\u904d\u5386\u5668": 303, "\u6ee1\u8db3\u6761\u4ef6\u7684\u904d\u5386\u5668\u5c31\u4f1a\u79bb\u5f00\u5faa\u73af": 303, "\u53e6\u4e00\u4e2a\u5e38\u7528\u7684": 303, "\u8fed\u4ee3\u8f6e\u6b21\u7ec8\u6b62": 303, "\u64cd\u4f5c\u53ef\u4ee5\u5229\u7528\u4e00\u4e2a\u6574\u578b\u5e38\u91cf": 303, "\u8868\u8fbe\u56fa\u5b9a\u8fed\u4ee3\u8f6e\u6b21\u540e\u7ec8\u6b62\u5faa\u73af": 303, "\u4e0b\u9762\u5c55\u793a\u4e86\u4e00\u4e2a\u5b8c\u6574\u7684gremlin\u793a\u4f8b": 303, "\u5b83\u5c1d\u8bd5\u4ece\u4e00\u4e2a\u7ed9\u5b9a\u8d26\u6237": 303, "\u70b9\u5f00\u59cb\u627e\u5230\u957f\u5ea6\u4e3a": 303, "\u7684\u6709\u5411\u73af\u8def": 303, "\u9996\u5148": [303, 305], "\u8f93\u5165\u56fe\u64cd\u4f5c": 303, "\u5305\u542b\u4e00\u4e2a": 303, "\u8868\u8fbe\u7684\u7b80\u5355\u8fc7\u6ee4": 303, "\u8fd4\u56de\u56fe\u4e2d\u6ee1\u8db3\u6761\u4ef6\u7684": 303, "\u70b9": 303, "\u5373\u552f\u4e00\u6807\u8bc6\u4e3a": 303, "\u7684\u70b9": 303, "\u7d27\u968f\u5176\u540e\u7684": 303, "\u64cd\u4f5c\u662f\u4e00\u4e2a": 303, "\u4fee\u9970\u7b26": 303, "\u5b83\u4e0d\u6539\u53d8\u8f93\u5165\u904d\u5386\u5668\u96c6\u5408": 303, "\u4f46\u5bf9\u5176\u4e2d\u6bcf\u4e00\u4e2a\u904d\u5386\u5668\u7684\u5f53\u524d\u4f4d\u7f6e": 303, "\u6253\u4e0a\u4e00\u4e2a\u6709\u540d\u6807\u7b7e": 303, "\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684": 303, "\u4ece\u800c\u4eca\u540e\u53ef\u4ee5\u5f15\u7528": 303, "\u67e5\u8be2\u6cbf\u7740": 303, "\u7c7b\u578b\u7684\u51fa\u8fb9\u5faa\u73af\u6e38\u8d70": 303, "\u6b21": 303, "\u8f93\u51fahops\u5728": 303, "\u8303\u56f4\u5185\u7684\u90bb\u70b9": 303, "\u4e14\u6bcf\u4e00\u6b21\u90fd\u8fc7\u6ee4\u6216\u8df3\u8fc7\u8def\u5f84\u4e2d\u7684\u91cd\u590d\u70b9": 303, "\u901a\u8fc7\u5728": 303, "\u5185\u914d\u7f6e": 303, "\u9009\u9879\u5b9e\u73b0": 303, "\u64cd\u4f5c\u68c0\u67e5\u6b64\u65f6\u904d\u5386\u8def\u5f84\u7684\u4e0b\u4e00\u8df3\u662f\u5426\u53ef\u4ee5\u56de\u5230\u8d77\u70b9": 303, "\u6307\u4ee3": 303, "\u4ece\u800c\u5f62\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a": 303, "\u7684\u73af": 303, "\u5bf9\u4e8e\u68c0\u6d4b\u5230\u7684\u73af": 303, "\u67e5\u8be2\u8fd8\u901a\u8fc7": 303, "\u64cd\u4f5c\u5c55\u793a\u6bcf\u4e2a\u904d\u5386\u5668\u7684\u5b8c\u6210\u8def\u5f84\u4fe1\u606f": 303, "\u64cd\u4f5c\u7c7b\u4f3csql\u4e2d\u7684top": 303, "\u5b83\u8868\u8fbe\u4e86\u67e5\u8be2\u7ed3\u679c\u4ec5\u9700\u8981\u5305\u542b\u4e00\u4e2a\u8fd9\u6837\u7684\u8def\u5f84": 303, "\u5982\u679c\u6709\u7684\u8bdd": 303, "gie\u652f\u6301apach": 303, "tinkerpop\u5b9a\u4e49\u7684\u5c5e\u6027\u56fe\u6a21\u578b\u548cgremlin\u904d\u5386\u67e5\u8be2": 303, "\u4e14\u5b9e\u73b0\u4e86\u4e00\u4e2a\u4e0etinkerpop": 303, "3\u548c3": 303, "4\u7248\u672c\u517c\u5bb9\u7684": 303, "\u670d\u52a1\u63a5\u53e3": 303, "\u9664\u6b64\u4e4b\u5916": 303, "\u6211\u4eec\u6269\u5c55\u4e86\u4e00\u4e9b\u8bed\u6cd5\u7cd6\u6765\u8fdb\u4e00\u6b65\u5f15\u5165\u4e00\u4e9b\u7b80\u6d01\u660e\u4e86\u7684expression\u8868\u793a": 303, "\u4e0b\u9762\u6211\u4eec\u5217\u51fa\u5f53\u524d\u5b9e\u73b0\u548capach": 303, "tinkerpop\u89c4\u8303\u7684\u4e3b\u8981\u5dee\u4e00\u70b9": 303, "\u5176\u4e2d\u4e00\u4e9b\u5dee\u5f02\u4f1a\u6709\u673a\u4f1a\u6d88\u9664": 303, "\u53e6\u4e00\u4e9b\u662f\u76ee\u524dgraphscope\u5b9a\u4f4d\u7684\u573a\u666f\u5dee\u5f02\u9020\u6210\u7684\u4e0d\u540c\u8bbe\u8ba1\u9009\u62e9": 303, "\u76ee\u524d\u7684": 303, "\u6280\u672f\u9884\u89c8\u7248\u5229\u7528\u4e86": 303, "\u9879\u76ee\u63d0\u4f9b\u7684\u5206\u5e03\u5f0f\u5185\u5b58\u5b58\u50a8\u4f5c\u4e3a\u8f93\u5165\u56fe": 303, "\u5b83\u652f\u6301\u4e00\u6b21\u8f7d\u5165": 303, "\u4e0d\u53ef\u4fee\u6539": 303, "\u7684\u56fe\u6a21\u578b\u6570\u636e": 303, "\u548c\u56fe\u5206\u7247\u5b58\u50a8\u5728\u5206\u5e03\u5f0f\u96c6\u7fa4": 303, "\u5f53\u524d\u8bbe\u8ba1\u6709\u4e0b\u9762\u7684\u4e00\u4e9b\u9650\u5236": 303, "\u7ea6\u675f": 303, "\u6bcf\u4e2a\u56fe\u7684\u6570\u636e\u9700\u8981\u6ee1\u8db3\u4e8b\u5148\u5b9a\u4e49\u7684schema": 303, "\u5305\u62ec\u70b9": 303, "\u8fb9\u7684\u7c7b\u578b\u540d\u79f0": 303, "\u548c\u5c5e\u6027\u540d\u53ca\u503c\u7c7b\u578b": 303, "\u4e3b\u952e\u7ea6\u675f": 303, "\u6bcf\u4e2a\u9876\u70b9\u7c7b\u578b\u9700\u8981\u5305\u542b\u4e00\u4e2a\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\u7684\u4e3b\u952e": 303, "\u540c\u65f6\u7cfb\u7edf\u4f1a\u4e3a\u6bcf\u4e2a\u70b9\u548c\u8fb9\u5bf9\u8c61": 303, "\u81ea\u52a8\u5206\u914d\u4ea7\u751f\u4e00\u4e2a\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u552f\u4e00\u6807\u8bc6": 303, "\u5bf9\u4e8e\u70b9\u6765\u8bf4": 303, "id\u7f16\u7801\u4e86\u7c7b\u578b": 303, "\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u4e3b\u952e\u4fe1\u606f": 303, "\u6bcf\u4e2a\u70b9\u6216\u8fb9\u7684\u5c5e\u6027": 303, "\u53ef\u4ee5\u5305\u542b\u4e0b\u5217\u7c7b\u578b\u7684\u5c5e\u6027\u503c": 303, "\u56e0\u4e3a\u7cfb\u7edf\u7684\u5168\u5206\u5e03\u5f0f\u53ef\u6269\u5c55\u67b6\u6784": 303, "\u5f53\u524d\u5b9a\u4f4d\u7684\u573a\u666f\u548c\u5b9e\u73b0\u4e0d\u652f\u6301\u4e0b\u5217\u529f\u80fd": 303, "\u56fe\u4fee\u6539\u64cd\u4f5c": 303, "lambda\u548cgroovy\u8868\u8fbe\u5f0f\u6216\u81ea\u5b9a\u4e49\u51fd\u6570": 303, "\u7b49\u8868\u8fbe\u5f0f\u6216java\u8c03\u7528\u7b49\u7b49": 303, "\u5b9a\u5236gremlin\u56fe\u904d\u5386\u7b56\u7565": 303, "\u5373\u67e5\u8be2\u4f18\u5316\u7531graphscope\u7cfb\u7edf\u81ea\u52a8\u5b8c\u6210": 303, "\u4e8b\u52a1": 303, "\u4e8c\u7ea7\u7d22\u5f15\u76ee\u524d\u5c1a\u672a\u652f\u6301": 303, "\u7528\u6237\u5b9a\u4e49\u7684\u4e3b\u952e\u4f1a\u88ab\u81ea\u52a8\u7d22\u5f15": 303, "\u5f53\u524dgraphscope\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 303, "\u548c\u793a\u4f8b\u7528\u6cd5": 303, "\u8f93\u5165\u56fe": 303, "id1": 303, "id2": 303, "labelnam": 303, "labelname1": 303, "labelname2": 303, "70": 303, "\u901a\u8fc7expression\u5b9e\u73b0\u8fc7\u6ee4": 303, "\u8bed\u6cd5\u7cd6": 303, "\u4ee3\u8868head\u8282\u70b9\u7684age\u5c5e\u6027": 303, "\u4ee3\u8868": 303, "\u8282\u70b9\u7684age\u5c5e\u6027": 303, "head\u8282\u70b9\u7684a\u5c5e\u6027\u662f\u6574\u6570\u6570\u7ec4\u7c7b\u578b": 303, "\u901a\u8fc7expression\u5b9e\u73b0\u4f4d\u8fd0\u7b97": 303, "head\u8282\u70b9\u7684number\u5c5e\u6027\u662f\u6574\u578b": 303, "\u901a\u8fc7expression\u5b9e\u73b0\u7b97\u6570\u8fd0\u7b97": 303, "head\u8282\u70b9\u7684number\u548cage\u5c5e\u6027\u90fd\u662f\u6574\u578b": 303, "\u901a\u8fc7expression\u5b9e\u73b0\u6307\u6570\u8fd0\u7b97": 303, "dedup": 303, "substr": 303, "contant": 303, "aaa": 303, "otherv": 303, "flatmap": 303, "\u591a\u91cd\u6620\u5c04": 303, "bothv": 303, "\u627e\u5230\u6240\u6709\u4ece": 303, "\u5f00\u59cb\u901a\u8fc7": 303, "\u8fb9\u7c7b\u578b\u5411\u5916\u6269\u5c55": 303, "\u8df3\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84": 303, "\u70b9\u4e0d\u91cd\u590d": 303, "\u5e76\u4e14\u53ea\u4fdd\u5b58path\u7684\u6700\u672b\u7aef\u70b9": 303, "\u8df3\u7684\u6240\u6709\u4efb\u610f\u8def\u5f84": 303, "\u70b9\u53ef\u91cd\u590d": 303, "valuemap": 303, "\u8f93\u51fa\u6240\u6709\u5c5e\u6027": 303, "\u805a\u5408": 303, "fold": 303, "groupcount": 303, "groupbi": 303, "groupby\u591a\u4e2akei": 303, "\u5e76\u4e14\u4e3a\u6bcf\u4e2akey\u8bbe\u7f6e\u522b\u540d": 303, "groupby\u591a\u4e2avalu": 303, "\u5e76\u4e14\u4e3a\u6bcf\u4e2avalue\u8bbe\u7f6e\u522b\u540d": 303, "\u5373\u53d6\u524dk\u4e2a\u7ed3\u679c": 303, "graphscope\u6682\u65f6\u4e0d\u652f\u6301\u4e0b\u5217gremlin\u64cd\u4f5c": 303, "\u4f1a\u9010\u6b65\u652f\u6301": 303, "\u53ef\u4ee5\u901a\u8fc7path": 303, "expansion\u8bed\u6cd5\u7cd6\u5b9e\u73b0": 303, "\u57fa\u4e8e\u96c6\u5408\u7684local\u8ba1\u7b97": 303, "\u67e5\u8be2\u8ba1\u5212\u89e3\u91ca": 303, "profil": 303, "\u67e5\u8be2\u6267\u884c\u6027\u80fd\u5206\u6790": 303, "\u81ea\u5b9a\u4e49\u72b6\u6001\u8ba1\u7b97": 303, "\u8ba1\u7b97\u5b50\u56fe": 303, "\u76ee\u524d\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 303, "\u652f\u6301\u62bd\u53d6\u5b50\u56fe\u5199\u5165vineyard\u5b58\u50a8": 303, "cap": 303, "\u8bbf\u95ee\u81ea\u5b9a\u4e49\u72b6\u6001": 303, "\u4f8b\u5982pagerank\u548cshortestpath": 303, "\u8fd9\u90e8\u5206\u529f\u80fdgraphscope\u901a\u8fc7\u56fe\u5206\u6790\u5f15\u64ce\u548cnetworkx\u517c\u5bb9\u63a5\u53e3\u63d0\u4f9b": 303, "graphscope\u4e2d\u7684\u56fe\u5b66\u4e60\u5f15\u64ce": 304, "\u662f\u9762\u5411\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7814\u53d1\u548c\u5e94\u7528\u800c\u8bbe\u8ba1\u7684\u4e00\u6b3e\u5206\u5e03\u5f0f\u6846\u67b6": 304, "\u5b83\u4ece\u5b9e\u9645\u95ee\u9898\u51fa\u53d1": 304, "\u63d0\u70bc\u548c\u62bd\u8c61\u4e86\u4e00\u5957\u9002\u5408\u4e8e\u5f53\u4e0b\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u7f16\u7a0b\u8303\u5f0f": 304, "\u5e76\u5df2\u7ecf\u6210\u529f\u5e94\u7528\u5728\u963f\u91cc\u5df4\u5df4": 304, "\u5185\u90e8\u7684\u8bf8\u5982\u641c\u7d22\u63a8\u8350": 304, "\u77e5\u8bc6\u56fe\u8c31\u7b49\u4f17\u591a\u573a\u666f": 304, "gl\u6ce8\u91cd\u53ef\u79fb\u690d\u548c\u53ef\u6269\u5c55": 304, "\u5bf9\u4e8e\u5f00\u53d1\u8005\u66f4\u4e3a\u53cb\u597d": 304, "\u4e3a\u4e86\u5e94\u5bf9gnn\u5728\u5de5\u4e1a\u573a\u666f\u4e2d\u7684\u591a\u6837\u6027\u548c\u5feb\u901f\u53d1\u5c55\u7684\u9700\u6c42": 304, "\u57fa\u4e8egl": 304, "\u5f00\u53d1\u8005\u53ef\u4ee5\u5b9e\u73b0\u4e00\u79cdgnn\u7b97\u6cd5": 304, "\u6216\u8005\u9762\u5411\u5b9e\u9645\u573a\u666f\u5b9a\u5236\u5316\u4e00\u79cd\u56fe\u7b97\u5b50": 304, "\u4f8b\u5982\u56fe\u91c7\u6837": 304, "\u6211\u4eec\u901a\u8fc7\u4e00\u4e2a\u5165\u95e8\u6559\u7a0b\u4ecb\u7ecd\u5982\u4f55\u4f7f\u7528": 304, "\u6765\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684cnn\u6a21\u578b": 304, "\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5b9e\u73b0\u76ee\u524d\u4e3b\u8981\u6709\u4e24\u79cd\u65b9\u5f0f": 304, "\u7b2c\u4e00\u79cd\u662f\u76f4\u63a5\u4ee5\u5168\u56fe\u4e3a\u8ba1\u7b97\u5bf9\u8c61": 304, "\u539f\u59cb\u7684gcn": 304, "gat\u7b49\u7b97\u6cd5\u90fd\u662f\u8fd9\u79cd\u5b9e\u73b0\u601d\u8def": 304, "\u4e00\u822c\u4f1a\u76f4\u63a5\u7528\u90bb\u63a5\u77e9\u9635\u8fdb\u884c\u8ba1\u7b97": 304, "\u7136\u800c\u8fd9\u79cd\u65b9\u6cd5\u5728\u5927\u89c4\u6a21\u56fe\u4e0a\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58": 304, "\u5bfc\u81f4\u65e0\u6cd5\u9ad8\u6548\u8bad\u7ec3\u751a\u81f3\u65e0\u6cd5\u8bad\u7ec3": 304, "\u7b2c\u4e8c\u79cd\u601d\u8def\u662f\u5c06\u5168\u56fe\u5206\u6210\u82e5\u5e72\u5b50\u56fe": 304, "\u7528\u6df1\u5ea6\u5b66\u4e60\u91cc\u5e38\u7528\u7684\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5\u8fdb\u884c\u8bad\u7ec3": 304, "\u6bcf\u6b21\u8bad\u7ec3\u4e00\u4e2a\u5b50\u56fe": 304, "\u4ee3\u8868\u65b9\u6cd5\u662fgraphsag": 304, "graphsaint\u7b49": 304, "\u4e3b\u8981\u9762\u5411\u8d85\u5927\u89c4\u6a21\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u53d1": 304, "\u5b83\u7531\u5e95\u5c42\u7684\u4e00\u4e2a\u56fe\u5f15\u64ce\u548c\u4e0a\u5c42\u7684": 304, "\u7b97\u6cd5\u6a21\u578b\u6784\u6210": 304, "\u56fe\u5f15\u64ce\u5206\u5e03\u5f0f\u5b58\u50a8\u56fe\u7684\u62d3\u6251\u548c\u5c5e\u6027\u4fe1\u606f\u5e76\u63d0\u4f9b\u9ad8\u6548\u7684\u56fe\u91c7\u6837\u67e5\u8be2": 304, "\u7b97\u6cd5\u6a21\u578b\u901a\u8fc7\u8c03\u7528\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u63a5\u53e3\u83b7\u53d6\u5b50\u56fe\u5e76\u8fdb\u884c\u8ba1\u7b97": 304, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u7edf\u4e00\u7f16\u7a0b\u6846\u67b6": 304, "\u652f\u6301\u5e38\u89c1\u56fe\u5b66\u4e60\u7b97\u6cd5\u7684\u5f00\u53d1": 304, "\u77e5\u8bc6\u56fe\u8c31\u6a21\u578b": 304, "\u56fe\u5d4c\u5165\u7b97\u6cd5\u7b49": 304, "\u5e76\u4e14\u548c\u4e3b\u6d41\u7684\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u517c\u5bb9": 304, "\u5305\u62ectensorflow": 304, "\u548cpytorch": 304, "\u76ee\u524d\u6211\u4eec\u5b9e\u73b0\u4e86\u57fa\u4e8etensorflow\u7684\u6a21\u578b": 304, "\u57fa\u4e8epytorch\u7684\u6a21\u578b\u6b63\u5728\u5f00\u53d1\u4e2d": 304, "\u91c7\u7528\u91c7\u6837\u5b50\u56fe\u518d\u8ba1\u7b97\u7684\u65b9\u5f0f\u6784\u5efa\u548c\u8bad\u7ec3\u6a21\u578b": 304, "\u6211\u4eec\u9996\u5148\u4ecb\u7ecd\u4e00\u4e0b\u57fa\u672c\u7684\u6570\u636e\u6a21\u578b": 304, "\u662f\u56fe\u5b66\u4e60\u7b97\u6cd5\u7f16\u7a0b\u7684\u57fa\u672c\u6570\u636e\u5bf9\u8c61": 304, "\u5b83\u7531\u4e00\u4e2abatch\u7684\u79cd\u5b50\u70b9\u6216\u8005\u8fb9": 304, "\u79f0\u4e3a": 304, "\u4ee5\u53ca\u4ed6\u4eec\u7684": 304, "\u611f\u53d7\u91ce": 304, "\u591a\u8df3\u90bb\u5c45": 304, "\u7ec4\u6210": 304, "\u7531\u56fe\u91c7\u6837\u548c\u67e5\u8be2\u5230\u7684\u6570\u636e\u7ec4\u6210": 304, "\u6211\u4eec\u5b9e\u73b0": 304, "\u4e86\u5e38\u89c1\u7684\u90bb\u5c45\u91c7\u6837": 304, "\u56fe\u904d\u5386\u548c\u8d1f\u91c7\u6837\u65b9\u6cd5": 304, "\u91c7\u6837\u7684\u6570\u636e\u7ec4\u7ec7\u6210numpy\u683c\u5f0f\u7684": 304, "\u540e\u6839\u636e\u4e0d\u540c\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u8f6c\u6362\u6210\u5bf9\u5e94\u7684tensor\u683c\u5f0f": 304, "\u7136\u540e\u7528": 304, "\u7ba1\u7406": 304, "\u5230": 304, "\u7684\u8f6c\u6362": 304, "\u63d0\u4f9b\u8bad\u7ec3\u6240\u9700\u8981\u7684\u6570\u636e": 304, "\u6240\u6709\u7684\u56fe\u5b66\u4e60\u6a21\u578b\u53ef\u4ee5\u62bd\u8c61\u4e3a\u4f7f\u7528\u7f16\u7801\u5668\u5c06": 304, "\u7f16\u7801\u6210\u6700\u7ec8\u7684\u70b9": 304, "\u8fb9\u6216\u8005\u5b50\u56fe\u7684": 304, "\u5411\u91cf": 304, "\u9996\u5148\u5229\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7684\u70b9\u548c\u8fb9\u4e0a\u7684\u7279\u5f81": 304, "\u7136\u540e\u5c06\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u540e\u7684": 304, "\u539f\u59cb\u5411\u91cf\u7528\u4e0d\u540c\u7684\u56fe\u7f16\u7801\u5668\u8fdb\u884c\u7f16\u7801": 304, "\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa": 304, "\u5bf9\u4e8e\u5927\u591a\u6570gnn\u6a21\u578b": 304, "\u56fe\u7f16\u7801\u5668": 304, "\u63d0\u4f9b\u4e86\u5982\u4f55\u805a\u5408\u90bb\u5c45\u4fe1\u606f\u5230\u81ea\u8eab\u8282\u70b9\u6216\u8005\u8fb9\u7684\u62bd\u8c61": 304, "\u7528\u4e0d\u540c\u7684\u56fe\u5377\u79ef\u5c42\u5b9e\u73b0": 304, "\u57fa\u4e8e\u4e0a\u9762\u4ecb\u7ecd\u7684\u6570\u636e\u6a21\u578b\u548c\u7f16\u7801\u5668": 304, "\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u5feb\u901f\u5730\u5b9e\u73b0\u4e0d\u540c\u7684\u56fe\u5b66\u4e60\u7b97\u6cd5": 304, "\u5728\u63a5\u4e0b\u6765\u4e00\u7ae0\u91cc": 304, "\u6211\u4eec\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5982\u4f55\u5f00\u53d1\u4e00\u4e2agnn\u6a21\u578b": 304, "\u8fd9\u7bc7\u6587\u6863\u6211\u4eec\u5c06\u4ecb\u7ecd\u5982\u4f55\u7528": 304, "\u63d0\u4f9b\u7684\u57fa\u672capi\u914d\u5408\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce": 304, "\u5982tensorflow": 304, "\u6765\u6784\u5efa\u56fe\u5b66\u4e60\u7b97\u6cd5": 304, "\u6211\u4eec\u4ee5\u56fe\u795e\u7ecf\u7f51\u7edc\u91cc\u6700\u6d41\u884c\u7684gcn\u6a21\u578b\u505a\u4e3a\u793a\u4f8b\u6765\u8bf4\u660e": 304, "\u901a\u5e38\u6765\u8bf4": 304, "\u5b9e\u73b0\u4e00\u4e2a\u7b97\u6cd5\u9700\u8981\u4e0b\u9762\u56db\u4e2a\u6b65\u9aa4": 304, "\u6307\u5b9a\u91c7\u6837\u6a21\u5f0f": 304, "\u7528\u56fe\u91c7\u6837": 304, "\u67e5\u8be2\u65b9\u6cd5\u91c7\u6837\u5b50\u56fe\u5e76\u7ec4\u7ec7\u6210": 304, "\u6211\u4eec\u62bd\u8c61\u4e864\u4e2a\u57fa\u672c\u7684\u51fd\u6570": 304, "\u7528\u6765\u904d\u5386\u56fe\u6570\u636e\u4ea7\u751f": 304, "positve_sampl": 304, "\u4ee5\u8fd9\u4e9b": 304, "\u4e3a\u8f93\u5165\u4ea7\u751f": 304, "\u8bad\u7ec3\u7684\u6b63\u6837\u672c": 304, "\u5bf9\u4e8e\u65e0\u76d1\u7763\u5b66\u4e60": 304, "\u4ea7\u751f\u8d1f\u6837\u672c": 304, "gnns\u9700\u8981\u805a\u5408\u90bb\u5c45\u4fe1\u606f": 304, "\u6211\u4eec\u62bd\u8c61\u4e86": 304, "\u6765\u91c7\u6837\u90bb\u5c45": 304, "\u6700\u540e\u5c06": 304, "\u4ea7\u751f\u7684": 304, "\u4ee5\u53ca\u91c7\u6837\u51fa\u7684\u90bb\u5c45\u7ec4\u6210": 304, "\u6784\u5efa\u56fe\u6570\u636e\u6d41": 304, "\u7b97\u6cd5\u6a21\u578b\u57fa\u4e8e\u7c7b\u4f3ctensorflow\u7684\u6df1\u5ea6\u5b66\u4e60\u5f15\u64ce\u6784\u5efa": 304, "\u6240\u4ee5\u91c7\u6837\u51fa\u7684": 304, "\u9700\u8981\u5148\u8f6c\u6362\u6210tensor\u683c\u5f0f": 304, "\u624d\u80fd\u4f7f\u7528": 304, "\u6765\u5c01\u88c5\u8fd9\u4e00\u8f6c\u6362\u8fc7\u7a0b": 304, "\u53ef\u4ee5\u4ea7\u751f\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u8fdb\u884c\u6279\u6b21\u8bad\u7ec3": 304, "\u5b9a\u4e49\u7f16\u7801\u5668": 304, "\u7f16\u7801\u5668\u548c\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801": 304, "\u5f97\u5230": 304, "\u540e": 304, "\u6211\u4eec\u9996\u5148\u5c06\u539f\u59cb\u7684\u70b9": 304, "\u8fb9\u7279\u5f81\u7528\u4e00\u4e9b\u5e38\u89c1\u7279\u5f81\u7f16\u7801\u5668\u7f16\u7801\u6210\u539f\u59cb\u5411\u91cf": 304, "\u505a\u4e3agnns\u6a21\u578b\u7684\u7279\u5f81\u8f93\u5165": 304, "\u7136\u540e\u7528\u56fe\u7f16\u7801\u5668\u5904\u7406": 304, "\u5c06\u90bb\u5c45\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u6c47\u805a\u5e76": 304, "\u548c\u81ea\u8eab\u7279\u5f81\u8fdb\u884c\u7ec4\u5408": 304, "\u5f97\u5230\u6700\u540e\u7684\u70b9\u6216\u8005\u8fb9\u7684\u5411\u91cf": 304, "\u7f16\u5199\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 304, "\u9009\u62e9\u9002\u5f53\u7684\u635f\u5931\u51fd\u6570": 304, "\u5e76\u7f16\u5199\u8bad\u7ec3\u8fc7\u7a0b": 304, "\u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u89c1\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668": 304, "\u5e76\u5bf9\u8bad\u7ec3\u8fc7\u7a0b\u8fdb\u884c\u4e86\u5c01\u88c5": 304, "\u540c\u65f6\u652f\u6301\u5355\u673a\u548c\u5206\u5e03\u5f0f\u8bad\u7ec3": 304, "\u4f60\u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u635f\u5931\u51fd\u6570": 304, "\u4f18\u5316\u5668\u548c\u8bad\u7ec3\u8fc7\u7a0b": 304, "\u4e0b\u9762\u6211\u4eec\u6309\u7167\u4e0a\u9762\u4ecb\u7ecd\u76844\u4e2a\u6b65\u9aa4\u6765\u4ecb\u7ecd\u5982\u4f55\u5b9e\u73b0\u4e00\u4e2agcn\u6a21\u578b": 304, "\u6211\u4eec\u4f7f\u7528cora\u6570\u636e\u96c6\u4ee5\u70b9\u5206\u7c7b\u4efb\u52a1\u505a\u4e3a\u793a\u4f8b": 304, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u6570\u636e\u8f6c\u6362\u811a\u672c": 304, "\u6765": 304, "\u5c06\u539f\u59cbcora\u8f6c\u6362\u6210": 304, "\u9700\u8981\u7684\u683c\u5f0f": 304, "\u8fd0\u884c\u5b8c\u8fd9\u4e2a\u811a\u672c\u540e\u4f60\u53ef\u4ee5\u5f97\u5230\u4e0b\u97625\u4e2a\u6587\u4ef6": 304, "\u5206\u522b\u662f\u70b9\u8868": 304, "\u8fb9\u8868\u4ee5\u53ca\u7528\u6765\u533a\u5206\u8bad\u7ec3": 304, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u7684\u70b9\u8868": 304, "\u7136\u540e\u53ef\u4ee5\u7528\u4e0b\u9762\u4ee3\u7801\u6765\u6784\u5efa\u56fe": 304, "\u540e\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u5c06\u56fe\u52a0\u8f7d\u8fdb\u5185\u5b58": 304, "gcn\u6a21\u578b\u7ee7\u627f\u81ea\u57fa\u672c\u7684\u5b66\u4e60\u6a21\u578b\u7c7b": 304, "\u53ea\u9700\u8981\u91cd\u5199\u57fa\u7c7b\u7684\u91c7\u6837": 304, "\u6a21\u578b\u6784\u5efa\u7b49\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b8c\u6210gcn\u7684\u6784\u5efa": 304, "\u524d\u4e24\u4e2a\u51fd\u6570\u7528\u6765\u91c7\u6837\u79cd\u5b50\u8282\u70b9\u548c\u6b63\u6837\u672c": 304, "\u91c7\u6837\u90bb\u5c45\u5e76\u7ec4\u7ec7": 304, "\u56de\u4e00\u8df3\u90bb\u5c45": 304, "\u56e0\u6b64\u4e0a\u9762\u4ee3\u7801\u662f\u91c7\u6837\u4e8c\u8df3\u90bb\u5c45": 304, "\u8fd9\u91cc\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5": 304, "\u5bf9\u4e8e\u539f\u59cbgcn\u6765\u8bf4\u56e0\u4e3a\u8981\u83b7\u5f97\u6bcf\u4e2a\u70b9\u7684\u6240\u6709\u90bb\u5c45": 304, "\u56e0\u6b64\u9009\u62e9": 304, "\u91c7\u6837\u5b8c\u540e\u5c06\u7ed3\u679c\u7ec4\u7ec7": 304, "\u6210": 304, "\u8fd4\u56de": 304, "\u51fd\u6570\u91cc\u6211\u4eec\u4f7f\u7528\u5c01\u88c5\u7684": 304, "\u6765\u628a": 304, "\u8f6c\u6362\u6210\u5bf9\u5e94\u7684": 304, "\u5305\u542b\u4e00\u4e2a\u6570\u636e\u6d41\u8fed\u4ee3\u5668\u548c\u82e5\u5e72": 304, "\u4f60\u53ef\u4ee5\u4ece": 304, "\u83b7\u53d6\u548c\u524d\u9762": 304, "\u5bf9\u5e94\u7684": 304, "\u9996\u5148\u4f7f\u7528\u7279\u5f81\u7f16\u7801\u5668\u6765\u7f16\u7801\u539f\u59cb\u7279\u5f81": 304, "\u8fd9\u91cc\u6211\u4eec\u4f7f\u7528": 304, "\u5373\u8fd4\u56de\u81ea\u8eab\u5373\u53ef": 304, "\u56e0\u4e3a": 304, "cora\u7684\u7279\u5f81\u5df2\u7ecf\u662f\u5904\u7406\u8fc7\u7684\u5411\u91cf\u683c\u5f0f\u4e86": 304, "\u5bf9\u4e8e\u65e2\u6709\u79bb\u6563\u7279\u5f81\u7531\u4e8e\u8fde\u7eed\u7279\u5f81\u7684\u60c5\u51b5": 304, "\u66f4\u591aencoder\u8bf7\u53c2\u8003": 304, "\u5c42\u6784\u5efa\u56fe\u7f16\u7801\u5668": 304, "gcn\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u5168\u90e8\u90bb\u5c45": 304, "\u90bb\u5c45\u4ee5\u7a00\u758f\u683c\u5f0f\u7ec4\u7ec7": 304, "\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528": 304, "\u90bb\u5c45\u5bf9\u9f50\u7684\u6a21\u578b\u53ef\u4ee5\u53c2\u8003graphsage\u7684\u5b9e\u73b0": 304, "\u5bf9\u4e8ecora\u70b9\u5206\u7c7b\u6a21\u578b": 304, "\u6211\u4eec\u9009\u62e9\u5bf9\u5e94\u7684tensorflow\u91cc\u7684\u5206\u7c7b\u635f\u5931\u51fd\u6570\u5373\u53ef": 304, "\u7136\u540e\u5728": 304, "\u51fd\u6570\u91cc\u5c06\u7f16\u7801\u5668\u548c\u635f\u5931\u51fd\u6570\u7ec4\u7ec7\u8d77\u6765": 304, "\u6700\u7ec8\u8fd4\u56de\u4e00\u4e2a\u6570\u636e\u8fed\u4ee3\u5668\u548c\u635f\u5931\u51fd\u6570": 304, "\u63a5\u7740\u4f7f\u7528\u5c01\u88c5\u7684\u5355\u673a\u8bad\u7ec3\u8fc7\u7a0b": 304, "\u6765\u8fdb\u884c\u8bad\u7ec3": 304, "\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u4e00\u4e2agcn\u6a21\u578b\u7684\u7f16\u5199": 304, "\u5b8c\u6574\u4ee3\u7801\u8bf7\u53c2\u8003": 304, "\u76ee\u5f55": 304, "\u6211\u4eec\u5b9e\u73b0\u4e86gcn": 304, "gat\u7b49\u6a21\u578b": 304, "\u4f60\u53ef\u4ee5\u53c2\u8003\u76f8\u4f3c\u7684\u6a21\u578b\u4ee3\u7801\u505a\u4e3a\u5f00\u59cb": 304, "\u5c5e\u6027\u56fe": 305, "\u56fe\u4e0a\u7684\u70b9": 305, "\u8fb9\u90fd\u5e26\u6709\u6807\u7b7e": 305, "\u6bcf\u4e2a\u6807\u7b7e\u90fd\u53ef\u80fd\u5e26\u6709\u8bb8\u591a\u5c5e\u6027": 305, "\u5185\u7f6e\u4e86\u4e00\u7ec4\u6d41\u884c\u7684\u6570\u636e\u96c6": 305, "\u4ee5\u53ca\u8f7d\u5165\u4ed6\u4eec\u7684\u5de5\u5177\u51fd\u6570": 305, "\u5e2e\u52a9\u7528\u6237\u66f4\u5bb9\u6613\u7684\u4e0a\u624b": 305, "\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 305, "\u5728\u5355\u673a\u6a21\u5f0f\u4e0b": 305, "\u4f1a\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 305, "\u5e76\u4e14\u4f1a\u4fdd\u7559\u4ee5\u4f9b\u5c06\u6765\u4f7f\u7528": 305, "\u96c6\u7fa4\u6a21\u5f0f\u4e0b": 305, "\u5c06\u6570\u636e\u6587\u4ef6\u4e0b\u8f7d\u5230": 305, "\u7684\u672c\u5730\u5b58\u50a8\u6bd4\u8f83\u590d\u6742": 305, "\u6240\u4ee5\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6302\u8f7d\u4e86": 305, "\u7684\u6570\u636e\u96c6\u6876\u7684\u4e00\u4e2a\u5bb9\u5668": 305, "\u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u91cc": 305, "\u6211\u4eec\u5c06\u8f7d\u5165\u548c\u4e0a\u9762\u540c\u6837\u7684\u4e00\u5f20\u56fe": 305, "\u53ea\u4e0d\u8fc7\u8fd9\u6b21": 305, "\u90e8\u7f72\u5728\u96c6\u7fa4\u4e2d": 305, "\u6211\u4eec\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 305, "\u7136\u540e\u5c06\u6570\u636e\u96c6\u6876\u6302\u8f7d\u5230": 305, "\u6b64\u8def\u5f84\u76f8\u5bf9\u4e8e": 305, "\u7684\u672c\u5730\u8def\u5f84": 305, "\u7136\u540e\u6211\u4eec\u5c06\u4f1a\u8bdd\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165": 305, "\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u53c2\u6570": 305, "\u662f\u6211\u4eec\u901a\u8fc7": 305, "\u7684\u53c2\u6570\u6307\u5b9a\u7684\u6302\u8f7d\u8def\u5f84": 305, "\u662f\u8fd9\u4e2a\u6570\u636e\u96c6\u6240\u5728\u7684\u6587\u4ef6\u5939\u7684\u540d\u5b57": 305, "\u4f60\u53ef\u4ee5\u5728": 305, "\u627e\u5230\u6240\u6709\u76ee\u524d\u652f\u6301\u7684\u6570\u636e\u96c6": 305, "\u6587\u4ef6\u4e2d\u5305\u62ec\u8be6\u7ec6\u7684\u4ecb\u7ecd\u548c\u7528\u6cd5": 305, "\u7136\u800c": 305, "\u66f4\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u96c6": 305, "\u5e76\u505a\u4e00\u4e9b\u6570\u636e\u5206\u6790\u7684\u5de5\u4f5c": 305, "\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u51fd\u6570\u7528\u6765\u5b9a\u4e49\u4e00\u4e2a\u5c5e\u6027\u56fe\u7684\u6a21\u578b": 305, "\u5e76\u4ee5\u5c06\u5c5e\u6027\u56fe\u8f7d\u5165": 305, "\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u4f1a\u8bdd": 305, "\u7136\u540e\u5728\u6b64\u4f1a\u8bdd\u5185\u521b\u5efa\u56fe": 305, "\u6709\u51e0\u4e2a\u65b9\u6cd5\u6765\u914d\u7f6e": 305, "\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u589e\u91cf\u7684\u6784\u5efa\u4e00\u4e2a\u5c5e\u6027\u56fe": 305, "\u6211\u4eec\u5c06\u4f7f\u7528": 305, "\u91cc\u7684\u6587\u4ef6\u505a\u5b8c\u6b64\u7bc7\u6559\u7a0b\u7684\u793a\u4f8b": 305, "\u627e\u5230\u6e90\u6570\u636e": 305, "\u4f60\u53ef\u4ee5\u968f\u65f6\u4f7f\u7528": 305, "\u6765\u67e5\u770b\u56fe\u7684\u6a21\u578b": 305, "\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u5185\u6dfb\u52a0\u4e00\u4e2a\u70b9\u6807\u7b7e": 305, "\u76f8\u5173\u7684\u53c2\u6570\u542b\u4e49\u5982\u4e0b": 305, "\u4ee3\u8868\u6570\u636e\u6e90": 305, "\u6307\u793a": 305, "\u53ef\u4ee5\u5728\u54ea\u91cc\u627e\u5230\u6e90\u6570\u636e": 305, "\u53ef\u4ee5\u4e3a\u6587\u4ef6\u8def\u5f84": 305, "\u6570\u7ec4\u7b49": 305, "\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50": 305, "\u8fd9\u5c06\u4f1a\u4ece\u6587\u4ef6": 305, "\u8f7d\u5165\u6570\u636e": 305, "\u5e76\u4e14\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a": 305, "\u4f46\u662f\u6709\u4e0d\u540c\u7684\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e": 305, "\u70b9\u6807\u7b7e\u7684\u540d\u5b57": 305, "\u9ed8\u8ba4\u4e3a": 305, "\u4e00\u5f20\u56fe\u4e2d\u4e0d\u80fd\u542b\u6709\u540c\u540d\u7684\u6807\u7b7e": 305, "\u6240\u4ee5\u82e5\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u6807\u7b7e": 305, "\u7528\u6237\u5fc5\u987b\u6307\u5b9a\u6807\u7b7e\u540d\u5b57": 305, "\u603b\u662f\u7ed9\u6807\u7b7e\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u540d\u5b57\u4e5f\u6709\u597d\u5904": 305, "\u53ef\u4ee5\u4e3a\u4efb\u4f55\u6807\u8bc6\u7b26": 305, "\u4e3e\u4e2a\u4f8b\u5b50": 305, "\u7ed3\u679c\u4e0e\u4e0a\u4e00\u6b65\u7ed3\u679c\u9664\u4e86\u6807\u7b7e\u540d\u5b8c\u5168\u4e00\u81f4": 305, "\u4e00\u7ec4\u5c5e\u6027\u540d\u5b57": 305, "\u53ef\u9009\u9879": 305, "\u5c5e\u6027\u540d\u5e94\u5f53\u4e0e\u6570\u636e\u4e2d\u7684\u9996\u884c\u8868\u5934\u4e2d\u7684\u540d\u5b57\u76f8\u4e00\u81f4": 305, "\u5982\u679c\u7701\u7565\u6216\u4e3a": 305, "\u9664id\u5217\u4e4b\u5916\u7684\u6240\u6709\u5217\u90fd\u5c06\u4f1a\u4f5c\u4e3a\u5c5e\u6027\u8f7d\u5165": 305, "\u5982\u679c\u4e3a\u7a7a\u5217\u8868": 305, "\u90a3\u4e48\u5c06\u4e0d\u4f1a\u8f7d\u5165\u4efb\u4f55\u5c5e\u6027": 305, "\u5176\u4ed6\u60c5\u51b5\u4e0b": 305, "\u53ea\u4f1a\u8f7d\u5165\u6307\u5b9a\u4e86\u7684\u5217\u4f5c\u4e3a\u5c5e\u6027": 305, "\u6bd4\u5982\u8bf4": 305, "gender": 305, "birthdai": 305, "\u5217\u7684\u5217\u540d": 305, "\u6b64\u5217\u5c06\u5728\u8f7d\u5165\u8fb9\u65f6\u88ab\u7528\u505a\u8d77\u59cb\u70b9": 305, "\u6216\u76ee\u6807\u70b9": 305, "\u5176\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32": 305, "\u6b64\u65f6\u6307\u4ee3\u5217\u540d": 305, "\u6216\u8005\u53ef\u4ee5\u662f\u4e00\u4e2a\u6b63\u6574\u6570": 305, "\u4ee3\u8868\u7b2c\u51e0\u5217": 305, "\u4ece0\u5f00\u59cb": 305, "\u9ed8\u8ba4\u4e3a\u7b2c0\u5217": 305, "\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u5411\u56fe\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u8fb9\u6807\u7b7e": 305, "\u4e0e\u6784\u5efa\u70b9\u6807\u7b7e\u4e00\u8282\u4e2d\u7684": 305, "\u7c7b\u4f3c": 305, "\u4e3a\u6307\u793a\u53bb\u54ea\u91cc\u8bfb\u6570\u636e\u7684\u8def\u5f84": 305, "\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50": 305, "\u8fd9\u5c06\u4f1a\u8f7d\u5165\u4e00\u4e2a\u6807\u7b7e\u540d\u4e3a": 305, "\u6e90\u8282\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u8282\u70b9\u6807\u7b7e\u90fd\u4e3a": 305, "\u7b2c\u4e00\u5217\u4f5c\u4e3a\u8d77\u70b9\u7684\u70b9id": 305, "\u7b2c\u4e8c\u5217\u4f5c\u4e3a\u7ec8\u70b9\u7684\u70b9id": 305, "\u5176\u4ed6\u5217\u90fd\u4f5c\u4e3a\u5c5e\u6027": 305, "\u8fb9\u7684\u6807\u7b7e\u540d": 305, "\u63a8\u8350\u603b\u662f\u4f7f\u7528\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u7b7e\u540d": 305, "\u4e00\u5217\u5c5e\u6027": 305, "\u610f\u4e49\u4e0e\u884c\u4e3a\u90fd\u548c\u70b9\u4e2d\u7684\u4e00\u81f4": 305, "\u8d77\u70b9\u7684\u6807\u7b7e\u540d\u4e0e\u7ec8\u70b9\u7684\u6807\u7b7e\u540d": 305, "\u6211\u4eec\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\u4e86": 305, "\u5728\u90a3\u91cc\u5c06\u5176\u8d4b\u503c\u4e3a": 305, "\u8fd9\u4e24\u8005\u53ef\u4ee5\u53d6\u4e0d\u540c\u7684\u503c": 305, "\u4e3e\u4f8b\u6765\u8bf4": 305, "person_likes_comment_0_0": 305, "\u8d77\u70b9\u7684": 305, "\u5217\u540d\u4e0e\u7ec8\u70b9\u7684": 305, "\u5217\u540d": 305, "\u9ed8\u8ba4\u5206\u522b\u4e3a": 305, "\u610f\u4e49\u548c\u8868\u73b0\u4e0e\u70b9\u4e2d\u7684": 305, "\u4e0d\u540c\u7684\u662f\u9700\u8981\u4e24\u5217": 305, "\u4e00\u5217\u4e3a\u8d77\u70b9": 305, "\u4e00\u5217\u4e3a\u7ec8\u70b9": 305, "\u4ee5\u4e0b\u662f\u4e2a\u4f8b\u5b50": 305, "\u8fd9\u662f\u4e00\u4e9b\u7528\u6765\u5904\u7406\u7279\u522b\u7b80\u5355\u6216\u7279\u522b\u590d\u6742\u7684\u9ad8\u7ea7\u4e00\u4e9b\u7684\u7528\u6cd5": 305, "\u5982\u679c\u56fe\u4e2d\u53ea\u5b58\u5728\u4e00\u4e2a\u70b9\u6807\u7b7e": 305, "\u90a3\u4e48\u53ef\u4ee5\u7701\u7565\u6307\u5b9a\u70b9\u6807\u7b7e": 305, "\u5c06\u4f1a\u63a8\u65ad\u8d77\u59cb\u70b9\u6807\u7b7e\u548c\u7ec8\u70b9\u6807\u7b7e\u4e3a\u8fd9\u4e00\u4e2a\u70b9\u6807\u7b7e": 305, "\u5982\u679c\u7528\u6237\u7684": 305, "\u53d6\u503c\u4e3a\u56fe\u4e2d\u4e0d\u5b58\u5728\u7684\u70b9\u6807\u7b7e": 305, "\u4f1a\u4ece\u8fb9\u7684\u7aef\u70b9\u4e2d\u805a\u5408\u51fa\u70b9\u8868": 305, "\u5728\u4e00\u4e9b\u60c5\u51b5\u4e0b": 305, "\u4e00\u79cd\u8fb9\u7684\u6807\u7b7e\u53ef\u80fd\u8fde\u63a5\u4e86\u4e24\u79cd\u53ca\u4ee5\u4e0a\u7684\u70b9": 305, "\u5728\u4e0b\u9762\u7684\u5c5e\u6027\u56fe\u4e2d": 305, "\u6709\u4e00\u4e2a\u540d\u4e3a": 305, "\u7684\u8fb9\u6807\u7b7e": 305, "\u8fde\u63a5\u4e86\u4e24\u79cd\u70b9\u6807\u7b7e": 305, "\u53ef\u4ee5\u6dfb\u52a0\u4e24\u6b21\u540d\u4e3a": 305, "person_likes_post_0_0": 305, "\u53ef\u4ee5\u4ece\u8f93\u5165\u6587\u4ef6\u4e2d\u63a8\u65ad\u70b9\u7684\u7c7b\u578b": 305, "\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u5de5\u4f5c\u7684\u5f88\u597d": 305, "\u7528\u6237\u6709\u65f6\u9700\u8981\u66f4\u591a\u7684\u81ea\u5b9a\u4e49\u80fd\u529b": 305, "\u4e3a\u4e86\u6ee1\u8db3\u6b64\u79cd\u9700\u6c42": 305, "\u53ef\u4ee5\u5728\u5c5e\u6027\u540d\u4e4b\u540e\u52a0\u5165\u4e00\u4e2a\u989d\u5916\u7c7b\u578b\u7684\u53c2\u6570": 305, "\u50cf\u8fd9\u6837": 305, "post_0_0": 305, "\u8fd9\u5c06\u4f1a\u5c06\u5c5e\u6027\u7684\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b": 305, "\u6ce8\u610f\u5c5e\u6027\u540d\u5b57\u548c\u7c7b\u578b\u9700\u8981\u5728\u540c\u4e00\u4e2a\u5143\u7ec4\u4e2d": 305, "\u5728\u8fd9\u91cc": 305, "\u7684\u7c7b\u578b\u5c06\u4f1a\u662f": 305, "\u800c\u9ed8\u8ba4\u4e0d\u6307\u5b9a\u7684\u8bdd\u4e3a": 305, "\u5e38\u89c1\u7684\u4f7f\u7528\u573a\u666f\u662f\u6307\u5b9a": 305, "\u7b49\u7c7b\u578b": 305, "\u6709\u4e09\u4e2a\u914d\u7f6e\u5143\u4fe1\u606f\u7684\u53c2\u6570": 305, "\u5206\u522b\u4e3a": 305, "\u53ef\u4ee5\u4e3a": 305, "\u4f1a\u6709\u66f4\u5feb\u7684\u901f\u5ea6": 305, "\u548c\u4f7f\u7528\u66f4\u5c11\u7684\u5185\u5b58": 305, "\u5f53id\u4e0d\u80fd\u7528": 305, "\u8868\u793a\u65f6": 305, "\u624d\u5e94\u8be5\u4f7f\u7528": 305, "\u5982\u679c\u786e\u5b9a\u56fe\u70b9id\u8303\u56f4\u4e0d\u4f1a\u8d85\u8fc7": 305, "\u5efa\u8bae\u4f7f\u7528": 305, "\u6765\u964d\u4f4e\u5185\u5b58\u5f00\u9500": 305, "\u6307\u793a\u8f7d\u5165\u65e0\u5411\u56fe\u8fd8\u662f\u6709\u5411\u56fe": 305, "\u6307\u793a\u662f\u5426\u4e3a\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u5168\u5c40\u552f\u4e00\u7684id": 305, "\u6307\u793a\u662f\u5426\u662f\u5426\u5c06\u70b9\u539f\u59cbid\u4fdd\u7559\u4e3a\u5c5e\u6027": 305, "\u8ba9\u6211\u4eec\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u56fe\u7684\u5b9a\u4e49": 305, "\u8fd9\u91cc\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u8f7d\u5165": 305, "\u5c5e\u6027\u56fe\u7684": 305, "\u4f8b\u5b50": 305, "\u4e0a\u6587\u63d0\u5230\u7684\u6570\u636e\u6e90\u662f\u4e00\u4e2a": 305, "\u7684\u7c7b": 305, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u6216\u8005\u6570\u636e\u672c\u8eab": 305, "\u652f\u6301\u4ece": 305, "\u8fd9\u53ef\u4ee5\u4f7f\u7528\u6237\u4ec5\u901a\u8fc7": 305, "\u63a7\u5236\u53f0\u4fbf\u53ef\u4ee5\u521b\u5efa\u56fe": 305, "\u9664\u4e86": 305, "\u5916": 305, "\u5176\u4ed6\u5c5e\u6027": 305, "id\u5217": 305, "\u6807\u7b7e\u8bbe\u7f6e\u7b49\u90fd\u548c\u4e4b\u524d\u63d0\u5230\u7684\u4fdd\u6301\u4e00\u81f4": 305, "datasourc": 305, "col_0": 305, "col_1": 305, "\u6ce8\u610f\u6bcf\u4e2a\u6570\u7ec4\u90fd\u4ee3\u8868\u4e00\u5217": 305, "\u6211\u4eec\u5c06\u5176\u4ee5": 305, "coo": 305, "\u77e9\u9635\u7684\u65b9\u5f0f\u4f20\u5165": 305, "array_v": 305, "col": 305, "array_": 305, "\u5f53": 305, "\u5305\u542b\u6587\u4ef6\u8def\u5f84\u65f6": 305, "\u5b83\u53ef\u80fd\u4ec5\u5305\u542b\u4e00\u4e2a\u5b57\u7b26\u4e32": 305, "\u6587\u4ef6\u8def\u5f84\u5e94\u9075\u5faa": 305, "uri": 305, "\u6807\u51c6": 305, "\u5f53\u6536\u5230\u5305\u542b\u6587\u4ef6\u8def\u5f84\u7684\u8f7d\u56fe\u8bf7\u6c42\u65f6": 305, "\u5c06\u4f1a\u89e3\u6790": 305, "\u8c03\u7528\u76f8\u5e94\u7684\u8f7d\u56fe\u6a21\u5757": 305, "\u652f\u6301\u591a\u79cd\u6570\u636e\u6e90": 305, "\u672c\u5730": 305, "\u6570\u636e\u7531": 305, "\u8d1f\u8d23\u8f7d\u5165": 305, "fsspec": 305, "\u89e3\u6790\u4e0d\u540c\u7684\u6570\u636e\u683c\u5f0f\u4ee5\u53ca\u53c2\u6570": 305, "\u4efb\u4f55\u989d\u5916\u7684\u5177\u4f53\u7684\u914d\u7f6e\u90fd\u53ef\u4ee5\u5728loader\u7684\u53ef\u53d8\u53c2\u6570\u5217\u8868\u4e2d\u4f20\u5165": 305, "\u8fd9\u4e9b\u53c2\u6570\u4f1a\u76f4\u63a5\u88ab\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u5b58\u50a8\u7c7b\u4e2d": 305, "\u4e4b\u4e8e": 305, "\u6216\u8005\u662f": 305, "ds1": 305, "datafil": 305, "ds2": 305, "graphscope_bucket": 305, "ds3": 305, "9000": 305, "extra_conf": 305, "conf1": 305, "value1": 305, "d34": 305, "client_kwarg": 305, "region_nam": 305, "east": 305, "\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u7684\u5b9e\u73b0\u81ea\u5df1\u7684driver\u6765\u652f\u6301\u66f4\u591a\u7684\u6570\u636e\u6e90": 305, "\u6bd4\u5982\u53c2\u7167": 305, "ossf": 305, "driver\u7684\u5b9e\u73b0\u65b9\u5f0f": 305, "\u7528\u6237\u9700\u8981\u7ee7\u627f": 305, "abstractfilesystem": 305, "\u7c7b\u7528\u6765\u505ascheme\u5bf9\u5e94\u7684resolv": 305, "abstractbufferedfil": 305, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 305, "_upload_chunk": 305, "_initiate_upload": 305, "_fetch_rang": 305, "\u8fd9\u51e0\u4e2a\u65b9\u6cd5\u5c31\u53ef\u4ee5\u5b9e\u73b0\u57fa\u672c\u7684read": 305, "write\u529f\u80fd": 305, "\u6700\u540e\u901a\u8fc7": 305, "register_implement": 305, "protocol_nam": 305, "protocol_file_system": 305, "\u6ce8\u518c\u81ea\u5b9a\u4e49\u7684resolv": 305, "\u6211\u4eec\u4e3agraphscope\u7684\u7528\u6237\u51c6\u5907\u4e86\u4e00\u7cfb\u5217\u8be6\u5c3d\u7684\u5165\u95e8\u6559\u7a0b": 306, "\u4ece\u8fd9\u4e9b\u5165\u95e8\u6559\u7a0b\u4e2d\u4f60\u53ef\u4ee5\u4e86\u89e3\u5230\u5982\u4f55\u542f\u52a8\u4e00\u4e2agraphscope\u4f1a\u8bdd": 306, "\u5982\u4f55\u8f7d\u56fe": 306, "\u4ee5\u53ca\u5982\u4f55\u5206\u522b": 306, "\u4f7f\u7528graphscope\u4e2d\u7684ga": 306, "gle\u5f15\u64ce\u6765\u5b8c\u6210\u56fe\u5206\u6790\u4efb\u52a1": 306, "\u4ea4\u4e92\u5f0f\u67e5\u8be2\u548c\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8bad\u7ec3": 306, "\u6211\u4eec\u7528jupyt": 306, "notebook\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u6559\u7a0b": 306, "\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u4e00\u4e2ajupyt": 306, "notebook\u670d\u52a1\u4e2d\u5c1d\u8bd5\u6267\u884c": 306, "\u6211\u4eec\u8fd8\u63d0\u4f9b\u4e86\u5df2\u7ecf\u51c6\u5907\u597d\u7684jupyt": 306, "lab": 306, "\u73af\u5883": 306, "\u4ee5\u4fbf\u4e8e\u7528\u6237\u66f4\u5feb\u5730\u4e0a\u624bgraphscop": 306, "\u5165\u95e8\u6559\u7a0b\u5305\u62ec\u5982\u4e0b\u8fd9\u4e9b\u5185\u5bb9": 306}, "objects": {"": [[60, 0, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase"], [60, 1, 1, "_CPPv4N2gs7AppBase7AppBaseEv", "gs::AppBase::AppBase"], [60, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::CONTEXT_T"], [60, 2, 1, "_CPPv4I00EN2gs7AppBaseE", "gs::AppBase::FRAG_T"], [60, 1, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval"], [60, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::context"], [60, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::graph"], [60, 3, 1, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::IncEval::messages"], [60, 1, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval"], [60, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::context"], [60, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::graph"], [60, 3, 1, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::AppBase::PEval::messages"], [60, 4, 1, "_CPPv4N2gs7AppBase13load_strategyE", "gs::AppBase::load_strategy"], [60, 5, 1, "_CPPv4N2gs7AppBase17message_manager_tE", "gs::AppBase::message_manager_t"], [60, 4, 1, "_CPPv4N2gs7AppBase16message_strategyE", "gs::AppBase::message_strategy"], [60, 4, 1, "_CPPv4N2gs7AppBase16need_split_edgesE", "gs::AppBase::need_split_edges"], [60, 1, 1, "_CPPv4N2gs7AppBaseD0Ev", "gs::AppBase::~AppBase"], [60, 0, 1, "_CPPv4N2gs8AppEntryE", "gs::AppEntry"], [60, 1, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry"], [60, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::id"], [60, 3, 1, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE", "gs::AppEntry::AppEntry::lib_path"], [60, 1, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker"], [60, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::comm_spec"], [60, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::fragment"], [60, 3, 1, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::AppEntry::CreateWorker::spec"], [60, 1, 1, "_CPPv4N2gs8AppEntry4InitEv", "gs::AppEntry::Init"], [60, 1, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query"], [60, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::context_key"], [60, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::frag_wrapper"], [60, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::query_args"], [60, 3, 1, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE", "gs::AppEntry::Query::worker_handler"], [60, 0, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt"], [60, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::FunctionType"], [60, 2, 1, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE", "gs::ArgTypeAt::index"], [60, 0, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum"], [60, 2, 1, "_CPPv4I0EN2gs7ArgsNumE", "gs::ArgsNum::FunctionType"], [60, 0, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker"], [60, 2, 1, "_CPPv4I0EN2gs12ArgsUnpackerE", "gs::ArgsUnpacker::T"], [60, 0, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragment::frag_id"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE", "gs::ArrowFragmentLoader::AddLabelsToFragmentAsFragmentGroup::frag_id"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::client"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::comm_spec"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::directed"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::efiles"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::generate_eid"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE", "gs::ArrowFragmentLoader::ArrowFragmentLoader::graph_info"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::retain_oid"], [60, 3, 1, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb", "gs::ArrowFragmentLoader::ArrowFragmentLoader::vfiles"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv", "gs::ArrowFragmentLoader::LoadEdgeTables"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv", "gs::ArrowFragmentLoader::LoadFragment"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv", "gs::ArrowFragmentLoader::LoadFragmentAsFragmentGroup"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv", "gs::ArrowFragmentLoader::LoadVertexEdgeTables"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv", "gs::ArrowFragmentLoader::LoadVertexTables"], [60, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::OID_T"], [60, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VERTEX_MAP_T"], [60, 2, 1, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE", "gs::ArrowFragmentLoader::VID_T"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv", "gs::ArrowFragmentLoader::initPartitioner"], [60, 1, 1, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev", "gs::ArrowFragmentLoader::~ArrowFragmentLoader"], [60, 0, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedFragment::Construct::meta"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv", "gs::ArrowProjectedFragment::Create"], [60, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::EDATA_T"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t", "gs::ArrowProjectedFragment::GetData::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv", "gs::ArrowProjectedFragment::GetEdgeNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t", "gs::ArrowProjectedFragment::GetFragId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t", "gs::ArrowProjectedFragment::GetId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv", "gs::ArrowProjectedFragment::GetInEdgeNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::src_fid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetIncomingAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv", "gs::ArrowProjectedFragment::GetIncomingEdgeNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingInnerVertexAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetIncomingOuterVertexAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::oid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexGid::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInnerVertexInternalId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv", "gs::ArrowProjectedFragment::GetInnerVerticesNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetInternalId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalInDegree::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t", "gs::ArrowProjectedFragment::GetLocalOutDegree::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv", "gs::ArrowProjectedFragment::GetOutEdgeNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::oid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexGid::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t", "gs::ArrowProjectedFragment::GetOuterVertexInternalId::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv", "gs::ArrowProjectedFragment::GetOuterVerticesNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::dst_fid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t", "gs::ArrowProjectedFragment::GetOutgoingAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv", "gs::ArrowProjectedFragment::GetOutgoingEdgeNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingInnerVertexAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t", "gs::ArrowProjectedFragment::GetOutgoingOuterVertexAdjList::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv", "gs::ArrowProjectedFragment::GetTotalVerticesNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::oid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t", "gs::ArrowProjectedFragment::GetVertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv", "gs::ArrowProjectedFragment::GetVerticesNum"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t", "gs::ArrowProjectedFragment::Gid2Oid::gid"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::Gid2Vertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IEDests::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t", "gs::ArrowProjectedFragment::IOEDests::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::InnerVertexGid2Vertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv", "gs::ArrowProjectedFragment::InnerVertices"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsInnerVertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t", "gs::ArrowProjectedFragment::IsOuterVertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t", "gs::ArrowProjectedFragment::MirrorVertices::fid"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t", "gs::ArrowProjectedFragment::OEDests::v"], [60, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::OID_T"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t", "gs::ArrowProjectedFragment::Oid2Gid::oid"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t", "gs::ArrowProjectedFragment::OuterVertexGid2Vertex::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv", "gs::ArrowProjectedFragment::OuterVertices"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t", "gs::ArrowProjectedFragment::OuterVertices::fid"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::comm_spec"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE", "gs::ArrowProjectedFragment::PrepareToRunApp::conf"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_label"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::e_prop"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::fragment"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_label"], [60, 3, 1, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t", "gs::ArrowProjectedFragment::Project::v_prop"], [60, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VDATA_T"], [60, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VERTEX_MAP_T"], [60, 2, 1, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE", "gs::ArrowProjectedFragment::VID_T"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid"], [60, 3, 1, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t", "gs::ArrowProjectedFragment::Vertex2Gid::v"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv", "gs::ArrowProjectedFragment::Vertices"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE", "gs::ArrowProjectedFragment::adj_list_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE", "gs::ArrowProjectedFragment::const_adj_list_t"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv", "gs::ArrowProjectedFragment::directed"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE", "gs::ArrowProjectedFragment::edata_t"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv", "gs::ArrowProjectedFragment::edge_label"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv", "gs::ArrowProjectedFragment::edge_prop_id"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE", "gs::ArrowProjectedFragment::eid_array_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE", "gs::ArrowProjectedFragment::eid_t"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv", "gs::ArrowProjectedFragment::fid"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv", "gs::ArrowProjectedFragment::fnum"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv", "gs::ArrowProjectedFragment::get_arrow_fragment"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv", "gs::ArrowProjectedFragment::get_edata_array_accessor"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_begin_ptr"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_ie_offsets_end_ptr"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv", "gs::ArrowProjectedFragment::get_in_edges_ptr"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_begin_ptr"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv", "gs::ArrowProjectedFragment::get_oe_offsets_end_ptr"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv", "gs::ArrowProjectedFragment::get_out_edges_ptr"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv", "gs::ArrowProjectedFragment::get_vdata_array_accessor"], [60, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t"], [60, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE", "gs::ArrowProjectedFragment::inner_vertex_array_t::DATA_T"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE", "gs::ArrowProjectedFragment::inner_vertices_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE", "gs::ArrowProjectedFragment::internal_oid_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE", "gs::ArrowProjectedFragment::label_id_t"], [60, 4, 1, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE", "gs::ArrowProjectedFragment::load_strategy"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE", "gs::ArrowProjectedFragment::nbr_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE", "gs::ArrowProjectedFragment::nbr_unit_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE", "gs::ArrowProjectedFragment::oid_t"], [60, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t"], [60, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE", "gs::ArrowProjectedFragment::outer_vertex_array_t::DATA_T"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE", "gs::ArrowProjectedFragment::outer_vertices_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE", "gs::ArrowProjectedFragment::prop_id_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE", "gs::ArrowProjectedFragment::property_graph_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE", "gs::ArrowProjectedFragment::property_vertex_map_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE", "gs::ArrowProjectedFragment::sub_vertices_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE", "gs::ArrowProjectedFragment::vdata_t"], [60, 5, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t"], [60, 2, 1, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE", "gs::ArrowProjectedFragment::vertex_array_t::DATA_T"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv", "gs::ArrowProjectedFragment::vertex_label"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE", "gs::ArrowProjectedFragment::vertex_map_t"], [60, 1, 1, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv", "gs::ArrowProjectedFragment::vertex_prop_id"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE", "gs::ArrowProjectedFragment::vertex_range_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE", "gs::ArrowProjectedFragment::vertex_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE", "gs::ArrowProjectedFragment::vertices_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE", "gs::ArrowProjectedFragment::vid_array_t"], [60, 5, 1, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE", "gs::ArrowProjectedFragment::vid_t"], [60, 1, 1, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev", "gs::ArrowProjectedFragment::~ArrowProjectedFragment"], [60, 0, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap"], [60, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct"], [60, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE", "gs::ArrowProjectedVertexMap::Construct::meta"], [60, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv", "gs::ArrowProjectedVertexMap::Create"], [60, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [60, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::fid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::gid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t", "gs::ArrowProjectedVertexMap::GetGid::oid"], [60, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::gid"], [60, 3, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t", "gs::ArrowProjectedVertexMap::GetOid::oid"], [60, 1, 1, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv", "gs::ArrowProjectedVertexMap::GetTotalVerticesNum"], [60, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::OID_T"], [60, 1, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project"], [60, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::v_label"], [60, 3, 1, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t", "gs::ArrowProjectedVertexMap::Project::vm"], [60, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VERTEX_MAP_T"], [60, 2, 1, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE", "gs::ArrowProjectedVertexMap::VID_T"], [60, 0, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder"], [60, 2, 1, "_CPPv4I00EN2gs17CtxWrapperBuilderE", "gs::CtxWrapperBuilder::CTX_T"], [60, 0, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker"], [60, 2, 1, "_CPPv4I0EN2gs21DefaultPropertyWorkerE", "gs::DefaultPropertyWorker::APP_T"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker"], [60, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::app"], [60, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultPropertyWorker::DefaultPropertyWorker::graph"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv", "gs::DefaultPropertyWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv", "gs::DefaultPropertyWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init"], [60, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultPropertyWorker::Init::pe_spec"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output"], [60, 3, 1, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE", "gs::DefaultPropertyWorker::Output::os"], [60, 1, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query"], [60, 2, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::Args"], [60, 3, 1, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args", "gs::DefaultPropertyWorker::Query::args"], [60, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker9context_tE", "gs::DefaultPropertyWorker::context_t"], [60, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE", "gs::DefaultPropertyWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE", "gs::DefaultPropertyWorker::message_manager_t"], [60, 1, 1, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev", "gs::DefaultPropertyWorker::~DefaultPropertyWorker"], [60, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [60, 0, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker"], [60, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [60, 2, 1, "_CPPv4I0EN2gs13DefaultWorkerE", "gs::DefaultWorker::APP_T"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::app"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::DefaultWorker::DefaultWorker::graph"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker8FinalizeEv", "gs::DefaultWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker10GetContextEv", "gs::DefaultWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::DefaultWorker::Init::pe_spec"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [60, 1, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [60, 3, 1, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE", "gs::DefaultWorker::Output::os"], [60, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [60, 1, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query"], [60, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [60, 2, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::Args"], [60, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [60, 3, 1, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args", "gs::DefaultWorker::Query::args"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker9context_tE", "gs::DefaultWorker::context_t"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker10fragment_tE", "gs::DefaultWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [60, 5, 1, "_CPPv4N2gs13DefaultWorker17message_manager_tE", "gs::DefaultWorker::message_manager_t"], [60, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [60, 1, 1, "_CPPv4N2gs13DefaultWorkerD0Ev", "gs::DefaultWorker::~DefaultWorker"], [60, 0, 1, "_CPPv4N2gs14DispatchResultE", "gs::DispatchResult"], [60, 6, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicyE", "gs::DispatchResult::AggregatePolicy"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::AggregatePolicy::kConcat"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::AggregatePolicy::kMergeGraphDef"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::AggregatePolicy::kPickFirst"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmpty"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::AggregatePolicy::kPickFirstNonEmptyGraphDef"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::AggregatePolicy::kRequireConsistent"], [60, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult"], [60, 1, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEv", "gs::DispatchResult::DispatchResult"], [60, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::error_code"], [60, 3, 1, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE", "gs::DispatchResult::DispatchResult::worker_id"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv", "gs::DispatchResult::aggregate_policy"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult4dataEv", "gs::DispatchResult::data"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult10error_codeEv", "gs::DispatchResult::error_code"], [60, 1, 1, "_CPPv4N2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult9graph_defEv", "gs::DispatchResult::graph_def"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult14has_large_dataEv", "gs::DispatchResult::has_large_data"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE", "gs::DispatchResult::kConcat"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE", "gs::DispatchResult::kMergeGraphDef"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE", "gs::DispatchResult::kPickFirst"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE", "gs::DispatchResult::kPickFirstNonEmpty"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE", "gs::DispatchResult::kPickFirstNonEmptyGraphDef"], [60, 7, 1, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE", "gs::DispatchResult::kRequireConsistent"], [60, 1, 1, "_CPPv4N2gs14DispatchResult7messageEv", "gs::DispatchResult::message"], [60, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data"], [60, 1, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::arc"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::data"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::large_data"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [60, 3, 1, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb", "gs::DispatchResult::set_data::policy"], [60, 1, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error"], [60, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::error_code"], [60, 3, 1, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE", "gs::DispatchResult::set_error::message"], [60, 1, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def"], [60, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::graph_def"], [60, 3, 1, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy", "gs::DispatchResult::set_graph_def::policy"], [60, 1, 1, "_CPPv4NK2gs14DispatchResult9worker_idEv", "gs::DispatchResult::worker_id"], [60, 0, 1, "_CPPv4N2gs10DispatcherE", "gs::Dispatcher"], [60, 1, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch"], [60, 3, 1, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::Dispatch::cmd"], [60, 1, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher"], [60, 3, 1, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE", "gs::Dispatcher::Dispatcher::comm_spec"], [60, 1, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand"], [60, 3, 1, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE", "gs::Dispatcher::SetCommand::cmd"], [60, 1, 1, "_CPPv4N2gs10Dispatcher5StartEv", "gs::Dispatcher::Start"], [60, 1, 1, "_CPPv4N2gs10Dispatcher4StopEv", "gs::Dispatcher::Stop"], [60, 1, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe"], [60, 3, 1, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE", "gs::Dispatcher::Subscribe::subscriber"], [60, 0, 1, "_CPPv4N2gs12EngineConfigE", "gs::EngineConfig"], [60, 1, 1, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv", "gs::EngineConfig::ToJsonString"], [60, 4, 1, "_CPPv4N2gs12EngineConfig15enable_java_sdkE", "gs::EngineConfig::enable_java_sdk"], [60, 4, 1, "_CPPv4N2gs12EngineConfig8networkxE", "gs::EngineConfig::networkx"], [60, 4, 1, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE", "gs::EngineConfig::vineyard_rpc_endpoint"], [60, 4, 1, "_CPPv4N2gs12EngineConfig15vineyard_socketE", "gs::EngineConfig::vineyard_socket"], [60, 0, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper"], [60, 2, 1, "_CPPv4I0EN2gs15FragmentWrapperE", "gs::FragmentWrapper::FRAG_T"], [60, 0, 1, "_CPPv4N2gs8GSObjectE", "gs::GSObject"], [60, 1, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject"], [60, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::id"], [60, 3, 1, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType", "gs::GSObject::GSObject::type"], [60, 1, 1, "_CPPv4NK2gs8GSObject8ToStringEv", "gs::GSObject::ToString"], [60, 1, 1, "_CPPv4NK2gs8GSObject2idEv", "gs::GSObject::id"], [60, 1, 1, "_CPPv4NK2gs8GSObject4typeEv", "gs::GSObject::type"], [60, 1, 1, "_CPPv4N2gs8GSObjectD0Ev", "gs::GSObject::~GSObject"], [60, 0, 1, "_CPPv4N2gs11GrapeEngineE", "gs::GrapeEngine"], [60, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine"], [60, 1, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine"], [60, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE", "gs::GrapeEngine::GrapeEngine::dag_file"], [60, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::host"], [60, 3, 1, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi", "gs::GrapeEngine::GrapeEngine::port"], [60, 1, 1, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv", "gs::GrapeEngine::RunDAGFile"], [60, 1, 1, "_CPPv4N2gs11GrapeEngine5StartEv", "gs::GrapeEngine::Start"], [60, 1, 1, "_CPPv4N2gs11GrapeEngine4StopEv", "gs::GrapeEngine::Stop"], [60, 0, 1, "_CPPv4N2gs13GrapeInstanceE", "gs::GrapeInstance"], [60, 1, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance"], [60, 3, 1, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE", "gs::GrapeInstance::GrapeInstance::comm_spec"], [60, 1, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init"], [60, 3, 1, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE", "gs::GrapeInstance::Init::vineyard_socket"], [60, 1, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive"], [60, 3, 1, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE", "gs::GrapeInstance::OnReceive::cmd"], [60, 0, 1, "_CPPv4N2gs13ObjectManagerE", "gs::ObjectManager"], [60, 1, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject"], [60, 1, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject"], [60, 2, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::T"], [60, 3, 1, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [60, 3, 1, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE", "gs::ObjectManager::GetObject::id"], [60, 1, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject"], [60, 3, 1, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE", "gs::ObjectManager::HasObject::id"], [60, 1, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject"], [60, 3, 1, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE", "gs::ObjectManager::PutObject::obj"], [60, 1, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject"], [60, 3, 1, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE", "gs::ObjectManager::RemoveObject::id"], [60, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [60, 0, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker"], [60, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [60, 2, 1, "_CPPv4I0EN2gs22ParallelPropertyWorkerE", "gs::ParallelPropertyWorker::APP_T"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv", "gs::ParallelPropertyWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv", "gs::ParallelPropertyWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::ParallelPropertyWorker::Init::pe_spec"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE", "gs::ParallelPropertyWorker::Output::os"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::app"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [60, 3, 1, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::ParallelPropertyWorker::ParallelPropertyWorker::graph"], [60, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [60, 1, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query"], [60, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [60, 2, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::Args"], [60, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [60, 3, 1, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args", "gs::ParallelPropertyWorker::Query::args"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker9context_tE", "gs::ParallelPropertyWorker::context_t"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE", "gs::ParallelPropertyWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [60, 5, 1, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE", "gs::ParallelPropertyWorker::message_manager_t"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [60, 1, 1, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev", "gs::ParallelPropertyWorker::~ParallelPropertyWorker"], [60, 0, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase"], [60, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::CONTEXT_T"], [60, 2, 1, "_CPPv4I00EN2gs15PropertyAppBaseE", "gs::PropertyAppBase::FRAG_T"], [60, 1, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::context"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::graph"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::IncEval::messages"], [60, 1, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::context"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::graph"], [60, 3, 1, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t", "gs::PropertyAppBase::PEval::messages"], [60, 1, 1, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv", "gs::PropertyAppBase::PropertyAppBase"], [60, 4, 1, "_CPPv4N2gs15PropertyAppBase13load_strategyE", "gs::PropertyAppBase::load_strategy"], [60, 5, 1, "_CPPv4N2gs15PropertyAppBase17message_manager_tE", "gs::PropertyAppBase::message_manager_t"], [60, 4, 1, "_CPPv4N2gs15PropertyAppBase16message_strategyE", "gs::PropertyAppBase::message_strategy"], [60, 4, 1, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE", "gs::PropertyAppBase::need_split_edges"], [60, 1, 1, "_CPPv4N2gs15PropertyAppBaseD0Ev", "gs::PropertyAppBase::~PropertyAppBase"], [60, 0, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase"], [60, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::CONTEXT_T"], [60, 2, 1, "_CPPv4I00EN2gs19PropertyAutoAppBaseE", "gs::PropertyAutoAppBase::FRAG_T"], [60, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval"], [60, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::context"], [60, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::IncEval::graph"], [60, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval"], [60, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::context"], [60, 3, 1, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T", "gs::PropertyAutoAppBase::PEval::graph"], [60, 1, 1, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv", "gs::PropertyAutoAppBase::PropertyAutoAppBase"], [60, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE", "gs::PropertyAutoAppBase::load_strategy"], [60, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE", "gs::PropertyAutoAppBase::message_strategy"], [60, 4, 1, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE", "gs::PropertyAutoAppBase::need_split_edges"], [60, 1, 1, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev", "gs::PropertyAutoAppBase::~PropertyAutoAppBase"], [60, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [60, 0, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker"], [60, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [60, 2, 1, "_CPPv4I0EN2gs18PropertyAutoWorkerE", "gs::PropertyAutoWorker::APP_T"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv", "gs::PropertyAutoWorker::Finalize"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv", "gs::PropertyAutoWorker::GetContext"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::comm_spec"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE", "gs::PropertyAutoWorker::Init::pe_spec"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE", "gs::PropertyAutoWorker::Output::os"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::app"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [60, 3, 1, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE", "gs::PropertyAutoWorker::PropertyAutoWorker::graph"], [60, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [60, 1, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query"], [60, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [60, 2, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::Args"], [60, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [60, 3, 1, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args", "gs::PropertyAutoWorker::Query::args"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker9context_tE", "gs::PropertyAutoWorker::context_t"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE", "gs::PropertyAutoWorker::fragment_t"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [60, 5, 1, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE", "gs::PropertyAutoWorker::message_manager_t"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [60, 1, 1, "_CPPv4N2gs18PropertyAutoWorkerD0Ev", "gs::PropertyAutoWorker::~PropertyAutoWorker"], [60, 0, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext"], [60, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::DATA_T"], [60, 2, 1, "_CPPv4I00EN2gs13TensorContextE", "gs::TensorContext::FRAG_T"], [60, 1, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext"], [60, 3, 1, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t", "gs::TensorContext::TensorContext::fragment"], [60, 1, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign"], [60, 1, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign"], [60, 3, 1, "_CPPv4N2gs13TensorContext6assignERK6data_t", "gs::TensorContext::assign::data"], [60, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::data"], [60, 3, 1, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE", "gs::TensorContext::assign::shape"], [60, 5, 1, "_CPPv4N2gs13TensorContext6data_tE", "gs::TensorContext::data_t"], [60, 1, 1, "_CPPv4N2gs13TensorContext8fragmentEv", "gs::TensorContext::fragment"], [60, 1, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape"], [60, 3, 1, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE", "gs::TensorContext::set_shape::shape"], [60, 1, 1, "_CPPv4NK2gs13TensorContext5shapeEv", "gs::TensorContext::shape"], [60, 1, 1, "_CPPv4N2gs13TensorContext6tensorEv", "gs::TensorContext::tensor"], [60, 0, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper"], [60, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::DATA_T"], [60, 2, 1, "_CPPv4I000EN2gs20TensorContextWrapperE", "gs::TensorContextWrapper::FRAG_T"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::ctx"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::frag_wrapper"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::TensorContextWrapper::TensorContextWrapper::id"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::comm_spec"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::TensorContextWrapper::ToArrowArrays::selectors"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE", "gs::TensorContextWrapper::ToDataframe::comm_spec"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::axis"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t", "gs::TensorContextWrapper::ToNdArray::comm_spec"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::client"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE", "gs::TensorContextWrapper::ToVineyardDataframe::comm_spec"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::axis"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::client"], [60, 3, 1, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t", "gs::TensorContextWrapper::ToVineyardTensor::comm_spec"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper12context_typeEv", "gs::TensorContextWrapper::context_type"], [60, 1, 1, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv", "gs::TensorContextWrapper::fragment_wrapper"], [60, 0, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper"], [60, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::DATA_T"], [60, 2, 1, "_CPPv4I00EN2gs24VertexDataContextWrapperE", "gs::VertexDataContextWrapper::FRAG_T"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::comm_spec"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE", "gs::VertexDataContextWrapper::ToArrowArrays::selectors"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::comm_spec"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::range"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToDataframe::selectors"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::comm_spec"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::range"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToNdArray::selector"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::client"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::comm_spec"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::range"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardDataframe::selectors"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::client"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::comm_spec"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::range"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE", "gs::VertexDataContextWrapper::ToVineyardTensor::selector"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::ctx"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::frag_wrapper"], [60, 3, 1, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE", "gs::VertexDataContextWrapper::VertexDataContextWrapper::id"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv", "gs::VertexDataContextWrapper::context_type"], [60, 1, 1, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv", "gs::VertexDataContextWrapper::fragment_wrapper"], [60, 0, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext"], [60, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContextE", "gs::VertexPropertyContext::FRAG_T"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext"], [60, 3, 1, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t", "gs::VertexPropertyContext::VertexPropertyContext::fragment"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column"], [60, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::name"], [60, 3, 1, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType", "gs::VertexPropertyContext::add_column::type"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext8fragmentEv", "gs::VertexPropertyContext::fragment"], [60, 5, 1, "_CPPv4N2gs21VertexPropertyContext10fragment_tE", "gs::VertexPropertyContext::fragment_t"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column"], [60, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t", "gs::VertexPropertyContext::get_column::index"], [60, 3, 1, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE", "gs::VertexPropertyContext::get_column::name"], [60, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column"], [60, 1, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column"], [60, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [60, 2, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::DATA_T"], [60, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t", "gs::VertexPropertyContext::get_typed_column::index"], [60, 3, 1, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE", "gs::VertexPropertyContext::get_typed_column::name"], [60, 5, 1, "_CPPv4N2gs21VertexPropertyContext5oid_tE", "gs::VertexPropertyContext::oid_t"], [60, 5, 1, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE", "gs::VertexPropertyContext::prop_id_t"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv", "gs::VertexPropertyContext::properties_map"], [60, 1, 1, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv", "gs::VertexPropertyContext::vertex_properties"], [60, 5, 1, "_CPPv4N2gs21VertexPropertyContext8vertex_tE", "gs::VertexPropertyContext::vertex_t"], [60, 0, 1, "_CPPv4N2gs3rpc16AnalyticalServerE", "gs::rpc::AnalyticalServer"], [60, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer"], [60, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::dispatcher"], [60, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::host"], [60, 3, 1, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi", "gs::rpc::AnalyticalServer::AnalyticalServer::port"], [60, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv", "gs::rpc::AnalyticalServer::StartServer"], [60, 1, 1, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv", "gs::rpc::AnalyticalServer::StopServer"]], "graphscope": [[279, 8, 1, "", "Session"], [66, 11, 1, "", "Vertex"], [61, 12, 1, "", "attribute_assortativity_coefficient"], [61, 12, 1, "", "average_degree_connectivity"], [61, 12, 1, "", "average_shortest_path_length"], [61, 12, 1, "", "avg_clustering"], [61, 12, 1, "", "bfs"], [61, 12, 1, "", "cdlp"], [61, 12, 1, "", "clustering"], [67, 12, 1, "", "declare"], [61, 12, 1, "", "degree_assortativity_coefficient"], [61, 12, 1, "", "degree_centrality"], [61, 12, 1, "", "eigenvector_centrality"], [112, 12, 1, "", "g"], [113, 12, 1, "", "get_default_session"], [114, 12, 1, "", "get_option"], [115, 12, 1, "", "graphlearn"], [116, 12, 1, "", "gremlin"], [117, 12, 1, "", "has_default_session"], [61, 12, 1, "", "hits"], [61, 12, 1, "", "is_simple_path"], [61, 12, 1, "", "k_core"], [61, 12, 1, "", "k_shell"], [61, 12, 1, "", "katz_centrality"], [61, 12, 1, "", "louvain"], [61, 12, 1, "", "lpa"], [61, 12, 1, "", "lpa_u2i"], [61, 12, 1, "", "numeric_assortativity_coefficient"], [61, 12, 1, "", "pagerank"], [61, 12, 1, "", "pagerank_nx"], [118, 14, 1, "", "session"], [119, 12, 1, "", "set_option"], [61, 12, 1, "", "sssp"], [61, 12, 1, "", "triangles"], [61, 12, 1, "", "voterank"], [61, 12, 1, "", "wcc"]], "graphscope.Session": [[279, 9, 1, "", "__enter__"], [279, 9, 1, "", "__exit__"], [279, 9, 1, "", "__init__"], [279, 9, 1, "", "add_lib"], [279, 9, 1, "", "as_default"], [279, 9, 1, "", "close"], [279, 9, 1, "", "connected"], [279, 10, 1, "", "engine_config"], [279, 9, 1, "", "get_config"], [279, 9, 1, "", "graphlearn"], [279, 9, 1, "", "gremlin"], [279, 10, 1, "", "info"], [279, 9, 1, "", "learning"], [279, 9, 1, "", "load_from"], [279, 9, 1, "", "run_fetches"]], "graphscope.analytical.app": [[61, 8, 1, "", "JavaApp"]], "graphscope.analytical.app.JavaApp": [[61, 9, 1, "", "__call__"], [61, 9, 1, "", "__init__"], [61, 9, 1, "", "is_compatible"], [61, 9, 1, "", "signature"]], "graphscope.framework.app": [[61, 8, 1, "", "App"], [61, 8, 1, "", "AppAssets"], [61, 8, 1, "", "AppDAGNode"], [68, 12, 1, "", "load_app"]], "graphscope.framework.app.App": [[61, 9, 1, "", "__del__"], [61, 9, 1, "", "__init__"], [61, 10, 1, "", "key"], [61, 10, 1, "", "signature"]], "graphscope.framework.app.AppAssets": [[61, 9, 1, "", "__init__"], [61, 10, 1, "", "algo"], [61, 10, 1, "", "context_type"], [61, 10, 1, "", "gar"], [61, 9, 1, "", "is_compatible"], [61, 10, 1, "", "signature"], [61, 10, 1, "", "type"]], "graphscope.framework.context": [[62, 8, 1, "", "BaseContextDAGNode"], [62, 8, 1, "", "Context"], [62, 8, 1, "", "DynamicVertexDataContext"], [62, 8, 1, "", "LabeledVertexDataContextDAGNode"], [62, 8, 1, "", "LabeledVertexPropertyContextDAGNode"], [62, 8, 1, "", "ResultDAGNode"], [62, 8, 1, "", "TensorContextDAGNode"], [62, 8, 1, "", "VertexDataContextDAGNode"], [62, 8, 1, "", "VertexPropertyContextDAGNode"]], "graphscope.framework.context.BaseContextDAGNode": [[62, 9, 1, "", "to_dataframe"], [62, 9, 1, "", "to_numpy"], [62, 9, 1, "", "to_vineyard_dataframe"], [62, 9, 1, "", "to_vineyard_tensor"]], "graphscope.framework": [[276, 13, 0, "-", "dag_utils"]], "graphscope.framework.dag_utils": [[69, 12, 1, "", "add_column"], [70, 12, 1, "", "add_labels_to_graph"], [71, 12, 1, "", "arrow_to_dynamic"], [72, 12, 1, "", "bind_app"], [73, 12, 1, "", "clear_edges"], [74, 12, 1, "", "clear_graph"], [75, 12, 1, "", "context_to_dataframe"], [76, 12, 1, "", "context_to_numpy"], [77, 12, 1, "", "copy_graph"], [78, 12, 1, "", "create_app"], [79, 12, 1, "", "create_graph"], [80, 12, 1, "", "create_graph_view"], [81, 12, 1, "", "create_loader"], [82, 12, 1, "", "create_subgraph"], [83, 12, 1, "", "create_unload_op"], [84, 12, 1, "", "dynamic_to_arrow"], [85, 12, 1, "", "fetch_gremlin_result"], [86, 12, 1, "", "get_context_data"], [87, 12, 1, "", "graph_to_dataframe"], [88, 12, 1, "", "graph_to_numpy"], [89, 12, 1, "", "gremlin_query"], [90, 12, 1, "", "gremlin_to_subgraph"], [91, 12, 1, "", "modify_edges"], [92, 12, 1, "", "modify_vertices"], [93, 12, 1, "", "output"], [94, 12, 1, "", "project_arrow_property_graph"], [95, 12, 1, "", "project_to_simple"], [96, 12, 1, "", "report_graph"], [97, 12, 1, "", "run_app"], [98, 12, 1, "", "to_data_sink"], [99, 12, 1, "", "to_directed"], [100, 12, 1, "", "to_undirected"], [101, 12, 1, "", "to_vineyard_dataframe"], [102, 12, 1, "", "to_vineyard_tensor"], [103, 12, 1, "", "unload_app"], [104, 12, 1, "", "unload_context"], [105, 12, 1, "", "unload_graph"]], "graphscope.framework.graph": [[134, 8, 1, "", "Graph"], [134, 8, 1, "", "GraphDAGNode"]], "graphscope.framework.graph.Graph": [[134, 9, 1, "", "__init__"], [134, 9, 1, "", "detach"], [134, 10, 1, "", "key"], [134, 9, 1, "", "load_from"], [134, 9, 1, "", "loaded"], [134, 9, 1, "", "save_to"], [134, 10, 1, "", "schema"], [134, 10, 1, "", "schema_path"], [134, 10, 1, "", "session_id"], [134, 9, 1, "", "to_dataframe"], [134, 9, 1, "", "to_directed"], [134, 9, 1, "", "to_numpy"], [134, 9, 1, "", "to_undirected"], [134, 10, 1, "", "vineyard_id"]], "graphscope.framework.graph.GraphDAGNode": [[134, 9, 1, "", "__init__"], [134, 9, 1, "", "add_column"], [134, 9, 1, "", "add_edges"], [134, 9, 1, "", "add_vertices"], [134, 9, 1, "", "project"]], "graphscope.framework.graph_builder": [[134, 12, 1, "", "load_from"]], "graphscope.framework.loader": [[134, 8, 1, "", "Loader"]], "graphscope.framework.loader.Loader": [[134, 9, 1, "", "__init__"]], "graphscope.framework.operation": [[276, 8, 1, "", "Operation"]], "graphscope.framework.operation.Operation": [[106, 9, 1, "", "__init__"], [107, 9, 1, "", "as_op_def"], [108, 9, 1, "", "eval"], [109, 10, 1, "", "evaluated"], [110, 10, 1, "", "key"], [111, 10, 1, "", "signature"]], "graphscope.interactive.query": [[135, 8, 1, "", "InteractiveQuery"]], "graphscope.interactive.query.InteractiveQuery": [[135, 9, 1, "", "__init__"], [135, 9, 1, "", "close"], [135, 9, 1, "", "execute"], [135, 10, 1, "", "graph_url"], [135, 10, 1, "", "object_id"], [135, 10, 1, "", "session"], [135, 10, 1, "", "session_id"], [135, 9, 1, "", "subgraph"], [135, 9, 1, "", "submit"], [135, 9, 1, "", "traversal_source"]], "graphscope.learning.graph": [[136, 8, 1, "", "Graph"]], "graphscope.learning.graph.Graph": [[136, 9, 1, "", "E"], [136, 9, 1, "", "V"], [136, 9, 1, "", "__init__"], [136, 9, 1, "", "get_handle"]], "graphscope.nx": [[272, 8, 1, "", "DiGraph"], [272, 8, 1, "", "Graph"], [274, 12, 1, "", "read_adjlist"], [274, 12, 1, "", "read_edgelist"]], "graphscope.nx.DiGraph": [[272, 9, 1, "", "__contains__"], [272, 9, 1, "", "__getitem__"], [272, 9, 1, "", "__init__"], [272, 9, 1, "", "__iter__"], [272, 9, 1, "", "__len__"], [272, 9, 1, "", "add_edge"], [272, 9, 1, "", "add_edges_from"], [272, 9, 1, "", "add_node"], [272, 9, 1, "", "add_nodes_from"], [272, 9, 1, "", "add_weighted_edges_from"], [272, 10, 1, "", "adj"], [272, 9, 1, "", "adjacency"], [272, 14, 1, "", "adjlist_inner_dict_factory"], [272, 14, 1, "", "adjlist_outer_dict_factory"], [272, 9, 1, "", "clear"], [272, 9, 1, "", "clear_edges"], [272, 9, 1, "", "copy"], [272, 10, 1, "", "degree"], [272, 14, 1, "", "edge_attr_dict_factory"], [272, 9, 1, "", "edge_subgraph"], [272, 10, 1, "", "edges"], [272, 9, 1, "", "get_edge_data"], [272, 14, 1, "", "graph_attr_dict_factory"], [272, 14, 1, "", "graph_cache_factory"], [272, 10, 1, "", "graph_type"], [272, 9, 1, "", "has_edge"], [272, 9, 1, "", "has_node"], [272, 9, 1, "", "has_predecessor"], [272, 9, 1, "", "has_successor"], [272, 10, 1, "", "in_degree"], [272, 10, 1, "", "in_edges"], [272, 9, 1, "", "is_directed"], [272, 9, 1, "", "is_multigraph"], [272, 10, 1, "", "key"], [272, 10, 1, "", "name"], [272, 9, 1, "", "nbunch_iter"], [272, 9, 1, "", "neighbors"], [272, 14, 1, "", "node_attr_dict_factory"], [272, 14, 1, "", "node_dict_factory"], [272, 10, 1, "", "nodes"], [272, 9, 1, "", "number_of_edges"], [272, 9, 1, "", "number_of_nodes"], [272, 10, 1, "", "op"], [272, 9, 1, "", "order"], [272, 10, 1, "", "out_degree"], [272, 10, 1, "", "out_edges"], [272, 10, 1, "", "pred"], [272, 9, 1, "", "predecessors"], [272, 9, 1, "", "remove_edge"], [272, 9, 1, "", "remove_edges_from"], [272, 9, 1, "", "remove_node"], [272, 9, 1, "", "remove_nodes_from"], [272, 9, 1, "", "reverse"], [272, 10, 1, "", "schema"], [272, 10, 1, "", "session"], [272, 10, 1, "", "session_id"], [272, 9, 1, "", "set_edge_data"], [272, 9, 1, "", "set_node_data"], [272, 10, 1, "", "signature"], [272, 9, 1, "", "size"], [272, 9, 1, "", "subgraph"], [272, 10, 1, "", "succ"], [272, 9, 1, "", "successors"], [272, 9, 1, "", "to_directed"], [272, 9, 1, "", "to_undirected"], [272, 9, 1, "", "to_undirected_class"], [272, 9, 1, "", "update"]], "graphscope.nx.Graph": [[272, 9, 1, "", "__contains__"], [272, 9, 1, "", "__getitem__"], [275, 12, 1, "", "__init__"], [272, 9, 1, "", "__iter__"], [272, 9, 1, "", "__len__"], [275, 12, 1, "", "_convert_arrow_to_dynamic"], [272, 9, 1, "", "add_edge"], [272, 9, 1, "", "add_edges_from"], [272, 9, 1, "", "add_node"], [272, 9, 1, "", "add_nodes_from"], [272, 9, 1, "", "add_weighted_edges_from"], [272, 10, 1, "", "adj"], [272, 9, 1, "", "adjacency"], [272, 14, 1, "", "adjlist_inner_dict_factory"], [272, 14, 1, "", "adjlist_outer_dict_factory"], [272, 9, 1, "", "clear"], [272, 9, 1, "", "clear_edges"], [272, 9, 1, "", "copy"], [272, 10, 1, "", "degree"], [272, 14, 1, "", "edge_attr_dict_factory"], [272, 9, 1, "", "edge_subgraph"], [272, 10, 1, "", "edges"], [272, 9, 1, "", "get_edge_data"], [272, 14, 1, "", "graph_attr_dict_factory"], [272, 14, 1, "", "graph_cache_factory"], [272, 10, 1, "", "graph_type"], [272, 9, 1, "", "has_edge"], [272, 9, 1, "", "has_node"], [272, 9, 1, "", "is_directed"], [272, 9, 1, "", "is_multigraph"], [272, 10, 1, "", "key"], [272, 10, 1, "", "name"], [272, 9, 1, "", "nbunch_iter"], [272, 9, 1, "", "neighbors"], [272, 14, 1, "", "node_attr_dict_factory"], [272, 14, 1, "", "node_dict_factory"], [272, 10, 1, "", "nodes"], [272, 9, 1, "", "number_of_edges"], [272, 9, 1, "", "number_of_nodes"], [272, 10, 1, "", "op"], [272, 9, 1, "", "order"], [272, 9, 1, "", "remove_edge"], [272, 9, 1, "", "remove_edges_from"], [272, 9, 1, "", "remove_node"], [272, 9, 1, "", "remove_nodes_from"], [272, 10, 1, "", "schema"], [272, 10, 1, "", "session"], [272, 10, 1, "", "session_id"], [272, 9, 1, "", "set_edge_data"], [272, 9, 1, "", "set_node_data"], [272, 10, 1, "", "signature"], [272, 9, 1, "", "size"], [272, 9, 1, "", "subgraph"], [272, 9, 1, "", "to_directed"], [272, 9, 1, "", "to_undirected"], [272, 9, 1, "", "to_undirected_class"], [272, 9, 1, "", "update"]], "graphscope.nx.builtin": [[137, 12, 1, "", "average_clustering"], [137, 12, 1, "", "average_shortest_path_length"], [137, 12, 1, "", "bfs_edges"], [137, 12, 1, "", "clustering"], [137, 12, 1, "", "degree_centrality"], [137, 12, 1, "", "eigenvector_centrality"], [137, 12, 1, "", "has_path"], [137, 12, 1, "", "hits"], [137, 12, 1, "", "in_degree_centrality"], [137, 12, 1, "", "k_core"], [137, 12, 1, "", "katz_centrality"], [137, 12, 1, "", "out_degree_centrality"], [137, 12, 1, "", "triangles"]], "graphscope.nx.classes": [[138, 13, 0, "-", "function"]], "graphscope.nx.classes.function": [[139, 12, 1, "", "add_cycle"], [140, 12, 1, "", "add_path"], [141, 12, 1, "", "add_star"], [142, 12, 1, "", "all_neighbors"], [143, 12, 1, "", "common_neighbors"], [144, 12, 1, "", "create_empty_copy"], [145, 12, 1, "", "degree"], [146, 12, 1, "", "degree_histogram"], [147, 12, 1, "", "density"], [148, 12, 1, "", "edge_subgraph"], [149, 12, 1, "", "edges"], [150, 12, 1, "", "freeze"], [151, 12, 1, "", "induced_subgraph"], [152, 12, 1, "", "info"], [153, 12, 1, "", "is_directed"], [154, 12, 1, "", "is_empty"], [155, 12, 1, "", "is_frozen"], [156, 12, 1, "", "is_negatively_weighted"], [157, 12, 1, "", "is_weighted"], [158, 12, 1, "", "neighbors"], [159, 12, 1, "", "nodes"], [160, 12, 1, "", "nodes_with_selfloops"], [161, 12, 1, "", "non_edges"], [162, 12, 1, "", "non_neighbors"], [163, 12, 1, "", "number_of_edges"], [164, 12, 1, "", "number_of_nodes"], [165, 12, 1, "", "number_of_selfloops"], [166, 12, 1, "", "selfloop_edges"], [167, 12, 1, "", "subgraph"], [168, 12, 1, "", "to_directed"], [169, 12, 1, "", "to_undirected"]], "graphscope.nx.generators": [[271, 13, 0, "-", "atlas"], [271, 13, 0, "-", "classic"], [271, 13, 0, "-", "community"], [271, 13, 0, "-", "degree_seq"], [271, 13, 0, "-", "directed"], [271, 13, 0, "-", "duplication"], [271, 13, 0, "-", "ego"], [271, 13, 0, "-", "expanders"], [271, 13, 0, "-", "geometric"], [271, 13, 0, "-", "harary_graph"], [271, 13, 0, "-", "intersection"], [271, 13, 0, "-", "joint_degree_seq"], [271, 13, 0, "-", "mycielski"], [271, 13, 0, "-", "nonisomorphic_trees"], [271, 13, 0, "-", "small"], [271, 13, 0, "-", "social"], [271, 13, 0, "-", "spectral_graph_forge"], [271, 13, 0, "-", "sudoku"], [271, 13, 0, "-", "trees"], [271, 13, 0, "-", "triads"]], "graphscope.nx.generators.atlas": [[170, 12, 1, "", "graph_atlas"], [171, 12, 1, "", "graph_atlas_g"]], "graphscope.nx.generators.classic": [[172, 12, 1, "", "balanced_tree"], [173, 12, 1, "", "barbell_graph"], [174, 12, 1, "", "binomial_tree"], [175, 12, 1, "", "circulant_graph"], [176, 12, 1, "", "circular_ladder_graph"], [177, 12, 1, "", "complete_graph"], [178, 12, 1, "", "complete_multipartite_graph"], [179, 12, 1, "", "cycle_graph"], [180, 12, 1, "", "dorogovtsev_goltsev_mendes_graph"], [181, 12, 1, "", "empty_graph"], [182, 12, 1, "", "full_rary_tree"], [183, 12, 1, "", "ladder_graph"], [184, 12, 1, "", "lollipop_graph"], [185, 12, 1, "", "null_graph"], [186, 12, 1, "", "path_graph"], [187, 12, 1, "", "star_graph"], [188, 12, 1, "", "trivial_graph"], [189, 12, 1, "", "turan_graph"], [190, 12, 1, "", "wheel_graph"]], "graphscope.nx.generators.community": [[191, 12, 1, "", "LFR_benchmark_graph"], [192, 12, 1, "", "caveman_graph"], [193, 12, 1, "", "connected_caveman_graph"], [194, 12, 1, "", "gaussian_random_partition_graph"], [195, 12, 1, "", "planted_partition_graph"], [196, 12, 1, "", "random_partition_graph"], [197, 12, 1, "", "relaxed_caveman_graph"], [198, 12, 1, "", "ring_of_cliques"], [199, 12, 1, "", "stochastic_block_model"], [200, 12, 1, "", "windmill_graph"]], "graphscope.nx.generators.degree_seq": [[201, 12, 1, "", "configuration_model"], [202, 12, 1, "", "degree_sequence_tree"], [203, 12, 1, "", "directed_configuration_model"], [204, 12, 1, "", "directed_havel_hakimi_graph"], [205, 12, 1, "", "expected_degree_graph"], [206, 12, 1, "", "havel_hakimi_graph"], [207, 12, 1, "", "random_degree_sequence_graph"]], "graphscope.nx.generators.directed": [[208, 12, 1, "", "gn_graph"], [209, 12, 1, "", "gnc_graph"], [210, 12, 1, "", "gnr_graph"], [211, 12, 1, "", "random_k_out_graph"], [212, 12, 1, "", "scale_free_graph"]], "graphscope.nx.generators.duplication": [[213, 12, 1, "", "duplication_divergence_graph"], [214, 12, 1, "", "partial_duplication_graph"]], "graphscope.nx.generators.ego": [[215, 12, 1, "", "ego_graph"]], "graphscope.nx.generators.expanders": [[216, 12, 1, "", "chordal_cycle_graph"], [217, 12, 1, "", "margulis_gabber_galil_graph"], [218, 12, 1, "", "paley_graph"]], "graphscope.nx.generators.geometric": [[219, 12, 1, "", "geographical_threshold_graph"], [220, 12, 1, "", "random_geometric_graph"], [221, 12, 1, "", "soft_random_geometric_graph"], [222, 12, 1, "", "thresholded_random_geometric_graph"], [223, 12, 1, "", "waxman_graph"]], "graphscope.nx.generators.harary_graph": [[224, 12, 1, "", "hkn_harary_graph"], [225, 12, 1, "", "hnm_harary_graph"]], "graphscope.nx.generators.intersection": [[226, 12, 1, "", "general_random_intersection_graph"], [227, 12, 1, "", "k_random_intersection_graph"], [228, 12, 1, "", "uniform_random_intersection_graph"]], "graphscope.nx.generators.joint_degree_seq": [[229, 12, 1, "", "directed_joint_degree_graph"], [230, 12, 1, "", "is_valid_directed_joint_degree"], [231, 12, 1, "", "is_valid_joint_degree"], [232, 12, 1, "", "joint_degree_graph"]], "graphscope.nx.generators.mycielski": [[233, 12, 1, "", "mycielski_graph"], [234, 12, 1, "", "mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees": [[235, 12, 1, "", "nonisomorphic_trees"], [236, 12, 1, "", "number_of_nonisomorphic_trees"]], "graphscope.nx.generators.small": [[237, 12, 1, "", "LCF_graph"], [238, 12, 1, "", "bull_graph"], [239, 12, 1, "", "chvatal_graph"], [240, 12, 1, "", "cubical_graph"], [241, 12, 1, "", "desargues_graph"], [242, 12, 1, "", "diamond_graph"], [243, 12, 1, "", "dodecahedral_graph"], [244, 12, 1, "", "frucht_graph"], [245, 12, 1, "", "heawood_graph"], [246, 12, 1, "", "house_graph"], [247, 12, 1, "", "house_x_graph"], [248, 12, 1, "", "icosahedral_graph"], [249, 12, 1, "", "krackhardt_kite_graph"], [250, 12, 1, "", "make_small_graph"], [251, 12, 1, "", "moebius_kantor_graph"], [252, 12, 1, "", "octahedral_graph"], [253, 12, 1, "", "pappus_graph"], [254, 12, 1, "", "petersen_graph"], [255, 12, 1, "", "sedgewick_maze_graph"], [256, 12, 1, "", "tetrahedral_graph"], [257, 12, 1, "", "truncated_cube_graph"], [258, 12, 1, "", "truncated_tetrahedron_graph"], [259, 12, 1, "", "tutte_graph"]], "graphscope.nx.generators.social": [[260, 12, 1, "", "davis_southern_women_graph"], [261, 12, 1, "", "florentine_families_graph"], [262, 12, 1, "", "karate_club_graph"], [263, 12, 1, "", "les_miserables_graph"]], "graphscope.nx.generators.spectral_graph_forge": [[264, 12, 1, "", "spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[265, 12, 1, "", "sudoku_graph"]], "graphscope.nx.generators.trees": [[266, 12, 1, "", "prefix_tree"], [267, 12, 1, "", "random_tree"]], "graphscope.nx.generators.triads": [[268, 12, 1, "", "triad_graph"]], "networkx.generators": [[271, 13, 0, "-", "internet_as_graphs"], [271, 13, 0, "-", "stochastic"]], "networkx.generators.internet_as_graphs": [[269, 12, 1, "", "random_internet_as_graph"]], "networkx.generators.stochastic": [[270, 12, 1, "", "stochastic_graph"]]}, "objtypes": {"0": "cpp:class", "1": "cpp:function", "2": "cpp:templateParam", "3": "cpp:functionParam", "4": "cpp:member", "5": "cpp:type", "6": "cpp:enum", "7": "cpp:enumerator", "8": "py:class", "9": "py:method", "10": "py:property", "11": "py:data", "12": "py:function", "13": "py:module", "14": "py:attribute"}, "objnames": {"0": ["cpp", "class", "C++ class"], "1": ["cpp", "function", "C++ function"], "2": ["cpp", "templateParam", "C++ template parameter"], "3": ["cpp", "functionParam", "C++ function parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "type", "C++ type"], "6": ["cpp", "enum", "C++ enum"], "7": ["cpp", "enumerator", "C++ enumerator"], "8": ["py", "class", "Python class"], "9": ["py", "method", "Python method"], "10": ["py", "property", "Python property"], "11": ["py", "data", "Python data"], "12": ["py", "function", "Python function"], "13": ["py", "module", "Python module"], "14": ["py", "attribute", "Python attribute"]}, "titleterms": {"built": [0, 51, 132, 285], "algorithm": [0, 1, 9, 11, 15, 16, 17, 18, 19, 21, 22, 23, 32, 51, 120, 137, 285, 287], "weakli": 0, "connect": 0, "compon": [0, 36], "wcc": 0, "singl": [0, 45], "sourc": [0, 64, 121, 127, 130, 131, 284], "shortest": 0, "path": [0, 284], "sssp": 0, "custom": [1, 23], "aggreg": [1, 284], "deploy": [2, 3, 49], "gae": [2, 3, 32, 54, 287], "design": [3, 32, 33, 34, 51, 52, 130], "analyt": [3, 4, 10, 24, 26, 44, 49, 51, 52, 53, 55, 58, 60, 61], "engin": [3, 4, 7, 10, 12, 24, 36, 49, 51, 52, 58, 60], "get": [3, 7, 42, 43, 53, 127, 281], "start": [3, 7, 42, 43, 53, 132, 281], "guid": [3, 8, 35, 36, 287, 288, 289], "exampl": [3, 8, 17, 22, 23, 287, 288, 289], "dev": [3, 4, 36], "test": [3, 4, 36, 39, 127], "faq": [3, 5], "environ": [4, 36], "instal": [4, 7, 36, 49, 127], "dep": [4, 36], "local": [4, 7, 29, 36, 284], "docker": [4, 36, 127, 297], "contain": [4, 36], "build": [4, 36, 64, 120, 127, 305], "how": [4, 19, 37, 38, 39, 47, 48, 120, 130, 132, 293], "program": [6, 12, 14, 32, 45, 130], "model": [6, 12, 14, 15, 16, 17, 24, 32, 54, 57, 120, 128, 132], "flash": [6, 15, 54], "run": [7, 17, 18, 21, 22, 23, 45, 127], "graphscop": [7, 10, 17, 19, 20, 22, 23, 28, 29, 30, 31, 36, 45, 46, 49, 52, 55, 60, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 297, 301, 302], "analayt": 7, "what": [7, 14, 55], "": [7, 60], "next": 7, "ingress": [9, 54], "increment": [9, 12], "graph": [9, 11, 19, 20, 32, 44, 45, 46, 47, 49, 51, 52, 53, 55, 56, 57, 58, 120, 122, 123, 124, 125, 126, 128, 132, 134, 136, 138, 271, 272, 274, 275, 285], "kei": [10, 51, 110], "concept": 10, "loadstrategi": 10, "onlyout": 10, "onlyin": 10, "bothinout": 10, "partitionstrategi": 10, "edg": [10, 20, 138, 149, 274, 305], "cut": 10, "vertex": [10, 24, 66, 278, 305], "vertic": [10, 305], "outervertex": 10, "innervertex": 10, "innervertexwithoutgoingedg": 10, "innervertexwithincomingedg": 10, "messagestrategi": 10, "alongoutgoingedgetooutervertex": 10, "alongincomingedgetooutervertex": 10, "alongedgetooutervertex": 10, "synconoutervertexastarget": 10, "synconoutervertexassourc": 10, "synconoutervertex": 10, "networkx": [11, 19, 269, 270, 273], "compat": [11, 56], "convert": 11, "nx": [11, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "support": [11, 23, 51, 284], "oper": [11, 20, 106, 107, 108, 109, 110, 111, 130, 276], "overview": [12, 49, 128], "architectur": 12, "storag": [12, 32, 49, 52], "layer": [12, 52], "grape": [12, 17, 54, 64], "api": [12, 19, 20, 60, 63, 121, 132, 273, 277, 301], "ffi": 12, "comput": [12, 45, 49, 52], "applic": [12, 22, 23, 52, 285], "perform": [13, 19, 32, 51, 58], "tune": 13, "pie": [14, 16, 17, 18, 54, 63, 295], "i": [14, 55, 284], "workflow": [14, 51], "tutori": [15, 16, 17, 18, 19, 20, 21, 22, 23, 50, 59, 284], "develop": [15, 16, 17, 18, 22, 23, 36, 49, 57, 120, 132, 287], "your": [15, 16, 17, 18, 22, 57, 120, 130, 287], "c": [15, 16, 35, 287], "java": [17, 35, 50, 65, 287], "jar": 17, "implement": [17, 130], "own": [17, 18, 22, 57, 120, 130], "prepar": [17, 132], "jdk": [17, 64], "submit": [17, 22, 23, 38], "javasdk": 17, "github": [17, 25], "templat": 17, "python": [18, 35, 36, 51, 59, 277, 287, 297], "write": 18, "pregel": [18, 24, 63, 295], "us": [18, 20, 51, 127, 130, 132, 278], "math": [18, 295], "h": [18, 295], "function": [18, 57, 61, 63, 120, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 279], "netowrkx": [19, 20], "doe": 19, "analysi": [19, 52], "from": [19, 20, 49, 64, 127], "displai": 19, "The": [19, 46], "speed": 19, "up": 19, "over": 19, "creat": 20, "an": [20, 130], "empti": 20, "ad": 20, "node": [20, 138, 159], "examin": 20, "element": 20, "remov": 20, "constructor": 20, "access": 20, "neighbor": [20, 158], "attribut": [20, 121, 138], "induc": 20, "deepcopi": 20, "subgraph": [20, 57, 167, 284], "edge_subgraph": [20, 148], "make": 20, "copi": 20, "direct": [20, 208, 209, 210, 211, 212, 271], "analyz": 20, "object": [20, 61, 62, 122, 134, 276, 279], "transform": [20, 57, 275], "builtin": [21, 61, 137, 276], "giraph": 22, "try": [22, 132], "some": 22, "app": [22, 23, 60, 61, 68], "graphx": 23, "deploi": [23, 26, 27, 28, 29, 30, 31], "along": 23, "spark": 23, "includ": 23, "depend": [23, 127], "toward": 23, "centric": 24, "ga": [24, 54], "simul": 24, "contact": 25, "u": 25, "slack": 25, "discuss": 25, "k8": [26, 30], "job": 26, "task": 26, "servic": 27, "groot": [27, 54, 283], "cloud": [28, 51, 121], "self": [30, 138], "manag": 30, "helm": 31, "execut": [32, 52], "framework": [32, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "flexibl": 32, "multi": [32, 278], "languag": [32, 126], "sdk": [32, 63], "high": [32, 51, 52], "runtim": [32, 130], "librari": [32, 51, 127], "gie": [33, 42, 288], "gle": [34, 43, 289], "code": [35, 130, 291], "style": [35, 273], "rust": 35, "script": 35, "linter": 35, "checker": 35, "all": 36, "target": 36, "individu": 36, "coordin": 36, "client": [36, 122], "contribut": 37, "pull": 38, "request": 38, "introduct": [40, 124, 284], "arrowfrag": 40, "0": 40, "\u672f\u8bed": 40, "1": [40, 121, 122, 124, 132], "\u8f7d\u56fe": [40, 305], "\u521d\u59cb\u5316partiton": 40, "2": [40, 121, 122, 132], "\u6784\u5efa\u539f\u59cbarrow": 40, "tabl": [40, 49, 121], "3": [40, 121, 122, 132], "shuffl": 40, "vtabl": 40, "4": [40, 121, 132], "\u6784\u5efavertex": 40, "map": 40, "basicarrowvertexmapbuild": 40, "5": [40, 121], "\u6784\u5efafragment\u51c6\u5907": 40, "\u5904\u7406edg": 40, "basicevfragmentload": 40, "fragmentbuilder\u6570\u636e\u521d\u59cb\u5316": 40, "basicarrowfragmentbuild": 40, "6": 40, "fragment\u6784\u5efa": 40, "\u8bbf\u95eefragment": 40, "\u8bbf\u95ee\u9876\u70b9": 40, "\u8bbf\u95ee\u5185\u90e8\u70b9": 40, "\u8303\u56f4\u5916\u90e8\u70b9": 40, "\u8bbf\u95ee\u5168\u90e8\u70b9": 40, "\u8bbf\u95ee\u9876\u70b9\u6570\u636e": 40, "\u8bbf\u95ee\u8fb9": 40, "\u8bbf\u95ee\u51fa\u8fb9": 40, "\u8bbf\u95ee\u5165\u8fb9": 40, "\u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": 40, "frequent": 41, "ask": 41, "question": 41, "workload": [44, 46, 55, 56, 57], "interact": [44, 49, 53, 56, 58, 135], "queri": [44, 52, 53, 123, 135], "learn": [44, 46, 49, 52, 53, 57, 120, 128, 136], "grpahscop": 45, "data": [45, 121, 128, 131, 132], "scientist": 45, "challeng": [45, 55], "handl": [45, 46], "solut": 45, "machin": 45, "distribut": [45, 122, 130], "integr": [45, 131], "pydata": 45, "ecosystem": 45, "product": 46, "posit": 46, "compar": 46, "process": [46, 53, 57, 120], "system": [46, 49, 131, 133], "databas": 46, "variou": 46, "type": [46, 63, 121, 272], "load": 47, "defin": [47, 130], "schema": 47, "report": 48, "bug": 48, "A": 49, "One": [49, 53, 278], "stop": [49, 53], "larg": [49, 55], "scale": [49, 286], "alibaba": [49, 121], "troubleshoot": 49, "util": [49, 292], "refer": [49, 60, 65, 277], "indic": 49, "user": [50, 59, 121, 284, 287, 288, 289], "featur": 51, "eas": 51, "interfac": [51, 130, 131, 282], "travers": [51, 56, 125, 284], "gremlin": [51, 56, 116, 284, 303], "cypher": 51, "extens": 51, "gnn": [51, 132, 299], "train": [51, 57, 120], "infer": 51, "nativ": 51, "across": 51, "orchestr": 51, "motiv": 52, "unifi": [52, 282], "platform": 52, "disaggreg": 52, "divers": 52, "bi": 52, "qp": 52, "quick": [53, 132], "glossari": 54, "vineyard": 54, "gaia": 54, "ir": 54, "pegasu": 54, "can": 55, "do": 55, "tinkerpop": [56, 303], "pattern": 56, "match": [56, 284], "properti": [56, 284, 305], "constraint": 56, "neural": 57, "network": [57, 271], "sampl": [57, 120, 124, 126, 129, 132], "output": [57, 93], "loss": [57, 120], "benchmark": 58, "result": [58, 278], "gpu": 58, "reproduc": 58, "fragment": 60, "worker": 60, "context": [60, 62, 278], "appasset": 61, "javaapp": 61, "cython": 63, "about": 64, "project": [64, 284], "structur": [64, 138], "javadoc": 65, "declar": 67, "load_app": 68, "dag_util": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "add_column": 69, "add_labels_to_graph": 70, "arrow_to_dynam": 71, "bind_app": 72, "clear_edg": 73, "clear_graph": 74, "context_to_datafram": 75, "context_to_numpi": 76, "copy_graph": 77, "create_app": 78, "create_graph": 79, "create_graph_view": 80, "create_load": 81, "create_subgraph": 82, "create_unload_op": 83, "dynamic_to_arrow": 84, "fetch_gremlin_result": 85, "get_context_data": 86, "graph_to_datafram": 87, "graph_to_numpi": 88, "gremlin_queri": 89, "gremlin_to_subgraph": 90, "modify_edg": 91, "modify_vertic": 92, "project_arrow_property_graph": 94, "project_to_simpl": 95, "report_graph": 96, "run_app": 97, "to_data_sink": 98, "to_direct": [99, 168], "to_undirect": [100, 169], "to_vineyard_datafram": 101, "to_vineyard_tensor": 102, "unload_app": 103, "unload_context": 104, "unload_graph": 105, "__init__": 106, "as_op_def": 107, "eval": 108, "evalu": 109, "signatur": 111, "g": [112, 292], "get_default_sess": 113, "get_opt": 114, "graphlearn": 115, "has_default_sess": 117, "session": [118, 279], "set_opt": 119, "encod": [120, 128], "format": 121, "basic": 121, "weight": 121, "label": [121, 284, 305], "put": 121, "togeth": 121, "maxcomput": 121, "describ": 122, "topologi": 122, "stand": 122, "alon": 122, "mode": 122, "server": 122, "gsl": 126, "pip": 127, "wheel": [127, 297], "packag": 127, "tensorflow": 127, "git": 127, "compil": [127, 130], "imag": 127, "neg": 129, "new": 130, "clone": 130, "class": [130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "regist": [130, 131], "other": 131, "file": 131, "bytestreamaccessfil": 131, "structuredaccessfil": 131, "writablefil": 131, "scheme": 131, "out": [132, 284], "gl": 132, "construct": 132, "configur": 133, "loader": [134, 290, 305], "loop": 138, "freez": [138, 150], "add_cycl": 139, "add_path": 140, "add_star": 141, "all_neighbor": 142, "common_neighbor": 143, "create_empty_copi": 144, "degre": [145, 271], "degree_histogram": 146, "densiti": 147, "induced_subgraph": 151, "info": 152, "is_direct": 153, "is_empti": 154, "is_frozen": 155, "is_negatively_weight": 156, "is_weight": 157, "nodes_with_selfloop": 160, "non_edg": 161, "non_neighbor": 162, "number_of_edg": 163, "number_of_nod": 164, "number_of_selfloop": 165, "selfloop_edg": 166, "gener": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271], "atla": [170, 171, 271], "graph_atla": 170, "graph_atlas_g": 171, "classic": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 271], "balanced_tre": 172, "barbell_graph": 173, "binomial_tre": 174, "circulant_graph": 175, "circular_ladder_graph": 176, "complete_graph": 177, "complete_multipartite_graph": 178, "cycle_graph": 179, "dorogovtsev_goltsev_mendes_graph": 180, "empty_graph": 181, "full_rary_tre": 182, "ladder_graph": 183, "lollipop_graph": 184, "null_graph": 185, "path_graph": 186, "star_graph": 187, "trivial_graph": 188, "turan_graph": 189, "wheel_graph": 190, "commun": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 271], "lfr_benchmark_graph": 191, "caveman_graph": 192, "connected_caveman_graph": 193, "gaussian_random_partition_graph": 194, "planted_partition_graph": 195, "random_partition_graph": 196, "relaxed_caveman_graph": 197, "ring_of_cliqu": 198, "stochastic_block_model": 199, "windmill_graph": 200, "degree_seq": [201, 202, 203, 204, 205, 206, 207], "configuration_model": 201, "degree_sequence_tre": 202, "directed_configuration_model": 203, "directed_havel_hakimi_graph": 204, "expected_degree_graph": 205, "havel_hakimi_graph": 206, "random_degree_sequence_graph": 207, "gn_graph": 208, "gnc_graph": 209, "gnr_graph": 210, "random_k_out_graph": 211, "scale_free_graph": 212, "duplic": [213, 214, 271], "duplication_divergence_graph": 213, "partial_duplication_graph": 214, "ego": [215, 271], "ego_graph": 215, "expand": [216, 217, 218, 271, 284], "chordal_cycle_graph": 216, "margulis_gabber_galil_graph": 217, "paley_graph": 218, "geometr": [219, 220, 221, 222, 223, 271], "geographical_threshold_graph": 219, "random_geometric_graph": 220, "soft_random_geometric_graph": 221, "thresholded_random_geometric_graph": 222, "waxman_graph": 223, "harary_graph": [224, 225], "hkn_harary_graph": 224, "hnm_harary_graph": 225, "intersect": [226, 227, 228, 271], "general_random_intersection_graph": 226, "k_random_intersection_graph": 227, "uniform_random_intersection_graph": 228, "joint_degree_seq": [229, 230, 231, 232], "directed_joint_degree_graph": 229, "is_valid_directed_joint_degre": 230, "is_valid_joint_degre": 231, "joint_degree_graph": 232, "mycielski": [233, 234, 271], "mycielski_graph": 233, "mycielskian": 234, "nonisomorphic_tre": [235, 236], "number_of_nonisomorphic_tre": 236, "small": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 271], "lcf_graph": 237, "bull_graph": 238, "chvatal_graph": 239, "cubical_graph": 240, "desargues_graph": 241, "diamond_graph": 242, "dodecahedral_graph": 243, "frucht_graph": 244, "heawood_graph": 245, "house_graph": 246, "house_x_graph": 247, "icosahedral_graph": 248, "krackhardt_kite_graph": 249, "make_small_graph": 250, "moebius_kantor_graph": 251, "octahedral_graph": 252, "pappus_graph": 253, "petersen_graph": 254, "sedgewick_maze_graph": 255, "tetrahedral_graph": 256, "truncated_cube_graph": 257, "truncated_tetrahedron_graph": 258, "tutte_graph": 259, "social": [260, 261, 262, 263, 271], "davis_southern_women_graph": 260, "florentine_families_graph": 261, "karate_club_graph": 262, "les_miserables_graph": 263, "spectral_graph_forg": 264, "sudoku": [265, 271], "sudoku_graph": 265, "tree": [266, 267, 271], "prefix_tre": 266, "random_tre": 267, "triad": [268, 271], "triad_graph": 268, "internet_as_graph": 269, "random_internet_as_graph": 269, "stochast": [270, 271], "stochastic_graph": 270, "diverg": 271, "sequenc": 271, "AS": 271, "spectral": 271, "non": 271, "isomorph": 271, "joint": 271, "harari": 271, "digraph": 272, "read": 274, "list": 274, "adjac": 274, "selector": 278, "differ": 278, "tensorcontext": 278, "vertexdatacontext": 278, "labeledvertexdatacontext": 278, "vertexpropertycontext": 278, "labeledvertexpropertycontext": 278, "method": 278, "dimension": 278, "rang": 278, "resourc": 280, "estim": 280, "grin": 282, "standard": 284, "step": 284, "v": 284, "e": 284, "inE": 284, "both": 284, "outv": 284, "inv": 284, "otherv": 284, "bothv": 284, "filter": 284, "hasid": 284, "haslabel": 284, "ha": 284, "hasnot": 284, "where": 284, "predic": 284, "dedup": 284, "id": 284, "constant": 284, "valuemap": 284, "valu": 284, "select": 284, "count": 284, "fold": 284, "sum": 284, "min": 284, "max": 284, "mean": 284, "group": 284, "groupcount": 284, "order": 284, "statist": 284, "limit": 284, "coin": 284, "union": 284, "syntact": 284, "sugar": 284, "pathexpand": 284, "endv": 284, "express": 284, "To": 284, "ident": 284, "elementmap": 284, "unfold": 284, "Will": 284, "Not": 284, "repeat": 284, "sideeffect": 284, "branch": 284, "bind": 285, "repartit": 286, "fennel": 286, "xtrapulp": 286, "hybrid": 286, "partit": 286, "bulk": 290, "error": 291, "command": 292, "line": 292, "find": 293, "log": 293, "monitor": 294, "\u56fe\u5206\u6790\u5f15\u64ce": 295, "\u5185\u7f6e\u7b97\u6cd5": 295, "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": 295, "\u4f7f\u7528": 295, "\u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": 295, "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528": 295, "\u4e2d\u7684\u51fd\u6570": 295, "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": 295, "\u8fd0\u884cjava\u7f16\u5199\u7684\u7b97\u6cd5": 295, "\u8fd0\u884c\u793a\u4f8b\u7684java\u7b97\u6cd5": 295, "\u4f7f\u7528java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": 295, "\u90e8\u7f72": 296, "\u4f7f\u7528helm\u90e8\u7f72graphscop": 296, "\u5728aw": 296, "\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": 296, "\u672c\u5730\u90e8\u7f72graphscop": 296, "\u5f00\u53d1\u8005\u6307\u5357": 297, "\u57fa\u4e8e": [297, 302], "\u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5": 297, "kubernet": [297, 302], "\u6784\u5efa": 297, "linux": 297, "maco": 297, "\u4ee3\u7801\u98ce\u683c": 297, "\u5e38\u89c1\u95ee\u9898": 298, "\u5feb\u901f\u4e0a\u624b": 299, "\u793a\u4f8b": 299, "\u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 299, "\u521b\u5efa\u4f1a\u8bdd": 299, "\u4ea4\u4e92\u5f0f\u67e5\u8be2": 299, "\u56fe\u5206\u6790": 299, "\u56fe\u795e\u7ecf\u7f51\u7edc": 299, "\u5173\u95ed\u4f1a\u8bdd": 299, "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": 300, "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": 300, "\u6295\u5f71": 300, "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": 300, "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": 300, "\u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": 301, "\u76ee\u5f55": [301, 306], "\u53c2\u8003": 301, "\u7d22\u5f15": 301, "\u5b89\u88c5": 302, "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": 302, "\u5ba2\u6237\u7aef": 302, "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": 303, "apach": 303, "\u5229\u7528python": 303, "\u8fde\u63a5graphscop": 303, "\u5229\u7528java": 303, "consol": 303, "\u5f00\u53d1\u63a7\u5236\u53f0": 303, "gremlin\u7f16\u7a0b\u5165\u95e8": 303, "101": 303, "\u56fe\u6570\u636e\u6a21\u578b": 303, "\u67e5\u8be2\u8bed\u8a00": 303, "\u4e00\u4e2a\u4f8b\u5b50": 303, "gremlin\u517c\u5bb9\u6027": 303, "\u5bf9\u6bd4tinkerpop": 303, "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": 303, "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": 303, "\u652f\u6301\u7684gremlin\u64cd\u4f5c": 303, "\u5df2\u77e5\u9650\u5236": 303, "\u56fe\u5b66\u4e60\u5f15\u64ce": 304, "\u56fe\u5b66\u4e60\u6a21\u578b": 304, "\u6570\u636e\u6a21\u578b": 304, "\u7f16\u7801\u5668": 304, "\u81ea\u5b9a\u4e49\u7b97\u6cd5": 304, "\u91c7\u6837": 304, "\u56fe\u6570\u636e\u6d41": 304, "\u6a21\u578b": 304, "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": 304, "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": 305, "\u624b\u52a8\u914d\u7f6e\u56fe": 305, "vid_field": 305, "src_label": 305, "dst_label": 305, "src_field": 305, "dst_field": 305, "\u9ad8\u7ea7\u7528\u6cd5": 305, "\u6ca1\u6709\u6b67\u4e49\u65f6": 305, "\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": 305, "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": 305, "\u591a\u79cd\u8fb9\u5173\u7cfb": 305, "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": 305, "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": 305, "\u5b8c\u6574\u7684\u793a\u4f8b": 305, "\u4ece": 305, "panda": 305, "\u6216": 305, "numpi": 305, "\u4e2d\u8f7d\u56fe": 305, "\u7684\u53d8\u79cd": 305, "\u5165\u95e8\u6559\u7a0b": 306}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Built-in Algorithms": [[0, "built-in-algorithms"]], "Weakly Connected Components(WCC)": [[0, "weakly-connected-components-wcc"]], "Single Sourced Shortest Path(SSSP)": [[0, "single-sourced-shortest-path-sssp"]], "Customized Algorithms": [[1, "customized-algorithms"]], "Aggregators": [[1, "aggregators"]], "Deployment for GAE": [[2, "deployment-for-gae"], [3, null]], "Design of Analytical Engine": [[3, "design-of-analytical-engine"], [3, null]], "Getting Started": [[3, null], [7, "getting-started"], [53, "getting-started"], [281, "getting-started"]], "Guide and Examples": [[3, null], [8, "guide-and-examples"]], "Dev and Test": [[3, null], [4, "dev-and-test"]], "FAQs": [[3, null], [5, "faqs"]], "Dev Environment": [[4, "dev-environment"], [36, "dev-environment"]], "Install deps on local": [[4, "install-deps-on-local"], [36, "install-deps-on-local"]], "Dev on docker container": [[4, "dev-on-docker-container"], [36, "dev-on-docker-container"]], "Build Analytical Engine": [[4, "build-analytical-engine"]], "How to Test": [[4, "how-to-test"], [39, "how-to-test"]], "Programming Model: FLASH": [[6, "programming-model-flash"]], "Installation": [[7, "installation"]], "Running GraphScope Analaytical Engine on Local": [[7, "running-graphscope-analaytical-engine-on-local"]], "What\u2019s the Next": [[7, "what-s-the-next"]], "Ingress: Incrementalize Graph Algorithms": [[9, "ingress-incrementalize-graph-algorithms"]], "Key Concepts": [[10, "key-concepts"]], "LoadStrategy": [[10, "loadstrategy"]], "OnlyOut": [[10, "onlyout"]], "OnlyIn": [[10, "onlyin"]], "BothInOut": [[10, "bothinout"]], "PartitionStrategy": [[10, "partitionstrategy"]], "Edge Cut": [[10, "edge-cut"]], "Vertex Cut": [[10, "vertex-cut"]], "Vertices on GraphScope analytical engine": [[10, "vertices-on-graphscope-analytical-engine"]], "OuterVertex": [[10, "outervertex"]], "InnerVertex": [[10, "innervertex"]], "InnerVertexWithOutgoingEdge": [[10, "innervertexwithoutgoingedge"]], "InnerVertexWithIncomingEdge": [[10, "innervertexwithincomingedge"]], "MessageStrategy": [[10, "messagestrategy"]], "AlongOutgoingEdgeToOuterVertex": [[10, "alongoutgoingedgetooutervertex"]], "AlongIncomingEdgeToOuterVertex": [[10, "alongincomingedgetooutervertex"]], "AlongEdgeToOuterVertex": [[10, "alongedgetooutervertex"]], "SyncOnOuterVertexAsTarget": [[10, "synconoutervertexastarget"]], "SyncOnOuterVertexAsSource": [[10, "synconoutervertexassource"]], "SyncOnOuterVertex": [[10, "synconoutervertex"]], "NetworkX Compatibility": [[11, "networkx-compatibility"]], "Convert a Graph to a nx.Graph": [[11, "convert-a-graph-to-a-nx-graph"]], "Supported Graph Operations": [[11, "supported-graph-operations"]], "Supported Algorithms": [[11, "supported-algorithms"]], "Overview and Architecture": [[12, "overview-and-architecture"]], "Architecture": [[12, "architecture"]], "Storage Layer": [[12, "storage-layer"]], "Engine Layer": [[12, "engine-layer"]], "GRAPE Engine": [[12, "grape-engine"]], "Programming Model APIs": [[12, "programming-model-apis"]], "FFIs": [[12, "ffis"]], "Incremental Computation Engine": [[12, "incremental-computation-engine"]], "Application Layer": [[12, "application-layer"]], "Performance Tuning": [[13, "performance-tuning"]], "Programming Model: PIE": [[14, "programming-model-pie"]], "What is the PIE Model?": [[14, "what-is-the-pie-model"]], "Workflow of PIE": [[14, "workflow-of-pie"]], "Tutorial: Develop your Algorithm in C++ with FLASH Model": [[15, "tutorial-develop-your-algorithm-in-c-with-flash-model"]], "Tutorial: Develop your Algorithm in C++ with PIE Model": [[16, "tutorial-develop-your-algorithm-in-c-with-pie-model"]], "Tutorial: Develop your Algorithm in Java with PIE Model": [[17, "tutorial-develop-your-algorithm-in-java-with-pie-model"]], "Run example algorithms with example jar": [[17, "run-example-algorithms-with-example-jar"]], "Implement your own algorithms in Java.": [[17, "implement-your-own-algorithms-in-java"]], "Prepare GRAPE-jdk": [[17, "prepare-grape-jdk"]], "Implement your algorithm": [[17, "implement-your-algorithm"]], "Submit to GraphScope": [[17, "submit-to-graphscope"]], "GraphScope JavaSDK with Github Template": [[17, "graphscope-javasdk-with-github-template"]], "Tutorial: Develop algorithms in Python": [[18, "tutorial-develop-algorithms-in-python"]], "Writing Your Own Algorithms in PIE": [[18, "writing-your-own-algorithms-in-pie"]], "Writing Algorithms in Pregel": [[18, "writing-algorithms-in-pregel"]], "Using math.h Functions in Algorithms": [[18, "using-math-h-functions-in-algorithms"]], "Run Your Own Algorithms": [[18, "run-your-own-algorithms"]], "Tutorial: Graph Algorithms with NetowrkX APIs": [[19, "tutorial-graph-algorithms-with-netowrkx-apis"]], "How does Networkx Perform Graph Analysis?": [[19, "how-does-networkx-perform-graph-analysis"]], "How to Perform Graph Analysis with NetworkX APIs from GraphScope": [[19, "how-to-perform-graph-analysis-with-networkx-apis-from-graphscope"]], "Graph Analysis": [[19, "graph-analysis"]], "Graph Display": [[19, "graph-display"]], "The Performance Speed-up of GraphScope over NetworkX": [[19, "the-performance-speed-up-of-graphscope-over-networkx"]], "Tutorial: Graph Operations with NetowrkX APIs": [[20, "tutorial-graph-operations-with-netowrkx-apis"]], "Creating an Empty Graph": [[20, "creating-an-empty-graph"]], "Adding Nodes": [[20, "adding-nodes"]], "Adding Edges": [[20, "adding-edges"]], "Examining Elements of a Graph": [[20, "examining-elements-of-a-graph"]], "Removing Elements from a Graph": [[20, "removing-elements-from-a-graph"]], "Using Graph Constructors": [[20, "using-graph-constructors"]], "Accessing Edges and Neighbors": [[20, "accessing-edges-and-neighbors"]], "Adding Attributes to Graphs, Nodes and Edges": [[20, "adding-attributes-to-graphs-nodes-and-edges"]], "Graph Attributes": [[20, "graph-attributes"]], "Node Attributes": [[20, "node-attributes"]], "Edge Attributes": [[20, "edge-attributes"]], "Induce deepcopy subgraph and edge_subgraph": [[20, "induce-deepcopy-subgraph-and-edge-subgraph"]], "Making Copies": [[20, "making-copies"]], "Directed Graphs": [[20, "directed-graphs"]], "Analyzing Graphs": [[20, "analyzing-graphs"]], "Create graph from GraphScope Graph Object": [[20, "create-graph-from-graphscope-graph-object"]], "Transform to GraphScope Graph Object": [[20, "transform-to-graphscope-graph-object"]], "Tutorial: Running Builtin Algorithms": [[21, "tutorial-running-builtin-algorithms"]], "Tutorial: Run Giraph Applications on GraphScope": [[22, "tutorial-run-giraph-applications-on-graphscope"]], "Try some example giraph apps": [[22, "try-some-example-giraph-apps"]], "Run your own Giraph apps.": [[22, "run-your-own-giraph-apps"]], "Develop Giraph algorithm": [[22, "develop-giraph-algorithm"]], "Submit to GraphScope.": [[22, "submit-to-graphscope"]], "Tutorial: Run GraphX Applications on GraphScope": [[23, "tutorial-run-graphx-applications-on-graphscope"]], "Deploy GraphScope along with Spark": [[23, "deploy-graphscope-along-with-spark"]], "Run example GraphX apps": [[23, "run-example-graphx-apps"]], "Submit to Spark": [[23, "submit-to-spark"]], "Run customized GraphX apps": [[23, "run-customized-graphx-apps"]], "Include dependency": [[23, "include-dependency"]], "Develop customized GraphX algorithm towards GraphScope.": [[23, "develop-customized-graphx-algorithm-towards-graphscope"]], "Run customized GraphX algorithms on Spark with GraphScope support": [[23, "run-customized-graphx-algorithms-on-spark-with-graphscope-support"]], "Vertex-Centric Model": [[24, "vertex-centric-model"]], "Pregel Model": [[24, "pregel-model"]], "GAS Model": [[24, "gas-model"]], "Simulation of Pregel Model in Analytical Engine": [[24, "simulation-of-pregel-model-in-analytical-engine"]], "Contact Us": [[25, "contact-us"]], "Slack": [[25, "slack"]], "Discussion on Github": [[25, "discussion-on-github"]], "Deploy as K8s Job for analytical tasks": [[26, "deploy-as-k8s-job-for-analytical-tasks"]], "Deploy as Service with Groot": [[27, "deploy-as-service-with-groot"]], "Deploy GraphScope on Clouds": [[28, "deploy-graphscope-on-clouds"]], "Deploy GraphScope on Local": [[29, "deploy-graphscope-on-local"]], "Deploy GraphScope on Self-managed K8s": [[30, "deploy-graphscope-on-self-managed-k8s"]], "Deploy GraphScope with helm": [[31, "deploy-graphscope-with-helm"]], "Design of GAE": [[32, "design-of-gae"]], "Graph Storage": [[32, "graph-storage"]], "Execution Framework": [[32, "execution-framework"]], "Flexible programming models": [[32, "flexible-programming-models"]], "Multi-language SDKs": [[32, "multi-language-sdks"]], "High-performance runtime": [[32, "high-performance-runtime"]], "Algorithm Library": [[32, "algorithm-library"]], "Design of GIE": [[33, "design-of-gie"]], "Design of GLE": [[34, "design-of-gle"]], "Code Style Guide": [[35, "code-style-guide"]], "C++ Style": [[35, "c-style"]], "Python Style": [[35, "python-style"]], "Rust Style": [[35, "rust-style"]], "Java Style": [[35, "java-style"]], "Script Style": [[35, "script-style"]], "Style Linter and Checker": [[35, "style-linter-and-checker"]], "Development Guide": [[36, "development-guide"]], "Build All Targets for GraphScope": [[36, "build-all-targets-for-graphscope"]], "Build Components Individually": [[36, "build-components-individually"]], "Build and Test Engines": [[36, "build-and-test-engines"]], "Build Coordinator": [[36, "build-coordinator"]], "Build Python Client": [[36, "build-python-client"]], "How to Contribute": [[37, "how-to-contribute"]], "How to Submit Pull-requests": [[38, "how-to-submit-pull-requests"]], "Introduction to ArrowFragment": [[40, "introduction-to-arrowfragment"]], "0. \u672f\u8bed": [[40, "id1"]], "1. \u8f7d\u56fe": [[40, "id2"]], "1.1 \u521d\u59cb\u5316partitoner": [[40, "partitoner"]], "1.2 \u6784\u5efa\u539f\u59cbarrow table": [[40, "arrow-table"]], "1.3. Shuffle vtable": [[40, "shuffle-vtable"]], "1.4. \u6784\u5efaVertex map(BasicArrowVertexMapBuilder)": [[40, "vertex-map-basicarrowvertexmapbuilder"]], "1.5. \u6784\u5efaFragment\u51c6\u5907": [[40, "fragment"]], "1.5.1. \u5904\u7406edge table(BasicEVFragmentLoader)": [[40, "edge-table-basicevfragmentloader"]], "1.5.2 FragmentBuilder\u6570\u636e\u521d\u59cb\u5316 (BasicArrowFragmentBuilder)": [[40, "fragmentbuilder-basicarrowfragmentbuilder"]], "1.6 Fragment\u6784\u5efa": [[40, "id3"]], "2. \u8bbf\u95eeFragment": [[40, "id4"]], "2.1 \u8bbf\u95ee\u9876\u70b9": [[40, "id5"]], "2.1.1 \u8bbf\u95ee\u5185\u90e8\u70b9": [[40, "id6"]], "2.1.2 \u8303\u56f4\u5916\u90e8\u70b9": [[40, "id7"]], "2.1.3 \u8bbf\u95ee\u5168\u90e8\u70b9": [[40, "id8"]], "2.1.4 \u8bbf\u95ee\u9876\u70b9\u6570\u636e": [[40, "id9"]], "2.2 \u8bbf\u95ee\u8fb9": [[40, "id10"]], "2.2.1 \u8bbf\u95ee\u51fa\u8fb9": [[40, "id11"]], "2.2.2 \u8bbf\u95ee\u5165\u8fb9": [[40, "id12"]], "2.2.3 \u8bbf\u95ee\u8fb9\u4e0a\u7684\u6570\u636e": [[40, "id13"]], "Frequently Asked Questions": [[41, "frequently-asked-questions"]], "Getting Started for GIE": [[42, "getting-started-for-gie"]], "Getting Started for GLE": [[43, "getting-started-for-gle"]], "Graph Workloads": [[44, "graph-workloads"]], "Graph Analytics": [[44, "graph-analytics"]], "Graph Interactive Query": [[44, "graph-interactive-query"]], "Graph Learning": [[44, "graph-learning"], [136, "graph-learning"]], "GrpahScope for Data Scientists": [[45, "grpahscope-for-data-scientists"]], "Challenges of Handling Graph Computation": [[45, "challenges-of-handling-graph-computation"]], "Solutions of GraphScope": [[45, "solutions-of-graphscope"]], "Program as Single Machine and Run as Distributed": [[45, "program-as-single-machine-and-run-as-distributed"]], "Integration with PyData Ecosystem": [[45, "integration-with-pydata-ecosystem"]], "The Product Positioning of GraphScope": [[46, "the-product-positioning-of-graphscope"]], "Compare with Graph Processing Systems": [[46, "compare-with-graph-processing-systems"]], "Compare with Graph Databases": [[46, "compare-with-graph-databases"]], "Compare with Graph Learning Systems": [[46, "compare-with-graph-learning-systems"]], "Handling Various Types of Graph Workloads": [[46, "handling-various-types-of-graph-workloads"]], "How to Load Graphs": [[47, "how-to-load-graphs"]], "Define Graph Schema": [[47, "define-graph-schema"]], "Load Graphs": [[47, "load-graphs"]], "How to Report Bugs": [[48, "how-to-report-bugs"]], "GraphScope: A One-Stop Large-Scale Graph Computing System from Alibaba": [[49, "graphscope-a-one-stop-large-scale-graph-computing-system-from-alibaba"]], "Overview": [[49, null], [128, "overview"]], "Installation & Deployment": [[49, null]], "Graph Analytical Engine": [[49, null], [58, "graph-analytical-engine"]], "Graph Interactive Engine": [[49, null], [58, "graph-interactive-engine"]], "Graph Learning Engine": [[49, null]], "Storage Engine": [[49, null]], "troubleshooting & utilities": [[49, null]], "Development": [[49, null]], "Reference": [[49, null]], "Indices and tables": [[49, "indices-and-tables"]], "Tutorials for Java Users": [[50, "tutorials-for-java-users"]], "Key Features": [[51, "key-features"]], "Ease-of-use: Python Interface": [[51, "ease-of-use-python-interface"]], "Graph Traversal Support, in Gremlin and Cypher": [[51, "graph-traversal-support-in-gremlin-and-cypher"]], "High Performant Built-in Algorithms": [[51, "high-performant-built-in-algorithms"]], "Extensible Algorithm Library for Graph Analytics": [[51, "extensible-algorithm-library-for-graph-analytics"]], "GNN Training & Inference": [[51, "gnn-training-inference"]], "Cloud Native Design": [[51, "cloud-native-design"]], "Across-Engine Workflow Orchestration": [[51, "across-engine-workflow-orchestration"]], "Design of GraphScope": [[52, "design-of-graphscope"]], "Motivation": [[52, "motivation"]], "Unified Graph Computing Platform": [[52, "unified-graph-computing-platform"]], "Application layer": [[52, "application-layer"]], "Execution engine layer": [[52, "execution-engine-layer"]], "Storage layer": [[52, "storage-layer"]], "Disaggregated Design for Diverse Graph Applications": [[52, "disaggregated-design-for-diverse-graph-applications"]], "GraphScope for BI analysis": [[52, "graphscope-for-bi-analysis"]], "GraphScope for high QPS queries": [[52, "graphscope-for-high-qps-queries"]], "GraphScope for graph analytics": [[52, "graphscope-for-graph-analytics"]], "GraphScope for learning": [[52, "graphscope-for-learning"]], "One-stop Graph Processing": [[53, "one-stop-graph-processing"]], "Graph Interactive Query Quick Start": [[53, "graph-interactive-query-quick-start"]], "Graph Analytics Quick Start": [[53, "graph-analytics-quick-start"]], "Graph Learning Quick Start": [[53, "graph-learning-quick-start"]], "Glossary": [[54, "glossary"]], "GRAPE": [[54, "grape"]], "GAE": [[54, "gae"]], "Groot": [[54, "groot"], [283, "groot"]], "vineyard": [[54, "vineyard"]], "GAIA": [[54, "gaia"]], "GAIA-IR": [[54, "gaia-ir"]], "Pegasus": [[54, "pegasus"]], "PIE-model": [[54, "pie-model"]], "GAS-model": [[54, "gas-model"]], "FLASH": [[54, "flash"]], "Ingress": [[54, "ingress"]], "Graph Analytics Workloads": [[55, "graph-analytics-workloads"]], "What is Graph Analytics": [[55, "what-is-graph-analytics"]], "Challenges of Graph Analytics on Large Graphs": [[55, "challenges-of-graph-analytics-on-large-graphs"]], "What can GraphScope Do": [[55, "what-can-graphscope-do"]], "Graph Interactive Workloads": [[56, "graph-interactive-workloads"]], "Tinkerpop and Gremlin": [[56, "tinkerpop-and-gremlin"]], "Graph Traversal": [[56, "graph-traversal"], [125, "graph-traversal"]], "Pattern Matching": [[56, "pattern-matching"]], "Compatibility with TinkerPop": [[56, "compatibility-with-tinkerpop"]], "Property Graph Constraints": [[56, "property-graph-constraints"]], "Graph Learning Workloads": [[57, "graph-learning-workloads"]], "Graph Neural Networks": [[57, "graph-neural-networks"]], "Graph Learning Models": [[57, "graph-learning-models"]], "Subgraph Sampling": [[57, "subgraph-sampling"]], "Developing Your Own Model": [[57, "developing-your-own-model"], [120, "developing-your-own-model"]], "Sampling & Output Transformation": [[57, "sampling-output-transformation"]], "Model": [[57, "model"]], "Loss Function and Training Process": [[57, "loss-function-and-training-process"], [120, "loss-function-and-training-process"]], "Performance and Benchmark": [[58, "performance-and-benchmark"]], "Results": [[58, "results"]], "Performance on GPUs": [[58, "performance-on-gpus"]], "Reproducing the results": [[58, "reproducing-the-results"]], "Tutorials for Python Users": [[59, "tutorials-for-python-users"]], "Analytical Engine API Reference": [[60, "analytical-engine-api-reference"]], "Analytical Engine": [[60, "analytical-engine"]], "Fragments in GraphScope": [[60, "fragments-in-graphscope"]], "Analytical Apps": [[60, "analytical-apps"]], "Analytical Workers": [[60, "analytical-workers"]], "App\u2019s Context": [[60, "app-s-context"]], "Analytical App": [[61, "analytical-app"]], "AppAssets": [[61, "appassets"]], "JavaApp": [[61, "javaapp"]], "App object": [[61, "app-object"]], "Functions": [[61, "functions"], [63, "functions"], [138, "functions"]], "BuiltIn apps": [[61, "builtin-apps"]], "Context": [[62, "context"]], "Context object": [[62, "context-object"]], "Cython SDK API": [[63, "cython-sdk-api"]], "Pregel": [[63, "pregel"]], "PIE": [[63, "pie"]], "GraphScope types": [[63, "graphscope-types"]], "About Grape JDK": [[64, "about-grape-jdk"]], "Project Structure": [[64, "project-structure"]], "Building from source": [[64, "building-from-source"]], "Java Reference (javadoc)": [[65, "java-reference-javadoc"]], "graphscope.Vertex": [[66, "graphscope-vertex"]], "graphscope.declare": [[67, "graphscope-declare"]], "graphscope.framework.app.load_app": [[68, "graphscope-framework-app-load-app"]], "graphscope.framework.dag_utils.add_column": [[69, "graphscope-framework-dag-utils-add-column"]], "graphscope.framework.dag_utils.add_labels_to_graph": [[70, "graphscope-framework-dag-utils-add-labels-to-graph"]], "graphscope.framework.dag_utils.arrow_to_dynamic": [[71, "graphscope-framework-dag-utils-arrow-to-dynamic"]], "graphscope.framework.dag_utils.bind_app": [[72, "graphscope-framework-dag-utils-bind-app"]], "graphscope.framework.dag_utils.clear_edges": [[73, "graphscope-framework-dag-utils-clear-edges"]], "graphscope.framework.dag_utils.clear_graph": [[74, "graphscope-framework-dag-utils-clear-graph"]], "graphscope.framework.dag_utils.context_to_dataframe": [[75, "graphscope-framework-dag-utils-context-to-dataframe"]], "graphscope.framework.dag_utils.context_to_numpy": [[76, "graphscope-framework-dag-utils-context-to-numpy"]], "graphscope.framework.dag_utils.copy_graph": [[77, "graphscope-framework-dag-utils-copy-graph"]], "graphscope.framework.dag_utils.create_app": [[78, "graphscope-framework-dag-utils-create-app"]], "graphscope.framework.dag_utils.create_graph": [[79, "graphscope-framework-dag-utils-create-graph"]], "graphscope.framework.dag_utils.create_graph_view": [[80, "graphscope-framework-dag-utils-create-graph-view"]], "graphscope.framework.dag_utils.create_loader": [[81, "graphscope-framework-dag-utils-create-loader"]], "graphscope.framework.dag_utils.create_subgraph": [[82, "graphscope-framework-dag-utils-create-subgraph"]], "graphscope.framework.dag_utils.create_unload_op": [[83, "graphscope-framework-dag-utils-create-unload-op"]], "graphscope.framework.dag_utils.dynamic_to_arrow": [[84, "graphscope-framework-dag-utils-dynamic-to-arrow"]], "graphscope.framework.dag_utils.fetch_gremlin_result": [[85, "graphscope-framework-dag-utils-fetch-gremlin-result"]], "graphscope.framework.dag_utils.get_context_data": [[86, "graphscope-framework-dag-utils-get-context-data"]], "graphscope.framework.dag_utils.graph_to_dataframe": [[87, "graphscope-framework-dag-utils-graph-to-dataframe"]], "graphscope.framework.dag_utils.graph_to_numpy": [[88, "graphscope-framework-dag-utils-graph-to-numpy"]], "graphscope.framework.dag_utils.gremlin_query": [[89, "graphscope-framework-dag-utils-gremlin-query"]], "graphscope.framework.dag_utils.gremlin_to_subgraph": [[90, "graphscope-framework-dag-utils-gremlin-to-subgraph"]], "graphscope.framework.dag_utils.modify_edges": [[91, "graphscope-framework-dag-utils-modify-edges"]], "graphscope.framework.dag_utils.modify_vertices": [[92, "graphscope-framework-dag-utils-modify-vertices"]], "graphscope.framework.dag_utils.output": [[93, "graphscope-framework-dag-utils-output"]], "graphscope.framework.dag_utils.project_arrow_property_graph": [[94, "graphscope-framework-dag-utils-project-arrow-property-graph"]], "graphscope.framework.dag_utils.project_to_simple": [[95, "graphscope-framework-dag-utils-project-to-simple"]], "graphscope.framework.dag_utils.report_graph": [[96, "graphscope-framework-dag-utils-report-graph"]], "graphscope.framework.dag_utils.run_app": [[97, "graphscope-framework-dag-utils-run-app"]], "graphscope.framework.dag_utils.to_data_sink": [[98, "graphscope-framework-dag-utils-to-data-sink"]], "graphscope.framework.dag_utils.to_directed": [[99, "graphscope-framework-dag-utils-to-directed"]], "graphscope.framework.dag_utils.to_undirected": [[100, "graphscope-framework-dag-utils-to-undirected"]], "graphscope.framework.dag_utils.to_vineyard_dataframe": [[101, "graphscope-framework-dag-utils-to-vineyard-dataframe"]], "graphscope.framework.dag_utils.to_vineyard_tensor": [[102, "graphscope-framework-dag-utils-to-vineyard-tensor"]], "graphscope.framework.dag_utils.unload_app": [[103, "graphscope-framework-dag-utils-unload-app"]], "graphscope.framework.dag_utils.unload_context": [[104, "graphscope-framework-dag-utils-unload-context"]], "graphscope.framework.dag_utils.unload_graph": [[105, "graphscope-framework-dag-utils-unload-graph"]], "graphscope.framework.operation.Operation.__init__": [[106, "graphscope-framework-operation-operation-init"]], "graphscope.framework.operation.Operation.as_op_def": [[107, "graphscope-framework-operation-operation-as-op-def"]], "graphscope.framework.operation.Operation.eval": [[108, "graphscope-framework-operation-operation-eval"]], "graphscope.framework.operation.Operation.evaluated": [[109, "graphscope-framework-operation-operation-evaluated"]], "graphscope.framework.operation.Operation.key": [[110, "graphscope-framework-operation-operation-key"]], "graphscope.framework.operation.Operation.signature": [[111, "graphscope-framework-operation-operation-signature"]], "graphscope.g": [[112, "graphscope-g"]], "graphscope.get_default_session": [[113, "graphscope-get-default-session"]], "graphscope.get_option": [[114, "graphscope-get-option"]], "graphscope.graphlearn": [[115, "graphscope-graphlearn"]], "graphscope.gremlin": [[116, "graphscope-gremlin"]], "graphscope.has_default_session": [[117, "graphscope-has-default-session"]], "graphscope.session": [[118, "graphscope-session"]], "graphscope.set_option": [[119, "graphscope-set-option"]], "How to Build a Graph Learning Algorithm": [[120, "how-to-build-a-graph-learning-algorithm"]], "Sampling": [[120, "sampling"]], "Encoder": [[120, "encoder"], [128, "encoder"]], "Data Source": [[121, "data-source"]], "1 Data format": [[121, "data-format"]], "1.1 Basic format": [[121, "basic-format"]], "1.2 Attribute format\uff08ATTRIBUTED\uff09": [[121, "attribute-format-attributed"]], "1.3 Weight format\uff08WEIGHTED\uff09": [[121, "weight-format-weighted"]], "1.4 Label format\uff08LABELED\uff09": [[121, "label-format-labeled"]], "1.5 Putting together": [[121, "putting-together"]], "2 Data source type": [[121, "data-source-type"]], "2.2 Alibaba Cloud MaxCompute data table": [[121, "alibaba-cloud-maxcompute-data-table"]], "3 User API": [[121, "user-api"]], "Graph Object": [[122, "graph-object"]], "2 Describe the Topology": [[122, "describe-the-topology"]], "3.1 Stand-alone Mode": [[122, "stand-alone-mode"]], "3.2 Distributed Mode \u2013 Client/Server Mode": [[122, "distributed-mode-client-server-mode"]], "Graph Query": [[123, "graph-query"]], "Graph Sampling": [[124, "graph-sampling"]], "1 Introduction": [[124, "introduction"]], "Graph Sampling Language\uff08GSL)": [[126, "graph-sampling-language-gsl"]], "Install from pip": [[127, "install-from-pip"]], "Get wheel package": [[127, "get-wheel-package"]], "Install using pip": [[127, "install-using-pip"]], "Install TensorFlow": [[127, "install-tensorflow"]], "Build from source": [[127, "build-from-source"]], "Install git": [[127, "install-git"]], "Install dependent libraries": [[127, "install-dependent-libraries"]], "Compile": [[127, "compile"], [130, "compile"]], "Install": [[127, "install"]], "Run test": [[127, "run-test"]], "Docker image": [[127, "docker-image"]], "Graph Learning Model": [[128, "graph-learning-model"]], "Data model": [[128, "data-model"]], "Negative Sampling": [[129, "negative-sampling"]], "Defining Your Own Operator": [[130, "defining-your-own-operator"]], "Programming Interface": [[130, "programming-interface"]], "Distributed Runtime Design": [[130, "distributed-runtime-design"]], "Implement a New Operator": [[130, "implement-a-new-operator"]], "Clone source code": [[130, "clone-source-code"]], "Implement your operator class": [[130, "implement-your-operator-class"]], "Register Operator": [[130, "register-operator"]], "How to Use an Operator": [[130, "how-to-use-an-operator"]], "Integrating Other Data Sources": [[131, "integrating-other-data-sources"]], "File System Interface": [[131, "file-system-interface"]], "ByteStreamAccessFile": [[131, "bytestreamaccessfile"]], "StructuredAccessFile": [[131, "structuredaccessfile"]], "WritableFile": [[131, "writablefile"]], "Register with Scheme": [[131, "register-with-scheme"]], "Quick Start": [[132, "quick-start"]], "1 Trying out the built-in models": [[132, "trying-out-the-built-in-models"]], "2 How to use the GL APIs": [[132, "how-to-use-the-gl-apis"]], "3 Developing a GNN model": [[132, "developing-a-gnn-model"]], "3.1 Data Preparation": [[132, "data-preparation"]], "3.2 Graph Construction": [[132, "graph-construction"]], "3.3 Graph Sampling": [[132, "graph-sampling"]], "3.4 GNN Model": [[132, "gnn-model"]], "System configuration": [[133, "system-configuration"]], "Graph": [[134, "graph"], [138, "graph"], [272, "graph"]], "Graph object": [[134, "graph-object"]], "Loader object": [[134, "loader-object"]], "Graph Functions": [[134, "graph-functions"]], "Interactive Query": [[135, "interactive-query"]], "Builtin algorithms": [[137, "builtin-algorithms"]], "Nodes": [[138, "nodes"]], "Edges": [[138, "edges"]], "Self loops": [[138, "self-loops"]], "Attributes": [[138, "attributes"]], "Freezing graph structure": [[138, "freezing-graph-structure"]], "graphscope.nx.classes.function.add_cycle": [[139, "graphscope-nx-classes-function-add-cycle"]], "graphscope.nx.classes.function.add_path": [[140, "graphscope-nx-classes-function-add-path"]], "graphscope.nx.classes.function.add_star": [[141, "graphscope-nx-classes-function-add-star"]], "graphscope.nx.classes.function.all_neighbors": [[142, "graphscope-nx-classes-function-all-neighbors"]], "graphscope.nx.classes.function.common_neighbors": [[143, "graphscope-nx-classes-function-common-neighbors"]], "graphscope.nx.classes.function.create_empty_copy": [[144, "graphscope-nx-classes-function-create-empty-copy"]], "graphscope.nx.classes.function.degree": [[145, "graphscope-nx-classes-function-degree"]], "graphscope.nx.classes.function.degree_histogram": [[146, "graphscope-nx-classes-function-degree-histogram"]], "graphscope.nx.classes.function.density": [[147, "graphscope-nx-classes-function-density"]], "graphscope.nx.classes.function.edge_subgraph": [[148, "graphscope-nx-classes-function-edge-subgraph"]], "graphscope.nx.classes.function.edges": [[149, "graphscope-nx-classes-function-edges"]], "graphscope.nx.classes.function.freeze": [[150, "graphscope-nx-classes-function-freeze"]], "graphscope.nx.classes.function.induced_subgraph": [[151, "graphscope-nx-classes-function-induced-subgraph"]], "graphscope.nx.classes.function.info": [[152, "graphscope-nx-classes-function-info"]], "graphscope.nx.classes.function.is_directed": [[153, "graphscope-nx-classes-function-is-directed"]], "graphscope.nx.classes.function.is_empty": [[154, "graphscope-nx-classes-function-is-empty"]], "graphscope.nx.classes.function.is_frozen": [[155, "graphscope-nx-classes-function-is-frozen"]], "graphscope.nx.classes.function.is_negatively_weighted": [[156, "graphscope-nx-classes-function-is-negatively-weighted"]], "graphscope.nx.classes.function.is_weighted": [[157, "graphscope-nx-classes-function-is-weighted"]], "graphscope.nx.classes.function.neighbors": [[158, "graphscope-nx-classes-function-neighbors"]], "graphscope.nx.classes.function.nodes": [[159, "graphscope-nx-classes-function-nodes"]], "graphscope.nx.classes.function.nodes_with_selfloops": [[160, "graphscope-nx-classes-function-nodes-with-selfloops"]], "graphscope.nx.classes.function.non_edges": [[161, "graphscope-nx-classes-function-non-edges"]], "graphscope.nx.classes.function.non_neighbors": [[162, "graphscope-nx-classes-function-non-neighbors"]], "graphscope.nx.classes.function.number_of_edges": [[163, "graphscope-nx-classes-function-number-of-edges"]], "graphscope.nx.classes.function.number_of_nodes": [[164, "graphscope-nx-classes-function-number-of-nodes"]], "graphscope.nx.classes.function.number_of_selfloops": [[165, "graphscope-nx-classes-function-number-of-selfloops"]], "graphscope.nx.classes.function.selfloop_edges": [[166, "graphscope-nx-classes-function-selfloop-edges"]], "graphscope.nx.classes.function.subgraph": [[167, "graphscope-nx-classes-function-subgraph"]], "graphscope.nx.classes.function.to_directed": [[168, "graphscope-nx-classes-function-to-directed"]], "graphscope.nx.classes.function.to_undirected": [[169, "graphscope-nx-classes-function-to-undirected"]], "graphscope.nx.generators.atlas.graph_atlas": [[170, "graphscope-nx-generators-atlas-graph-atlas"]], "graphscope.nx.generators.atlas.graph_atlas_g": [[171, "graphscope-nx-generators-atlas-graph-atlas-g"]], "graphscope.nx.generators.classic.balanced_tree": [[172, "graphscope-nx-generators-classic-balanced-tree"]], "graphscope.nx.generators.classic.barbell_graph": [[173, "graphscope-nx-generators-classic-barbell-graph"]], "graphscope.nx.generators.classic.binomial_tree": [[174, "graphscope-nx-generators-classic-binomial-tree"]], "graphscope.nx.generators.classic.circulant_graph": [[175, "graphscope-nx-generators-classic-circulant-graph"]], "graphscope.nx.generators.classic.circular_ladder_graph": [[176, "graphscope-nx-generators-classic-circular-ladder-graph"]], "graphscope.nx.generators.classic.complete_graph": [[177, "graphscope-nx-generators-classic-complete-graph"]], "graphscope.nx.generators.classic.complete_multipartite_graph": [[178, "graphscope-nx-generators-classic-complete-multipartite-graph"]], "graphscope.nx.generators.classic.cycle_graph": [[179, "graphscope-nx-generators-classic-cycle-graph"]], "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph": [[180, "graphscope-nx-generators-classic-dorogovtsev-goltsev-mendes-graph"]], "graphscope.nx.generators.classic.empty_graph": [[181, "graphscope-nx-generators-classic-empty-graph"]], "graphscope.nx.generators.classic.full_rary_tree": [[182, "graphscope-nx-generators-classic-full-rary-tree"]], "graphscope.nx.generators.classic.ladder_graph": [[183, "graphscope-nx-generators-classic-ladder-graph"]], "graphscope.nx.generators.classic.lollipop_graph": [[184, "graphscope-nx-generators-classic-lollipop-graph"]], "graphscope.nx.generators.classic.null_graph": [[185, "graphscope-nx-generators-classic-null-graph"]], "graphscope.nx.generators.classic.path_graph": [[186, "graphscope-nx-generators-classic-path-graph"]], "graphscope.nx.generators.classic.star_graph": [[187, "graphscope-nx-generators-classic-star-graph"]], "graphscope.nx.generators.classic.trivial_graph": [[188, "graphscope-nx-generators-classic-trivial-graph"]], "graphscope.nx.generators.classic.turan_graph": [[189, "graphscope-nx-generators-classic-turan-graph"]], "graphscope.nx.generators.classic.wheel_graph": [[190, "graphscope-nx-generators-classic-wheel-graph"]], "graphscope.nx.generators.community.LFR_benchmark_graph": [[191, "graphscope-nx-generators-community-lfr-benchmark-graph"]], "graphscope.nx.generators.community.caveman_graph": [[192, "graphscope-nx-generators-community-caveman-graph"]], "graphscope.nx.generators.community.connected_caveman_graph": [[193, "graphscope-nx-generators-community-connected-caveman-graph"]], "graphscope.nx.generators.community.gaussian_random_partition_graph": [[194, "graphscope-nx-generators-community-gaussian-random-partition-graph"]], "graphscope.nx.generators.community.planted_partition_graph": [[195, "graphscope-nx-generators-community-planted-partition-graph"]], "graphscope.nx.generators.community.random_partition_graph": [[196, "graphscope-nx-generators-community-random-partition-graph"]], "graphscope.nx.generators.community.relaxed_caveman_graph": [[197, "graphscope-nx-generators-community-relaxed-caveman-graph"]], "graphscope.nx.generators.community.ring_of_cliques": [[198, "graphscope-nx-generators-community-ring-of-cliques"]], "graphscope.nx.generators.community.stochastic_block_model": [[199, "graphscope-nx-generators-community-stochastic-block-model"]], "graphscope.nx.generators.community.windmill_graph": [[200, "graphscope-nx-generators-community-windmill-graph"]], "graphscope.nx.generators.degree_seq.configuration_model": [[201, "graphscope-nx-generators-degree-seq-configuration-model"]], "graphscope.nx.generators.degree_seq.degree_sequence_tree": [[202, "graphscope-nx-generators-degree-seq-degree-sequence-tree"]], "graphscope.nx.generators.degree_seq.directed_configuration_model": [[203, "graphscope-nx-generators-degree-seq-directed-configuration-model"]], "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph": [[204, "graphscope-nx-generators-degree-seq-directed-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.expected_degree_graph": [[205, "graphscope-nx-generators-degree-seq-expected-degree-graph"]], "graphscope.nx.generators.degree_seq.havel_hakimi_graph": [[206, "graphscope-nx-generators-degree-seq-havel-hakimi-graph"]], "graphscope.nx.generators.degree_seq.random_degree_sequence_graph": [[207, "graphscope-nx-generators-degree-seq-random-degree-sequence-graph"]], "graphscope.nx.generators.directed.gn_graph": [[208, "graphscope-nx-generators-directed-gn-graph"]], "graphscope.nx.generators.directed.gnc_graph": [[209, "graphscope-nx-generators-directed-gnc-graph"]], "graphscope.nx.generators.directed.gnr_graph": [[210, "graphscope-nx-generators-directed-gnr-graph"]], "graphscope.nx.generators.directed.random_k_out_graph": [[211, "graphscope-nx-generators-directed-random-k-out-graph"]], "graphscope.nx.generators.directed.scale_free_graph": [[212, "graphscope-nx-generators-directed-scale-free-graph"]], "graphscope.nx.generators.duplication.duplication_divergence_graph": [[213, "graphscope-nx-generators-duplication-duplication-divergence-graph"]], "graphscope.nx.generators.duplication.partial_duplication_graph": [[214, "graphscope-nx-generators-duplication-partial-duplication-graph"]], "graphscope.nx.generators.ego.ego_graph": [[215, "graphscope-nx-generators-ego-ego-graph"]], "graphscope.nx.generators.expanders.chordal_cycle_graph": [[216, "graphscope-nx-generators-expanders-chordal-cycle-graph"]], "graphscope.nx.generators.expanders.margulis_gabber_galil_graph": [[217, "graphscope-nx-generators-expanders-margulis-gabber-galil-graph"]], "graphscope.nx.generators.expanders.paley_graph": [[218, "graphscope-nx-generators-expanders-paley-graph"]], "graphscope.nx.generators.geometric.geographical_threshold_graph": [[219, "graphscope-nx-generators-geometric-geographical-threshold-graph"]], "graphscope.nx.generators.geometric.random_geometric_graph": [[220, "graphscope-nx-generators-geometric-random-geometric-graph"]], "graphscope.nx.generators.geometric.soft_random_geometric_graph": [[221, "graphscope-nx-generators-geometric-soft-random-geometric-graph"]], "graphscope.nx.generators.geometric.thresholded_random_geometric_graph": [[222, "graphscope-nx-generators-geometric-thresholded-random-geometric-graph"]], "graphscope.nx.generators.geometric.waxman_graph": [[223, "graphscope-nx-generators-geometric-waxman-graph"]], "graphscope.nx.generators.harary_graph.hkn_harary_graph": [[224, "graphscope-nx-generators-harary-graph-hkn-harary-graph"]], "graphscope.nx.generators.harary_graph.hnm_harary_graph": [[225, "graphscope-nx-generators-harary-graph-hnm-harary-graph"]], "graphscope.nx.generators.intersection.general_random_intersection_graph": [[226, "graphscope-nx-generators-intersection-general-random-intersection-graph"]], "graphscope.nx.generators.intersection.k_random_intersection_graph": [[227, "graphscope-nx-generators-intersection-k-random-intersection-graph"]], "graphscope.nx.generators.intersection.uniform_random_intersection_graph": [[228, "graphscope-nx-generators-intersection-uniform-random-intersection-graph"]], "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph": [[229, "graphscope-nx-generators-joint-degree-seq-directed-joint-degree-graph"]], "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree": [[230, "graphscope-nx-generators-joint-degree-seq-is-valid-directed-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree": [[231, "graphscope-nx-generators-joint-degree-seq-is-valid-joint-degree"]], "graphscope.nx.generators.joint_degree_seq.joint_degree_graph": [[232, "graphscope-nx-generators-joint-degree-seq-joint-degree-graph"]], "graphscope.nx.generators.mycielski.mycielski_graph": [[233, "graphscope-nx-generators-mycielski-mycielski-graph"]], "graphscope.nx.generators.mycielski.mycielskian": [[234, "graphscope-nx-generators-mycielski-mycielskian"]], "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees": [[235, "graphscope-nx-generators-nonisomorphic-trees-nonisomorphic-trees"]], "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees": [[236, "graphscope-nx-generators-nonisomorphic-trees-number-of-nonisomorphic-trees"]], "graphscope.nx.generators.small.LCF_graph": [[237, "graphscope-nx-generators-small-lcf-graph"]], "graphscope.nx.generators.small.bull_graph": [[238, "graphscope-nx-generators-small-bull-graph"]], "graphscope.nx.generators.small.chvatal_graph": [[239, "graphscope-nx-generators-small-chvatal-graph"]], "graphscope.nx.generators.small.cubical_graph": [[240, "graphscope-nx-generators-small-cubical-graph"]], "graphscope.nx.generators.small.desargues_graph": [[241, "graphscope-nx-generators-small-desargues-graph"]], "graphscope.nx.generators.small.diamond_graph": [[242, "graphscope-nx-generators-small-diamond-graph"]], "graphscope.nx.generators.small.dodecahedral_graph": [[243, "graphscope-nx-generators-small-dodecahedral-graph"]], "graphscope.nx.generators.small.frucht_graph": [[244, "graphscope-nx-generators-small-frucht-graph"]], "graphscope.nx.generators.small.heawood_graph": [[245, "graphscope-nx-generators-small-heawood-graph"]], "graphscope.nx.generators.small.house_graph": [[246, "graphscope-nx-generators-small-house-graph"]], "graphscope.nx.generators.small.house_x_graph": [[247, "graphscope-nx-generators-small-house-x-graph"]], "graphscope.nx.generators.small.icosahedral_graph": [[248, "graphscope-nx-generators-small-icosahedral-graph"]], "graphscope.nx.generators.small.krackhardt_kite_graph": [[249, "graphscope-nx-generators-small-krackhardt-kite-graph"]], "graphscope.nx.generators.small.make_small_graph": [[250, "graphscope-nx-generators-small-make-small-graph"]], "graphscope.nx.generators.small.moebius_kantor_graph": [[251, "graphscope-nx-generators-small-moebius-kantor-graph"]], "graphscope.nx.generators.small.octahedral_graph": [[252, "graphscope-nx-generators-small-octahedral-graph"]], "graphscope.nx.generators.small.pappus_graph": [[253, "graphscope-nx-generators-small-pappus-graph"]], "graphscope.nx.generators.small.petersen_graph": [[254, "graphscope-nx-generators-small-petersen-graph"]], "graphscope.nx.generators.small.sedgewick_maze_graph": [[255, "graphscope-nx-generators-small-sedgewick-maze-graph"]], "graphscope.nx.generators.small.tetrahedral_graph": [[256, "graphscope-nx-generators-small-tetrahedral-graph"]], "graphscope.nx.generators.small.truncated_cube_graph": [[257, "graphscope-nx-generators-small-truncated-cube-graph"]], "graphscope.nx.generators.small.truncated_tetrahedron_graph": [[258, "graphscope-nx-generators-small-truncated-tetrahedron-graph"]], "graphscope.nx.generators.small.tutte_graph": [[259, "graphscope-nx-generators-small-tutte-graph"]], "graphscope.nx.generators.social.davis_southern_women_graph": [[260, "graphscope-nx-generators-social-davis-southern-women-graph"]], "graphscope.nx.generators.social.florentine_families_graph": [[261, "graphscope-nx-generators-social-florentine-families-graph"]], "graphscope.nx.generators.social.karate_club_graph": [[262, "graphscope-nx-generators-social-karate-club-graph"]], "graphscope.nx.generators.social.les_miserables_graph": [[263, "graphscope-nx-generators-social-les-miserables-graph"]], "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge": [[264, "graphscope-nx-generators-spectral-graph-forge-spectral-graph-forge"]], "graphscope.nx.generators.sudoku.sudoku_graph": [[265, "graphscope-nx-generators-sudoku-sudoku-graph"]], "graphscope.nx.generators.trees.prefix_tree": [[266, "graphscope-nx-generators-trees-prefix-tree"]], "graphscope.nx.generators.trees.random_tree": [[267, "graphscope-nx-generators-trees-random-tree"]], "graphscope.nx.generators.triads.triad_graph": [[268, "graphscope-nx-generators-triads-triad-graph"]], "networkx.generators.internet_as_graphs.random_internet_as_graph": [[269, "networkx-generators-internet-as-graphs-random-internet-as-graph"]], "networkx.generators.stochastic.stochastic_graph": [[270, "networkx-generators-stochastic-stochastic-graph"]], "Graph generators": [[271, "graph-generators"]], "Atlas": [[271, "module-graphscope.nx.generators.atlas"]], "Classic": [[271, "module-graphscope.nx.generators.classic"]], "Expanders": [[271, "module-graphscope.nx.generators.expanders"]], "Small": [[271, "module-graphscope.nx.generators.small"]], "Duplication Divergence": [[271, "module-graphscope.nx.generators.duplication"]], "Degree Sequence": [[271, "module-graphscope.nx.generators.degree_seq"]], "Directed": [[271, "module-graphscope.nx.generators.directed"]], "Geometric": [[271, "module-graphscope.nx.generators.geometric"]], "Ego Graph": [[271, "module-graphscope.nx.generators.ego"]], "Stochastic": [[271, "module-networkx.generators.stochastic"]], "AS graph": [[271, "module-networkx.generators.internet_as_graphs"]], "Intersection": [[271, "module-graphscope.nx.generators.intersection"]], "Social Networks": [[271, "module-graphscope.nx.generators.social"]], "Community": [[271, "module-graphscope.nx.generators.community"]], "Spectral": [[271, "module-graphscope.nx.generators.spectral_graph_forge"]], "Trees": [[271, "module-graphscope.nx.generators.trees"]], "Non Isomorphic Trees": [[271, "module-graphscope.nx.generators.nonisomorphic_trees"]], "Triads": [[271, "module-graphscope.nx.generators.triads"]], "Joint Degree Sequence": [[271, "module-graphscope.nx.generators.joint_degree_seq"]], "Mycielski": [[271, "module-graphscope.nx.generators.mycielski"]], "Harary Graph": [[271, "module-graphscope.nx.generators.harary_graph"]], "Sudoku": [[271, "module-graphscope.nx.generators.sudoku"]], "Graph types": [[272, "graph-types"]], "DiGraph": [[272, "digraph"]], "NetworkX-style API": [[273, "networkx-style-api"]], "Reading graphs": [[274, "reading-graphs"]], "Edge List": [[274, "edge-list"]], "Adjacency List": [[274, "adjacency-list"]], "Graph Transformation": [[275, "graph-transformation"]], "Operation": [[276, "operation"]], "Operation object": [[276, "operation-object"]], "BuiltIn operations": [[276, "module-graphscope.framework.dag_utils"]], "Python API Reference": [[277, "python-api-reference"]], "Selector": [[278, "selector"]], "Selectors in different context": [[278, "selectors-in-different-context"]], "TensorContext": [[278, "tensorcontext"]], "VertexDataContext": [[278, "vertexdatacontext"]], "LabeledVertexDataContext": [[278, "labeledvertexdatacontext"]], "VertexPropertyContext": [[278, "vertexpropertycontext"]], "LabeledVertexPropertyContext": [[278, "labeledvertexpropertycontext"]], "Methods that use selectors": [[278, "methods-that-use-selectors"]], "One-dimensional results": [[278, "one-dimensional-results"]], "Multi-dimensional results": [[278, "multi-dimensional-results"]], "Vertex Range": [[278, "vertex-range"]], "Session": [[279, "session"]], "Session object": [[279, "session-object"]], "Session Functions": [[279, "session-functions"]], "Resources Estimator": [[280, "resources-estimator"]], "GRIN: Unified Interface": [[282, "grin-unified-interface"]], "Tutorials for Gremlin Users": [[284, "tutorials-for-gremlin-users"]], "Introduction": [[284, "introduction"]], "Standard Steps": [[284, "standard-steps"]], "Source": [[284, "source"]], "V()": [[284, "v"]], "E()": [[284, "e"]], "Expand": [[284, "expand"]], "outE()": [[284, "oute"]], "inE()": [[284, "ine"]], "bothE()": [[284, "bothe"]], "out()": [[284, "out"], [284, "id5"]], "in()": [[284, "in"], [284, "id6"]], "both()": [[284, "both"], [284, "id7"]], "outV()": [[284, "outv"]], "inV()": [[284, "inv"]], "otherV()": [[284, "otherv"]], "bothV()": [[284, "bothv"]], "Filter": [[284, "filter"]], "hasId()": [[284, "hasid"]], "hasLabel()": [[284, "haslabel"]], "has()": [[284, "has"]], "hasNot()": [[284, "hasnot"]], "is()": [[284, "is"]], "where(traversal)": [[284, "where-traversal"]], "where(predicate)": [[284, "where-predicate"]], "not(traversal)": [[284, "not-traversal"]], "dedup()": [[284, "dedup"]], "Project": [[284, "project"]], "id()": [[284, "id"]], "label()": [[284, "label"]], "constant()": [[284, "constant"]], "valueMap()": [[284, "valuemap"]], "values()": [[284, "values"]], "select()": [[284, "select"]], "Aggregate": [[284, "aggregate"]], "count()": [[284, "count"]], "fold()": [[284, "fold"]], "sum()": [[284, "sum"]], "min()": [[284, "min"]], "max()": [[284, "max"]], "mean()": [[284, "mean"]], "group()": [[284, "group"]], "groupCount()": [[284, "groupcount"]], "Order": [[284, "order"]], "order()": [[284, "id1"]], "Statistics": [[284, "statistics"]], "limit()": [[284, "limit"]], "coin()": [[284, "coin"]], "Union": [[284, "union"]], "union()": [[284, "id2"]], "Match": [[284, "match"]], "match()": [[284, "id3"]], "Subgraph": [[284, "subgraph"]], "subgraph()": [[284, "id4"]], "Syntactic Sugars": [[284, "syntactic-sugars"]], "PathExpand": [[284, "pathexpand"]], "endV()": [[284, "endv"]], "Expression": [[284, "expression"]], "Aggregate (Group)": [[284, "aggregate-group"]], "Limitations": [[284, "limitations"]], "To be Supported": [[284, "to-be-supported"]], "identity()": [[284, "identity"]], "elementMap()": [[284, "elementmap"]], "path()": [[284, "path"]], "unfold()": [[284, "unfold"]], "local()": [[284, "local"]], "Will Not be Supported": [[284, "will-not-be-supported"]], "repeat()": [[284, "repeat"]], "properties()": [[284, "properties"]], "sideEffect": [[284, "sideeffect"]], "branch": [[284, "branch"]], "Applications and algorithms": [[285, "applications-and-algorithms"]], "Bind application to graph": [[285, "bind-application-to-graph"]], "Built-in algorithms": [[285, "built-in-algorithms"]], "Scaling and repartitioning": [[286, "scaling-and-repartitioning"]], "Fennel": [[286, "fennel"]], "XtraPuLP": [[286, "xtrapulp"]], "Hybrid partitioning": [[286, "hybrid-partitioning"]], "User Guide and Examples of GAE": [[287, "user-guide-and-examples-of-gae"]], "Developing Your Algorithms with Python": [[287, "developing-your-algorithms-with-python"]], "Developing Your Algorithms with C++": [[287, "developing-your-algorithms-with-c"]], "Developing Your Algorithms with Java": [[287, "developing-your-algorithms-with-java"]], "User Guide and Examples of GIE": [[288, "user-guide-and-examples-of-gie"]], "User Guide and Examples of GLE": [[289, "user-guide-and-examples-of-gle"]], "Bulk Loader": [[290, "bulk-loader"]], "Error Codes": [[291, "error-codes"]], "Command-line Utility gs": [[292, "command-line-utility-gs"]], "How to Find Logs": [[293, "how-to-find-logs"]], "Monitoring": [[294, "monitoring"]], "\u56fe\u5206\u6790\u5f15\u64ce": [[295, "id1"]], "\u5185\u7f6e\u7b97\u6cd5": [[295, "id2"]], "\u5bf9\u8ba1\u7b97\u7ed3\u679c\u7684\u5904\u7406": [[295, "id3"]], "\u4f7f\u7528 PIE \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[295, "pie"]], "\u4f7f\u7528 Pregel \u7f16\u7a0b\u6a21\u578b\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[295, "pregel"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5\u4e2d\u4f7f\u7528 math.h \u4e2d\u7684\u51fd\u6570": [[295, "math-h"]], "\u8fd0\u884c\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[295, "id5"]], "\u8fd0\u884cJava\u7f16\u5199\u7684\u7b97\u6cd5": [[295, "java"]], "\u8fd0\u884c\u793a\u4f8b\u7684Java\u7b97\u6cd5": [[295, "id6"]], "\u4f7f\u7528Java\u7f16\u5199\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u56fe\u7b97\u6cd5": [[295, "id7"]], "\u90e8\u7f72": [[296, "id1"]], "\u4f7f\u7528Helm\u90e8\u7f72GraphScope": [[296, "helmgraphscope"]], "\u5728AWS/\u963f\u91cc\u4e91\u4e0a\u90e8\u7f72\u96c6\u7fa4": [[296, "aws"]], "\u672c\u5730\u90e8\u7f72GraphScope": [[296, "graphscope"]], "\u5f00\u53d1\u8005\u6307\u5357": [[297, "id1"]], "\u57fa\u4e8e Docker \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[297, "docker-graphscope"]], "\u57fa\u4e8e Kubernetes \u73af\u5883\u6784\u5efa\u5e76\u6d4b\u8bd5 GraphScope": [[297, "kubernetes-graphscope"]], "\u6784\u5efa Python Wheels": [[297, "python-wheels"]], "Linux": [[297, "linux"]], "macOS": [[297, "macos"]], "\u4ee3\u7801\u98ce\u683c": [[297, "id3"]], "\u5e38\u89c1\u95ee\u9898": [[298, "id1"]], "\u5feb\u901f\u4e0a\u624b": [[299, "id1"]], "\u793a\u4f8b: \u8bba\u6587\u5f15\u7528\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": [[299, "id3"]], "\u521b\u5efa\u4f1a\u8bdd": [[299, "id4"]], "\u4ea4\u4e92\u5f0f\u67e5\u8be2": [[299, "id6"]], "\u56fe\u5206\u6790": [[299, "id7"]], "\u56fe\u795e\u7ecf\u7f51\u7edc (GNNs)": [[299, "gnns"]], "\u5173\u95ed\u4f1a\u8bdd": [[299, "id8"]], "\u56fe\u7684\u53d8\u6362\u64cd\u4f5c": [[300, "graph-transformation"]], "\u6dfb\u52a0\u65b0\u7684\u6807\u7b7e": [[300, "id2"]], "\u6295\u5f71": [[300, "id3"]], "\u81ea\u52a8\u8f6c\u6362\u4e3a\u7b80\u5355\u56fe": [[300, "id4"]], "\u5c06\u8ba1\u7b97\u7ed3\u679c\u4f5c\u4e3a\u65b0\u7684\u5c5e\u6027\u52a0\u5165\u56fe\u4e2d": [[300, "id5"]], "GraphScope: \u4e00\u7ad9\u5f0f\u56fe\u8ba1\u7b97\u7cfb\u7edf": [[301, "graphscope"]], "\u76ee\u5f55": [[301, null], [306, null]], "API \u53c2\u8003": [[301, null]], "\u7d22\u5f15": [[301, "id1"]], "\u5b89\u88c5": [[302, "id1"]], "\u5355\u673a\u73af\u5883\u4e0b\u5b89\u88c5": [[302, "id2"]], "\u57fa\u4e8e Kubernetes \u5b89\u88c5 GraphScope \u5ba2\u6237\u7aef": [[302, "kubernetes-graphscope"]], "\u56fe\u4ea4\u4e92\u5f0f\u5206\u6790\u5f15\u64ce": [[303, "id1"]], "Apache TinkerPop": [[303, "apache-tinkerpop"]], "\u5229\u7528Python\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[303, "python-gremlin-graphscope"]], "\u5229\u7528Java\uff08Gremlin\uff09\u8fde\u63a5GraphScope": [[303, "java-gremlin-graphscope"]], "Gremlin Console\uff08\u5f00\u53d1\u63a7\u5236\u53f0\uff09": [[303, "id5"]], "Gremlin\u7f16\u7a0b\u5165\u95e8\u2013101": [[303, "gremlin-101"]], "\u56fe\u6570\u636e\u6a21\u578b": [[303, "id8"]], "\u67e5\u8be2\u8bed\u8a00": [[303, "id9"]], "\u4e00\u4e2a\u4f8b\u5b50": [[303, "id10"]], "Gremlin\u517c\u5bb9\u6027\uff08\u5bf9\u6bd4TinkerPop\uff09": [[303, "gremlin-tinkerpop"]], "\u5c5e\u6027\u56fe\u6a21\u578b\u7ea6\u675f": [[303, "id11"]], "\u5c1a\u4e0d\u652f\u6301\u7684\u529f\u80fd\u7279\u6027": [[303, "id12"]], "\u652f\u6301\u7684Gremlin\u64cd\u4f5c": [[303, "id13"]], "\u5df2\u77e5\u9650\u5236": [[303, "id14"]], "\u56fe\u5b66\u4e60\u5f15\u64ce": [[304, "id1"]], "\u56fe\u5b66\u4e60\u6a21\u578b": [[304, "id2"]], "\u6570\u636e\u6a21\u578b": [[304, "id3"]], "\u7f16\u7801\u5668": [[304, "id4"]], "\u81ea\u5b9a\u4e49\u7b97\u6cd5": [[304, "id5"]], "\u91c7\u6837": [[304, "id6"]], "\u56fe\u6570\u636e\u6d41": [[304, "id7"]], "\u6a21\u578b": [[304, "id8"]], "\u635f\u5931\u51fd\u6570\u548c\u8bad\u7ec3\u8fc7\u7a0b": [[304, "id9"]], "\u8f7d\u56fe": [[305, "loading-graphs"]], "\u8f7d\u5165\u5185\u7f6e\u6570\u636e\u96c6": [[305, "id3"]], "\u624b\u52a8\u914d\u7f6e\u56fe": [[305, "id4"]], "Build Vertex": [[305, "build-vertex"]], "vertices": [[305, "vertices"]], "Label": [[305, "label"]], "properties": [[305, "properties"], [305, "id7"]], "vid_field": [[305, "vid-field"]], "Build Edge": [[305, "build-edge"]], "edges": [[305, "edges"]], "label": [[305, "id6"]], "src_label and dst_label": [[305, "src-label-and-dst-label"]], "src_field and dst_field": [[305, "src-field-and-dst-field"]], "\u9ad8\u7ea7\u7528\u6cd5": [[305, "id8"]], "\u6ca1\u6709\u6b67\u4e49\u65f6\uff0c\u81ea\u52a8\u63a8\u65ad\u70b9\u6807\u7b7e": [[305, "id9"]], "\u4ece\u8fb9\u4e2d\u63a8\u65ad\u70b9": [[305, "id10"]], "\u591a\u79cd\u8fb9\u5173\u7cfb": [[305, "id11"]], "\u6307\u5b9a\u5c5e\u6027\u7684\u6570\u636e\u7c7b\u578b": [[305, "id12"]], "\u56fe\u7684\u5176\u4ed6\u53c2\u6570": [[305, "id13"]], "\u5b8c\u6574\u7684\u793a\u4f8b": [[305, "id14"]], "\u4ece Pandas \u6216 Numpy \u4e2d\u8f7d\u56fe": [[305, "pandas-numpy"]], "\u4ece Pandas \u4e2d\u8f7d\u56fe": [[305, "pandas"]], "\u4ece Numpy \u4e2d\u8f7d\u56fe": [[305, "numpy"]], "Loader \u7684\u53d8\u79cd": [[305, "loader"]], "\u5165\u95e8\u6559\u7a0b": [[306, "id1"]]}, "indexentries": {"gs::appbase (c++ class)": [[60, "_CPPv4I00EN2gs7AppBaseE"]], "gs::appbase::appbase (c++ function)": [[60, "_CPPv4N2gs7AppBase7AppBaseEv"]], "gs::appbase::inceval (c++ function)": [[60, "_CPPv4N2gs7AppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::peval (c++ function)": [[60, "_CPPv4N2gs7AppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::appbase::load_strategy (c++ member)": [[60, "_CPPv4N2gs7AppBase13load_strategyE"]], "gs::appbase::message_manager_t (c++ type)": [[60, "_CPPv4N2gs7AppBase17message_manager_tE"]], "gs::appbase::message_strategy (c++ member)": [[60, "_CPPv4N2gs7AppBase16message_strategyE"]], "gs::appbase::need_split_edges (c++ member)": [[60, "_CPPv4N2gs7AppBase16need_split_edgesE"]], "gs::appbase::~appbase (c++ function)": [[60, "_CPPv4N2gs7AppBaseD0Ev"]], "gs::appentry (c++ class)": [[60, "_CPPv4N2gs8AppEntryE"]], "gs::appentry::appentry (c++ function)": [[60, "_CPPv4N2gs8AppEntry8AppEntryENSt6stringENSt6stringE"]], "gs::appentry::createworker (c++ function)": [[60, "_CPPv4N2gs8AppEntry12CreateWorkerERKNSt10shared_ptrIvEERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::appentry::init (c++ function)": [[60, "_CPPv4N2gs8AppEntry4InitEv"]], "gs::appentry::query (c++ function)": [[60, "_CPPv4N2gs8AppEntry5QueryEPvRKN3rpc9QueryArgsERKNSt6stringERNSt10shared_ptrI16IFragmentWrapperEE"]], "gs::argtypeat (c++ struct)": [[60, "_CPPv4I_NSt6size_tE0EN2gs9ArgTypeAtE"]], "gs::argsnum (c++ struct)": [[60, "_CPPv4I0EN2gs7ArgsNumE"]], "gs::argsunpacker (c++ struct)": [[60, "_CPPv4I0EN2gs12ArgsUnpackerE"]], "gs::arrowfragmentloader (c++ class)": [[60, "_CPPv4I00I00E0EN2gs19ArrowFragmentLoaderE"]], "gs::arrowfragmentloader::addlabelstofragment (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader19AddLabelsToFragmentEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::addlabelstofragmentasfragmentgroup (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader34AddLabelsToFragmentAsFragmentGroupEN8vineyard8ObjectIDE"]], "gs::arrowfragmentloader::arrowfragmentloader (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecENSt10shared_ptrIN6detail5GraphEEE"], [60, "_CPPv4N2gs19ArrowFragmentLoader19ArrowFragmentLoaderERN8vineyard6ClientERKN5grape8CommSpecERKNSt6vectorINSt6stringEEERKNSt6vectorINSt6stringEEEbbb"]], "gs::arrowfragmentloader::loadedgetables (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader14LoadEdgeTablesEv"]], "gs::arrowfragmentloader::loadfragment (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader12LoadFragmentEv"]], "gs::arrowfragmentloader::loadfragmentasfragmentgroup (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader27LoadFragmentAsFragmentGroupEv"]], "gs::arrowfragmentloader::loadvertexedgetables (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader20LoadVertexEdgeTablesEv"]], "gs::arrowfragmentloader::loadvertextables (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader16LoadVertexTablesEv"]], "gs::arrowfragmentloader::initpartitioner (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoader15initPartitionerEv"]], "gs::arrowfragmentloader::~arrowfragmentloader (c++ function)": [[60, "_CPPv4N2gs19ArrowFragmentLoaderD0Ev"]], "gs::arrowprojectedfragment (c++ class)": [[60, "_CPPv4I00000EN2gs22ArrowProjectedFragmentE"]], "gs::arrowprojectedfragment::construct (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedfragment::create (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment6CreateEv"]], "gs::arrowprojectedfragment::getdata (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment7GetDataERK8vertex_t"]], "gs::arrowprojectedfragment::getedgenum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment10GetEdgeNumEv"]], "gs::arrowprojectedfragment::getfragid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment9GetFragIdERK8vertex_t"]], "gs::arrowprojectedfragment::getid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment5GetIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinedgenum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment12GetInEdgeNumEv"]], "gs::arrowprojectedfragment::getincomingadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t"], [60, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getincomingedgenum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment18GetIncomingEdgeNumEv"]], "gs::arrowprojectedfragment::getincominginnervertexadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getincomingoutervertexadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment29GetIncomingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment14GetInnerVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexgid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment17GetInnerVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment16GetInnerVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnervertexinternalid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment24GetInnerVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getinnerverticesnum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment19GetInnerVerticesNumEv"]], "gs::arrowprojectedfragment::getinternalid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13GetInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getlocalindegree (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment16GetLocalInDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getlocaloutdegree (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment17GetLocalOutDegreeERK8vertex_t"]], "gs::arrowprojectedfragment::getoutedgenum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13GetOutEdgeNumEv"]], "gs::arrowprojectedfragment::getoutervertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment14GetOuterVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexgid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment17GetOuterVertexGidERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment16GetOuterVertexIdERK8vertex_t"]], "gs::arrowprojectedfragment::getoutervertexinternalid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment24GetOuterVertexInternalIdERK8vertex_t"]], "gs::arrowprojectedfragment::getouterverticesnum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment19GetOuterVerticesNumEv"]], "gs::arrowprojectedfragment::getoutgoingadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t"], [60, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingAdjListERK8vertex_t5fid_t"]], "gs::arrowprojectedfragment::getoutgoingedgenum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment18GetOutgoingEdgeNumEv"]], "gs::arrowprojectedfragment::getoutgoinginnervertexadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingInnerVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::getoutgoingoutervertexadjlist (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment29GetOutgoingOuterVertexAdjListERK8vertex_t"]], "gs::arrowprojectedfragment::gettotalverticesnum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment19GetTotalVerticesNumEv"]], "gs::arrowprojectedfragment::getvertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment9GetVertexERK5oid_tR8vertex_t"]], "gs::arrowprojectedfragment::getverticesnum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment14GetVerticesNumEv"]], "gs::arrowprojectedfragment::gid2oid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment7Gid2OidERK5vid_t"]], "gs::arrowprojectedfragment::gid2vertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment10Gid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::iedests (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment7IEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::ioedests (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment8IOEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::innervertexgid2vertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment21InnerVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::innervertices (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13InnerVerticesEv"]], "gs::arrowprojectedfragment::isinnervertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13IsInnerVertexERK8vertex_t"]], "gs::arrowprojectedfragment::isoutervertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13IsOuterVertexERK8vertex_t"]], "gs::arrowprojectedfragment::mirrorvertices (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment14MirrorVerticesE5fid_t"]], "gs::arrowprojectedfragment::oedests (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment7OEDestsERK8vertex_t"]], "gs::arrowprojectedfragment::oid2gid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_t"], [60, "_CPPv4NK2gs22ArrowProjectedFragment7Oid2GidERK5oid_tR5vid_t"]], "gs::arrowprojectedfragment::outervertexgid2vertex (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment21OuterVertexGid2VertexERK5vid_tR8vertex_t"]], "gs::arrowprojectedfragment::outervertices (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesE5fid_t"], [60, "_CPPv4NK2gs22ArrowProjectedFragment13OuterVerticesEv"]], "gs::arrowprojectedfragment::preparetorunapp (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment15PrepareToRunAppERKN5grape8CommSpecEN5grape11PrepareConfE"]], "gs::arrowprojectedfragment::project (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment7ProjectENSt10shared_ptrIN8vineyard13ArrowFragmentI5oid_t5vid_t21property_vertex_map_tEEEERK10label_id_tRK9prop_id_tRK10label_id_tRK9prop_id_t"]], "gs::arrowprojectedfragment::vertex2gid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment10Vertex2GidERK8vertex_t"]], "gs::arrowprojectedfragment::vertices (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment8VerticesEv"]], "gs::arrowprojectedfragment::adj_list_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment10adj_list_tE"]], "gs::arrowprojectedfragment::const_adj_list_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment16const_adj_list_tE"]], "gs::arrowprojectedfragment::directed (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment8directedEv"]], "gs::arrowprojectedfragment::edata_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment7edata_tE"]], "gs::arrowprojectedfragment::edge_label (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment10edge_labelEv"]], "gs::arrowprojectedfragment::edge_prop_id (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment12edge_prop_idEv"]], "gs::arrowprojectedfragment::eid_array_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment11eid_array_tE"]], "gs::arrowprojectedfragment::eid_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment5eid_tE"]], "gs::arrowprojectedfragment::fid (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment3fidEv"]], "gs::arrowprojectedfragment::fnum (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment4fnumEv"]], "gs::arrowprojectedfragment::get_arrow_fragment (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment18get_arrow_fragmentEv"]], "gs::arrowprojectedfragment::get_edata_array_accessor (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment24get_edata_array_accessorEv"]], "gs::arrowprojectedfragment::get_ie_offsets_begin_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment24get_ie_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_ie_offsets_end_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment22get_ie_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_in_edges_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment16get_in_edges_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_begin_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment24get_oe_offsets_begin_ptrEv"]], "gs::arrowprojectedfragment::get_oe_offsets_end_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment22get_oe_offsets_end_ptrEv"]], "gs::arrowprojectedfragment::get_out_edges_ptr (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment17get_out_edges_ptrEv"]], "gs::arrowprojectedfragment::get_vdata_array_accessor (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragment24get_vdata_array_accessorEv"]], "gs::arrowprojectedfragment::inner_vertex_array_t (c++ type)": [[60, "_CPPv4I0EN2gs22ArrowProjectedFragment20inner_vertex_array_tE"]], "gs::arrowprojectedfragment::inner_vertices_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment16inner_vertices_tE"]], "gs::arrowprojectedfragment::internal_oid_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment14internal_oid_tE"]], "gs::arrowprojectedfragment::label_id_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment10label_id_tE"]], "gs::arrowprojectedfragment::load_strategy (c++ member)": [[60, "_CPPv4N2gs22ArrowProjectedFragment13load_strategyE"]], "gs::arrowprojectedfragment::nbr_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment5nbr_tE"]], "gs::arrowprojectedfragment::nbr_unit_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment10nbr_unit_tE"]], "gs::arrowprojectedfragment::oid_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment5oid_tE"]], "gs::arrowprojectedfragment::outer_vertex_array_t (c++ type)": [[60, "_CPPv4I0EN2gs22ArrowProjectedFragment20outer_vertex_array_tE"]], "gs::arrowprojectedfragment::outer_vertices_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment16outer_vertices_tE"]], "gs::arrowprojectedfragment::prop_id_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment9prop_id_tE"]], "gs::arrowprojectedfragment::property_graph_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment16property_graph_tE"]], "gs::arrowprojectedfragment::property_vertex_map_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment21property_vertex_map_tE"]], "gs::arrowprojectedfragment::sub_vertices_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment14sub_vertices_tE"]], "gs::arrowprojectedfragment::vdata_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment7vdata_tE"]], "gs::arrowprojectedfragment::vertex_array_t (c++ type)": [[60, "_CPPv4I0EN2gs22ArrowProjectedFragment14vertex_array_tE"]], "gs::arrowprojectedfragment::vertex_label (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment12vertex_labelEv"]], "gs::arrowprojectedfragment::vertex_map_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment12vertex_map_tE"]], "gs::arrowprojectedfragment::vertex_prop_id (c++ function)": [[60, "_CPPv4NK2gs22ArrowProjectedFragment14vertex_prop_idEv"]], "gs::arrowprojectedfragment::vertex_range_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment14vertex_range_tE"]], "gs::arrowprojectedfragment::vertex_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment8vertex_tE"]], "gs::arrowprojectedfragment::vertices_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment10vertices_tE"]], "gs::arrowprojectedfragment::vid_array_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment11vid_array_tE"]], "gs::arrowprojectedfragment::vid_t (c++ type)": [[60, "_CPPv4N2gs22ArrowProjectedFragment5vid_tE"]], "gs::arrowprojectedfragment::~arrowprojectedfragment (c++ function)": [[60, "_CPPv4N2gs22ArrowProjectedFragmentD0Ev"]], "gs::arrowprojectedvertexmap (c++ class)": [[60, "_CPPv4I000EN2gs23ArrowProjectedVertexMapE"]], "gs::arrowprojectedvertexmap::construct (c++ function)": [[60, "_CPPv4N2gs23ArrowProjectedVertexMap9ConstructERKN8vineyard10ObjectMetaE"]], "gs::arrowprojectedvertexmap::create (c++ function)": [[60, "_CPPv4N2gs23ArrowProjectedVertexMap6CreateEv"]], "gs::arrowprojectedvertexmap::getgid (c++ function)": [[60, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5fid_t5oid_tR5vid_t"], [60, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetGidE5oid_tR5vid_t"]], "gs::arrowprojectedvertexmap::getoid (c++ function)": [[60, "_CPPv4NK2gs23ArrowProjectedVertexMap6GetOidE5vid_tR5oid_t"]], "gs::arrowprojectedvertexmap::gettotalverticesnum (c++ function)": [[60, "_CPPv4NK2gs23ArrowProjectedVertexMap19GetTotalVerticesNumEv"]], "gs::arrowprojectedvertexmap::project (c++ function)": [[60, "_CPPv4N2gs23ArrowProjectedVertexMap7ProjectENSt10shared_ptrI21property_vertex_map_tEE10label_id_t"]], "gs::ctxwrapperbuilder (c++ struct)": [[60, "_CPPv4I00EN2gs17CtxWrapperBuilderE"]], "gs::defaultpropertyworker (c++ class)": [[60, "_CPPv4I0EN2gs21DefaultPropertyWorkerE"]], "gs::defaultpropertyworker::defaultpropertyworker (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorker21DefaultPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultpropertyworker::finalize (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorker8FinalizeEv"]], "gs::defaultpropertyworker::getcontext (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorker10GetContextEv"]], "gs::defaultpropertyworker::init (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultpropertyworker::output (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorker6OutputERNSt7ostreamE"]], "gs::defaultpropertyworker::query (c++ function)": [[60, "_CPPv4IDpEN2gs21DefaultPropertyWorker5QueryEvDpRR4Args"]], "gs::defaultpropertyworker::context_t (c++ type)": [[60, "_CPPv4N2gs21DefaultPropertyWorker9context_tE"]], "gs::defaultpropertyworker::fragment_t (c++ type)": [[60, "_CPPv4N2gs21DefaultPropertyWorker10fragment_tE"]], "gs::defaultpropertyworker::message_manager_t (c++ type)": [[60, "_CPPv4N2gs21DefaultPropertyWorker17message_manager_tE"]], "gs::defaultpropertyworker::~defaultpropertyworker (c++ function)": [[60, "_CPPv4N2gs21DefaultPropertyWorkerD0Ev"]], "gs::defaultworker (c++ class)": [[60, "_CPPv4I0EN2gs13DefaultWorkerE"]], "gs::defaultworker::defaultworker (c++ function)": [[60, "_CPPv4N2gs13DefaultWorker13DefaultWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::defaultworker::finalize (c++ function)": [[60, "_CPPv4N2gs13DefaultWorker8FinalizeEv"]], "gs::defaultworker::getcontext (c++ function)": [[60, "_CPPv4N2gs13DefaultWorker10GetContextEv"]], "gs::defaultworker::init (c++ function)": [[60, "_CPPv4N2gs13DefaultWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::defaultworker::output (c++ function)": [[60, "_CPPv4N2gs13DefaultWorker6OutputERNSt7ostreamE"]], "gs::defaultworker::query (c++ function)": [[60, "_CPPv4IDpEN2gs13DefaultWorker5QueryEvDpRR4Args"]], "gs::defaultworker::context_t (c++ type)": [[60, "_CPPv4N2gs13DefaultWorker9context_tE"]], "gs::defaultworker::fragment_t (c++ type)": [[60, "_CPPv4N2gs13DefaultWorker10fragment_tE"]], "gs::defaultworker::message_manager_t (c++ type)": [[60, "_CPPv4N2gs13DefaultWorker17message_manager_tE"]], "gs::defaultworker::~defaultworker (c++ function)": [[60, "_CPPv4N2gs13DefaultWorkerD0Ev"]], "gs::dispatchresult (c++ class)": [[60, "_CPPv4N2gs14DispatchResultE"]], "gs::dispatchresult::aggregatepolicy (c++ enum)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicyE"]], "gs::dispatchresult::aggregatepolicy::kconcat (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy7kConcatE"]], "gs::dispatchresult::aggregatepolicy::kmergegraphdef (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy14kMergeGraphDefE"]], "gs::dispatchresult::aggregatepolicy::kpickfirst (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy10kPickFirstE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonempty (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kPickFirstNonEmptyE"]], "gs::dispatchresult::aggregatepolicy::kpickfirstnonemptygraphdef (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy26kPickFirstNonEmptyGraphDefE"]], "gs::dispatchresult::aggregatepolicy::krequireconsistent (c++ enumerator)": [[60, "_CPPv4N2gs14DispatchResult15AggregatePolicy18kRequireConsistentE"]], "gs::dispatchresult::dispatchresult (c++ function)": [[60, "_CPPv4N2gs14DispatchResult14DispatchResultEiN3rpc4CodeE"], [60, "_CPPv4N2gs14DispatchResult14DispatchResultEv"]], "gs::dispatchresult::aggregate_policy (c++ function)": [[60, "_CPPv4NK2gs14DispatchResult16aggregate_policyEv"]], "gs::dispatchresult::data (c++ function)": [[60, "_CPPv4NK2gs14DispatchResult4dataEv"]], "gs::dispatchresult::error_code (c++ function)": [[60, "_CPPv4NK2gs14DispatchResult10error_codeEv"]], "gs::dispatchresult::graph_def (c++ function)": [[60, "_CPPv4N2gs14DispatchResult9graph_defEv"], [60, "_CPPv4NK2gs14DispatchResult9graph_defEv"]], "gs::dispatchresult::has_large_data (c++ function)": [[60, "_CPPv4NK2gs14DispatchResult14has_large_dataEv"]], "gs::dispatchresult::message (c++ function)": [[60, "_CPPv4N2gs14DispatchResult7messageEv"]], "gs::dispatchresult::set_data (c++ function)": [[60, "_CPPv4N2gs14DispatchResult8set_dataERKN5grape9InArchiveE15AggregatePolicyb"], [60, "_CPPv4N2gs14DispatchResult8set_dataERKNSt6stringE15AggregatePolicyb"]], "gs::dispatchresult::set_error (c++ function)": [[60, "_CPPv4N2gs14DispatchResult9set_errorEN3rpc4CodeERKNSt6stringE"]], "gs::dispatchresult::set_graph_def (c++ function)": [[60, "_CPPv4N2gs14DispatchResult13set_graph_defERKN3rpc5graph10GraphDefPbE15AggregatePolicy"]], "gs::dispatchresult::worker_id (c++ function)": [[60, "_CPPv4NK2gs14DispatchResult9worker_idEv"]], "gs::dispatcher (c++ class)": [[60, "_CPPv4N2gs10DispatcherE"]], "gs::dispatcher::dispatch (c++ function)": [[60, "_CPPv4N2gs10Dispatcher8DispatchENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::dispatcher (c++ function)": [[60, "_CPPv4N2gs10Dispatcher10DispatcherERKN5grape8CommSpecE"]], "gs::dispatcher::setcommand (c++ function)": [[60, "_CPPv4N2gs10Dispatcher10SetCommandENSt10shared_ptrI13CommandDetailEE"]], "gs::dispatcher::start (c++ function)": [[60, "_CPPv4N2gs10Dispatcher5StartEv"]], "gs::dispatcher::stop (c++ function)": [[60, "_CPPv4N2gs10Dispatcher4StopEv"]], "gs::dispatcher::subscribe (c++ function)": [[60, "_CPPv4N2gs10Dispatcher9SubscribeENSt10shared_ptrI10SubscriberEE"]], "gs::engineconfig (c++ struct)": [[60, "_CPPv4N2gs12EngineConfigE"]], "gs::engineconfig::tojsonstring (c++ function)": [[60, "_CPPv4NK2gs12EngineConfig12ToJsonStringEv"]], "gs::engineconfig::enable_java_sdk (c++ member)": [[60, "_CPPv4N2gs12EngineConfig15enable_java_sdkE"]], "gs::engineconfig::networkx (c++ member)": [[60, "_CPPv4N2gs12EngineConfig8networkxE"]], "gs::engineconfig::vineyard_rpc_endpoint (c++ member)": [[60, "_CPPv4N2gs12EngineConfig21vineyard_rpc_endpointE"]], "gs::engineconfig::vineyard_socket (c++ member)": [[60, "_CPPv4N2gs12EngineConfig15vineyard_socketE"]], "gs::fragmentwrapper (c++ class)": [[60, "_CPPv4I0EN2gs15FragmentWrapperE"]], "gs::gsobject (c++ class)": [[60, "_CPPv4N2gs8GSObjectE"]], "gs::gsobject::gsobject (c++ function)": [[60, "_CPPv4N2gs8GSObject8GSObjectENSt6stringE10ObjectType"]], "gs::gsobject::tostring (c++ function)": [[60, "_CPPv4NK2gs8GSObject8ToStringEv"]], "gs::gsobject::id (c++ function)": [[60, "_CPPv4NK2gs8GSObject2idEv"]], "gs::gsobject::type (c++ function)": [[60, "_CPPv4NK2gs8GSObject4typeEv"]], "gs::gsobject::~gsobject (c++ function)": [[60, "_CPPv4N2gs8GSObjectD0Ev"]], "gs::grapeengine (c++ class)": [[60, "_CPPv4N2gs11GrapeEngineE"]], "gs::grapeengine::grapeengine (c++ function)": [[60, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringE"], [60, "_CPPv4N2gs11GrapeEngine11GrapeEngineENSt6stringEi"]], "gs::grapeengine::rundagfile (c++ function)": [[60, "_CPPv4N2gs11GrapeEngine10RunDAGFileEv"]], "gs::grapeengine::start (c++ function)": [[60, "_CPPv4N2gs11GrapeEngine5StartEv"]], "gs::grapeengine::stop (c++ function)": [[60, "_CPPv4N2gs11GrapeEngine4StopEv"]], "gs::grapeinstance (c++ class)": [[60, "_CPPv4N2gs13GrapeInstanceE"]], "gs::grapeinstance::grapeinstance (c++ function)": [[60, "_CPPv4N2gs13GrapeInstance13GrapeInstanceERKN5grape8CommSpecE"]], "gs::grapeinstance::init (c++ function)": [[60, "_CPPv4N2gs13GrapeInstance4InitERKNSt6stringE"]], "gs::grapeinstance::onreceive (c++ function)": [[60, "_CPPv4N2gs13GrapeInstance9OnReceiveENSt10shared_ptrI13CommandDetailEE"]], "gs::objectmanager (c++ class)": [[60, "_CPPv4N2gs13ObjectManagerE"]], "gs::objectmanager::getobject (c++ function)": [[60, "_CPPv4I0EN2gs13ObjectManager9GetObjectEN2bl6resultINSt10shared_ptrI1TEEEERKNSt6stringE"], [60, "_CPPv4N2gs13ObjectManager9GetObjectERKNSt6stringE"]], "gs::objectmanager::hasobject (c++ function)": [[60, "_CPPv4N2gs13ObjectManager9HasObjectERKNSt6stringE"]], "gs::objectmanager::putobject (c++ function)": [[60, "_CPPv4N2gs13ObjectManager9PutObjectENSt10shared_ptrI8GSObjectEE"]], "gs::objectmanager::removeobject (c++ function)": [[60, "_CPPv4N2gs13ObjectManager12RemoveObjectERKNSt6stringE"]], "gs::parallelpropertyworker (c++ class)": [[60, "_CPPv4I0EN2gs22ParallelPropertyWorkerE"]], "gs::parallelpropertyworker::finalize (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorker8FinalizeEv"]], "gs::parallelpropertyworker::getcontext (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorker10GetContextEv"]], "gs::parallelpropertyworker::init (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::parallelpropertyworker::output (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorker6OutputERNSt7ostreamE"]], "gs::parallelpropertyworker::parallelpropertyworker (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorker22ParallelPropertyWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::parallelpropertyworker::query (c++ function)": [[60, "_CPPv4IDpEN2gs22ParallelPropertyWorker5QueryEvDpRR4Args"]], "gs::parallelpropertyworker::context_t (c++ type)": [[60, "_CPPv4N2gs22ParallelPropertyWorker9context_tE"]], "gs::parallelpropertyworker::fragment_t (c++ type)": [[60, "_CPPv4N2gs22ParallelPropertyWorker10fragment_tE"]], "gs::parallelpropertyworker::message_manager_t (c++ type)": [[60, "_CPPv4N2gs22ParallelPropertyWorker17message_manager_tE"]], "gs::parallelpropertyworker::~parallelpropertyworker (c++ function)": [[60, "_CPPv4N2gs22ParallelPropertyWorkerD0Ev"]], "gs::propertyappbase (c++ class)": [[60, "_CPPv4I00EN2gs15PropertyAppBaseE"]], "gs::propertyappbase::inceval (c++ function)": [[60, "_CPPv4N2gs15PropertyAppBase7IncEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::peval (c++ function)": [[60, "_CPPv4N2gs15PropertyAppBase5PEvalERK6FRAG_TR9CONTEXT_TR17message_manager_t"]], "gs::propertyappbase::propertyappbase (c++ function)": [[60, "_CPPv4N2gs15PropertyAppBase15PropertyAppBaseEv"]], "gs::propertyappbase::load_strategy (c++ member)": [[60, "_CPPv4N2gs15PropertyAppBase13load_strategyE"]], "gs::propertyappbase::message_manager_t (c++ type)": [[60, "_CPPv4N2gs15PropertyAppBase17message_manager_tE"]], "gs::propertyappbase::message_strategy (c++ member)": [[60, "_CPPv4N2gs15PropertyAppBase16message_strategyE"]], "gs::propertyappbase::need_split_edges (c++ member)": [[60, "_CPPv4N2gs15PropertyAppBase16need_split_edgesE"]], "gs::propertyappbase::~propertyappbase (c++ function)": [[60, "_CPPv4N2gs15PropertyAppBaseD0Ev"]], "gs::propertyautoappbase (c++ class)": [[60, "_CPPv4I00EN2gs19PropertyAutoAppBaseE"]], "gs::propertyautoappbase::inceval (c++ function)": [[60, "_CPPv4N2gs19PropertyAutoAppBase7IncEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::peval (c++ function)": [[60, "_CPPv4N2gs19PropertyAutoAppBase5PEvalERK6FRAG_TR9CONTEXT_T"]], "gs::propertyautoappbase::propertyautoappbase (c++ function)": [[60, "_CPPv4N2gs19PropertyAutoAppBase19PropertyAutoAppBaseEv"]], "gs::propertyautoappbase::load_strategy (c++ member)": [[60, "_CPPv4N2gs19PropertyAutoAppBase13load_strategyE"]], "gs::propertyautoappbase::message_strategy (c++ member)": [[60, "_CPPv4N2gs19PropertyAutoAppBase16message_strategyE"]], "gs::propertyautoappbase::need_split_edges (c++ member)": [[60, "_CPPv4N2gs19PropertyAutoAppBase16need_split_edgesE"]], "gs::propertyautoappbase::~propertyautoappbase (c++ function)": [[60, "_CPPv4N2gs19PropertyAutoAppBaseD0Ev"]], "gs::propertyautoworker (c++ class)": [[60, "_CPPv4I0EN2gs18PropertyAutoWorkerE"]], "gs::propertyautoworker::finalize (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorker8FinalizeEv"]], "gs::propertyautoworker::getcontext (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorker10GetContextEv"]], "gs::propertyautoworker::init (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorker4InitERKN5grape8CommSpecERKN5grape18ParallelEngineSpecE"]], "gs::propertyautoworker::output (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorker6OutputERNSt7ostreamE"]], "gs::propertyautoworker::propertyautoworker (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorker18PropertyAutoWorkerENSt10shared_ptrI5APP_TEENSt10shared_ptrI10fragment_tEE"]], "gs::propertyautoworker::query (c++ function)": [[60, "_CPPv4IDpEN2gs18PropertyAutoWorker5QueryEvDpRR4Args"]], "gs::propertyautoworker::context_t (c++ type)": [[60, "_CPPv4N2gs18PropertyAutoWorker9context_tE"]], "gs::propertyautoworker::fragment_t (c++ type)": [[60, "_CPPv4N2gs18PropertyAutoWorker10fragment_tE"]], "gs::propertyautoworker::message_manager_t (c++ type)": [[60, "_CPPv4N2gs18PropertyAutoWorker17message_manager_tE"]], "gs::propertyautoworker::~propertyautoworker (c++ function)": [[60, "_CPPv4N2gs18PropertyAutoWorkerD0Ev"]], "gs::tensorcontext (c++ class)": [[60, "_CPPv4I00EN2gs13TensorContextE"]], "gs::tensorcontext::tensorcontext (c++ function)": [[60, "_CPPv4N2gs13TensorContext13TensorContextERK10fragment_t"]], "gs::tensorcontext::assign (c++ function)": [[60, "_CPPv4N2gs13TensorContext6assignERK6data_t"], [60, "_CPPv4N2gs13TensorContext6assignERKNSt6vectorI6data_tEERKNSt6vectorI6size_tEE"]], "gs::tensorcontext::data_t (c++ type)": [[60, "_CPPv4N2gs13TensorContext6data_tE"]], "gs::tensorcontext::fragment (c++ function)": [[60, "_CPPv4N2gs13TensorContext8fragmentEv"]], "gs::tensorcontext::set_shape (c++ function)": [[60, "_CPPv4N2gs13TensorContext9set_shapeENSt6vectorINSt6size_tEEE"]], "gs::tensorcontext::shape (c++ function)": [[60, "_CPPv4NK2gs13TensorContext5shapeEv"]], "gs::tensorcontext::tensor (c++ function)": [[60, "_CPPv4N2gs13TensorContext6tensorEv"]], "gs::tensorcontextwrapper (c++ class)": [[60, "_CPPv4I000EN2gs20TensorContextWrapperE"]], "gs::tensorcontextwrapper::tensorcontextwrapper (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper20TensorContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::tensorcontextwrapper::toarrowarrays (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::tensorcontextwrapper::todataframe (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper11ToDataframeERKN5grape8CommSpecE"]], "gs::tensorcontextwrapper::tondarray (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper9ToNdArrayERKN5grape8CommSpecE8uint32_t"]], "gs::tensorcontextwrapper::tovineyarddataframe (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientE"]], "gs::tensorcontextwrapper::tovineyardtensor (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientE8uint32_t"]], "gs::tensorcontextwrapper::context_type (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper12context_typeEv"]], "gs::tensorcontextwrapper::fragment_wrapper (c++ function)": [[60, "_CPPv4N2gs20TensorContextWrapper16fragment_wrapperEv"]], "gs::vertexdatacontextwrapper (c++ class)": [[60, "_CPPv4I00EN2gs24VertexDataContextWrapperE"]], "gs::vertexdatacontextwrapper::toarrowarrays (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper13ToArrowArraysERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEE"]], "gs::vertexdatacontextwrapper::todataframe (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper11ToDataframeERKN5grape8CommSpecERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tondarray (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper9ToNdArrayERKN5grape8CommSpecERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyarddataframe (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper19ToVineyardDataframeERKN5grape8CommSpecERN8vineyard6ClientERKNSt6vectorINSt4pairINSt6stringE8SelectorEEEERKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::tovineyardtensor (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper16ToVineyardTensorERKN5grape8CommSpecERN8vineyard6ClientERK8SelectorRKNSt4pairINSt6stringENSt6stringEEE"]], "gs::vertexdatacontextwrapper::vertexdatacontextwrapper (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper24VertexDataContextWrapperERKNSt6stringENSt10shared_ptrI16IFragmentWrapperEENSt10shared_ptrI9context_tEE"]], "gs::vertexdatacontextwrapper::context_type (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper12context_typeEv"]], "gs::vertexdatacontextwrapper::fragment_wrapper (c++ function)": [[60, "_CPPv4N2gs24VertexDataContextWrapper16fragment_wrapperEv"]], "gs::vertexpropertycontext (c++ class)": [[60, "_CPPv4I0EN2gs21VertexPropertyContextE"]], "gs::vertexpropertycontext::vertexpropertycontext (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext21VertexPropertyContextERK10fragment_t"]], "gs::vertexpropertycontext::add_column (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext10add_columnERKNSt6stringE15ContextDataType"]], "gs::vertexpropertycontext::fragment (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext8fragmentEv"]], "gs::vertexpropertycontext::fragment_t (c++ type)": [[60, "_CPPv4N2gs21VertexPropertyContext10fragment_tE"]], "gs::vertexpropertycontext::get_column (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext10get_columnE7int64_t"], [60, "_CPPv4N2gs21VertexPropertyContext10get_columnERKNSt6stringE"]], "gs::vertexpropertycontext::get_typed_column (c++ function)": [[60, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEE7int64_t"], [60, "_CPPv4I0EN2gs21VertexPropertyContext16get_typed_columnENSt10shared_ptrI6ColumnI10fragment_t6DATA_TEEERKNSt6stringE"]], "gs::vertexpropertycontext::oid_t (c++ type)": [[60, "_CPPv4N2gs21VertexPropertyContext5oid_tE"]], "gs::vertexpropertycontext::prop_id_t (c++ type)": [[60, "_CPPv4N2gs21VertexPropertyContext9prop_id_tE"]], "gs::vertexpropertycontext::properties_map (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext14properties_mapEv"]], "gs::vertexpropertycontext::vertex_properties (c++ function)": [[60, "_CPPv4N2gs21VertexPropertyContext17vertex_propertiesEv"]], "gs::vertexpropertycontext::vertex_t (c++ type)": [[60, "_CPPv4N2gs21VertexPropertyContext8vertex_tE"]], "gs::rpc::analyticalserver (c++ class)": [[60, "_CPPv4N2gs3rpc16AnalyticalServerE"]], "gs::rpc::analyticalserver::analyticalserver (c++ function)": [[60, "_CPPv4N2gs3rpc16AnalyticalServer16AnalyticalServerENSt10shared_ptrI10DispatcherEENSt6stringEi"]], "gs::rpc::analyticalserver::startserver (c++ function)": [[60, "_CPPv4N2gs3rpc16AnalyticalServer11StartServerEv"]], "gs::rpc::analyticalserver::stopserver (c++ function)": [[60, "_CPPv4N2gs3rpc16AnalyticalServer10StopServerEv"]], "app (class in graphscope.framework.app)": [[61, "graphscope.framework.app.App"]], "appassets (class in graphscope.framework.app)": [[61, "graphscope.framework.app.AppAssets"]], "appdagnode (class in graphscope.framework.app)": [[61, "graphscope.framework.app.AppDAGNode"]], "javaapp (class in graphscope.analytical.app)": [[61, "graphscope.analytical.app.JavaApp"]], "__call__() (graphscope.analytical.app.javaapp method)": [[61, "graphscope.analytical.app.JavaApp.__call__"]], "__del__() (graphscope.framework.app.app method)": [[61, "graphscope.framework.app.App.__del__"]], "__init__() (graphscope.analytical.app.javaapp method)": [[61, "graphscope.analytical.app.JavaApp.__init__"]], "__init__() (graphscope.framework.app.app method)": [[61, "graphscope.framework.app.App.__init__"]], "__init__() (graphscope.framework.app.appassets method)": [[61, "graphscope.framework.app.AppAssets.__init__"]], "algo (graphscope.framework.app.appassets property)": [[61, "graphscope.framework.app.AppAssets.algo"]], "attribute_assortativity_coefficient() (in module graphscope)": [[61, "graphscope.attribute_assortativity_coefficient"]], "average_degree_connectivity() (in module graphscope)": [[61, "graphscope.average_degree_connectivity"]], "average_shortest_path_length() (in module graphscope)": [[61, "graphscope.average_shortest_path_length"]], "avg_clustering() (in module graphscope)": [[61, "graphscope.avg_clustering"]], "bfs() (in module graphscope)": [[61, "graphscope.bfs"]], "cdlp() (in module graphscope)": [[61, "graphscope.cdlp"]], "clustering() (in module graphscope)": [[61, "graphscope.clustering"]], "context_type (graphscope.framework.app.appassets property)": [[61, "graphscope.framework.app.AppAssets.context_type"]], "degree_assortativity_coefficient() (in module graphscope)": [[61, "graphscope.degree_assortativity_coefficient"]], "degree_centrality() (in module graphscope)": [[61, "graphscope.degree_centrality"]], "eigenvector_centrality() (in module graphscope)": [[61, "graphscope.eigenvector_centrality"]], "gar (graphscope.framework.app.appassets property)": [[61, "graphscope.framework.app.AppAssets.gar"]], "hits() (in module graphscope)": [[61, "graphscope.hits"]], "is_compatible() (graphscope.analytical.app.javaapp method)": [[61, "graphscope.analytical.app.JavaApp.is_compatible"]], "is_compatible() (graphscope.framework.app.appassets method)": [[61, "graphscope.framework.app.AppAssets.is_compatible"]], "is_simple_path() (in module graphscope)": [[61, "graphscope.is_simple_path"]], "k_core() (in module graphscope)": [[61, "graphscope.k_core"]], "k_shell() (in module graphscope)": [[61, "graphscope.k_shell"]], "katz_centrality() (in module graphscope)": [[61, "graphscope.katz_centrality"]], "key (graphscope.framework.app.app property)": [[61, "graphscope.framework.app.App.key"]], "louvain() (in module graphscope)": [[61, "graphscope.louvain"]], "lpa() (in module graphscope)": [[61, "graphscope.lpa"]], "lpa_u2i() (in module graphscope)": [[61, "graphscope.lpa_u2i"]], "numeric_assortativity_coefficient() (in module graphscope)": [[61, "graphscope.numeric_assortativity_coefficient"]], "pagerank() (in module graphscope)": [[61, "graphscope.pagerank"]], "pagerank_nx() (in module graphscope)": [[61, "graphscope.pagerank_nx"]], "signature (graphscope.framework.app.app property)": [[61, "graphscope.framework.app.App.signature"]], "signature (graphscope.framework.app.appassets property)": [[61, "graphscope.framework.app.AppAssets.signature"]], "signature() (graphscope.analytical.app.javaapp method)": [[61, "graphscope.analytical.app.JavaApp.signature"]], "sssp() (in module graphscope)": [[61, "graphscope.sssp"]], "triangles() (in module graphscope)": [[61, "graphscope.triangles"]], "type (graphscope.framework.app.appassets property)": [[61, "graphscope.framework.app.AppAssets.type"]], "voterank() (in module graphscope)": [[61, "graphscope.voterank"]], "wcc() (in module graphscope)": [[61, "graphscope.wcc"]], "basecontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.BaseContextDAGNode"]], "context (class in graphscope.framework.context)": [[62, "graphscope.framework.context.Context"]], "dynamicvertexdatacontext (class in graphscope.framework.context)": [[62, "graphscope.framework.context.DynamicVertexDataContext"]], "labeledvertexdatacontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.LabeledVertexDataContextDAGNode"]], "labeledvertexpropertycontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.LabeledVertexPropertyContextDAGNode"]], "resultdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.ResultDAGNode"]], "tensorcontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.TensorContextDAGNode"]], "vertexdatacontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.VertexDataContextDAGNode"]], "vertexpropertycontextdagnode (class in graphscope.framework.context)": [[62, "graphscope.framework.context.VertexPropertyContextDAGNode"]], "to_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[62, "graphscope.framework.context.BaseContextDAGNode.to_dataframe"]], "to_numpy() (graphscope.framework.context.basecontextdagnode method)": [[62, "graphscope.framework.context.BaseContextDAGNode.to_numpy"]], "to_vineyard_dataframe() (graphscope.framework.context.basecontextdagnode method)": [[62, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_dataframe"]], "to_vineyard_tensor() (graphscope.framework.context.basecontextdagnode method)": [[62, "graphscope.framework.context.BaseContextDAGNode.to_vineyard_tensor"]], "vertex (in module graphscope)": [[66, "graphscope.Vertex"]], "declare() (in module graphscope)": [[67, "graphscope.declare"]], "load_app() (in module graphscope.framework.app)": [[68, "graphscope.framework.app.load_app"]], "add_column() (in module graphscope.framework.dag_utils)": [[69, "graphscope.framework.dag_utils.add_column"]], "add_labels_to_graph() (in module graphscope.framework.dag_utils)": [[70, "graphscope.framework.dag_utils.add_labels_to_graph"]], "arrow_to_dynamic() (in module graphscope.framework.dag_utils)": [[71, "graphscope.framework.dag_utils.arrow_to_dynamic"]], "bind_app() (in module graphscope.framework.dag_utils)": [[72, "graphscope.framework.dag_utils.bind_app"]], "clear_edges() (in module graphscope.framework.dag_utils)": [[73, "graphscope.framework.dag_utils.clear_edges"]], "clear_graph() (in module graphscope.framework.dag_utils)": [[74, "graphscope.framework.dag_utils.clear_graph"]], "context_to_dataframe() (in module graphscope.framework.dag_utils)": [[75, "graphscope.framework.dag_utils.context_to_dataframe"]], "context_to_numpy() (in module graphscope.framework.dag_utils)": [[76, "graphscope.framework.dag_utils.context_to_numpy"]], "copy_graph() (in module graphscope.framework.dag_utils)": [[77, "graphscope.framework.dag_utils.copy_graph"]], "create_app() (in module graphscope.framework.dag_utils)": [[78, "graphscope.framework.dag_utils.create_app"]], "create_graph() (in module graphscope.framework.dag_utils)": [[79, "graphscope.framework.dag_utils.create_graph"]], "create_graph_view() (in module graphscope.framework.dag_utils)": [[80, "graphscope.framework.dag_utils.create_graph_view"]], "create_loader() (in module graphscope.framework.dag_utils)": [[81, "graphscope.framework.dag_utils.create_loader"]], "create_subgraph() (in module graphscope.framework.dag_utils)": [[82, "graphscope.framework.dag_utils.create_subgraph"]], "create_unload_op() (in module graphscope.framework.dag_utils)": [[83, "graphscope.framework.dag_utils.create_unload_op"]], "dynamic_to_arrow() (in module graphscope.framework.dag_utils)": [[84, "graphscope.framework.dag_utils.dynamic_to_arrow"]], "fetch_gremlin_result() (in module graphscope.framework.dag_utils)": [[85, "graphscope.framework.dag_utils.fetch_gremlin_result"]], "get_context_data() (in module graphscope.framework.dag_utils)": [[86, "graphscope.framework.dag_utils.get_context_data"]], "graph_to_dataframe() (in module graphscope.framework.dag_utils)": [[87, "graphscope.framework.dag_utils.graph_to_dataframe"]], "graph_to_numpy() (in module graphscope.framework.dag_utils)": [[88, "graphscope.framework.dag_utils.graph_to_numpy"]], "gremlin_query() (in module graphscope.framework.dag_utils)": [[89, "graphscope.framework.dag_utils.gremlin_query"]], "gremlin_to_subgraph() (in module graphscope.framework.dag_utils)": [[90, "graphscope.framework.dag_utils.gremlin_to_subgraph"]], "modify_edges() (in module graphscope.framework.dag_utils)": [[91, "graphscope.framework.dag_utils.modify_edges"]], "modify_vertices() (in module graphscope.framework.dag_utils)": [[92, "graphscope.framework.dag_utils.modify_vertices"]], "output() (in module graphscope.framework.dag_utils)": [[93, "graphscope.framework.dag_utils.output"]], "project_arrow_property_graph() (in module graphscope.framework.dag_utils)": [[94, "graphscope.framework.dag_utils.project_arrow_property_graph"]], "project_to_simple() (in module graphscope.framework.dag_utils)": [[95, "graphscope.framework.dag_utils.project_to_simple"]], "report_graph() (in module graphscope.framework.dag_utils)": [[96, "graphscope.framework.dag_utils.report_graph"]], "run_app() (in module graphscope.framework.dag_utils)": [[97, "graphscope.framework.dag_utils.run_app"]], "to_data_sink() (in module graphscope.framework.dag_utils)": [[98, "graphscope.framework.dag_utils.to_data_sink"]], "to_directed() (in module graphscope.framework.dag_utils)": [[99, "graphscope.framework.dag_utils.to_directed"]], "to_undirected() (in module graphscope.framework.dag_utils)": [[100, "graphscope.framework.dag_utils.to_undirected"]], "to_vineyard_dataframe() (in module graphscope.framework.dag_utils)": [[101, "graphscope.framework.dag_utils.to_vineyard_dataframe"]], "to_vineyard_tensor() (in module graphscope.framework.dag_utils)": [[102, "graphscope.framework.dag_utils.to_vineyard_tensor"]], "unload_app() (in module graphscope.framework.dag_utils)": [[103, "graphscope.framework.dag_utils.unload_app"]], "unload_context() (in module graphscope.framework.dag_utils)": [[104, "graphscope.framework.dag_utils.unload_context"]], "unload_graph() (in module graphscope.framework.dag_utils)": [[105, "graphscope.framework.dag_utils.unload_graph"]], "__init__() (graphscope.framework.operation.operation method)": [[106, "graphscope.framework.operation.Operation.__init__"]], "as_op_def() (graphscope.framework.operation.operation method)": [[107, "graphscope.framework.operation.Operation.as_op_def"]], "eval() (graphscope.framework.operation.operation method)": [[108, "graphscope.framework.operation.Operation.eval"]], "evaluated (graphscope.framework.operation.operation property)": [[109, "graphscope.framework.operation.Operation.evaluated"]], "key (graphscope.framework.operation.operation property)": [[110, "graphscope.framework.operation.Operation.key"]], "signature (graphscope.framework.operation.operation property)": [[111, "graphscope.framework.operation.Operation.signature"]], "g() (in module graphscope)": [[112, "graphscope.g"]], "get_default_session() (in module graphscope)": [[113, "graphscope.get_default_session"]], "get_option() (in module graphscope)": [[114, "graphscope.get_option"]], "graphlearn() (in module graphscope)": [[115, "graphscope.graphlearn"]], "gremlin() (in module graphscope)": [[116, "graphscope.gremlin"]], "has_default_session() (in module graphscope)": [[117, "graphscope.has_default_session"]], "session (in module graphscope)": [[118, "graphscope.session"]], "set_option() (in module graphscope)": [[119, "graphscope.set_option"]], "graph (class in graphscope.framework.graph)": [[134, "graphscope.framework.graph.Graph"]], "graphdagnode (class in graphscope.framework.graph)": [[134, "graphscope.framework.graph.GraphDAGNode"]], "loader (class in graphscope.framework.loader)": [[134, "graphscope.framework.loader.Loader"]], "__init__() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.__init__"]], "__init__() (graphscope.framework.graph.graphdagnode method)": [[134, "graphscope.framework.graph.GraphDAGNode.__init__"]], "__init__() (graphscope.framework.loader.loader method)": [[134, "graphscope.framework.loader.Loader.__init__"]], "add_column() (graphscope.framework.graph.graphdagnode method)": [[134, "graphscope.framework.graph.GraphDAGNode.add_column"]], "add_edges() (graphscope.framework.graph.graphdagnode method)": [[134, "graphscope.framework.graph.GraphDAGNode.add_edges"]], "add_vertices() (graphscope.framework.graph.graphdagnode method)": [[134, "graphscope.framework.graph.GraphDAGNode.add_vertices"]], "detach() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.detach"]], "key (graphscope.framework.graph.graph property)": [[134, "graphscope.framework.graph.Graph.key"]], "load_from() (graphscope.framework.graph.graph class method)": [[134, "graphscope.framework.graph.Graph.load_from"]], "load_from() (in module graphscope.framework.graph_builder)": [[134, "graphscope.framework.graph_builder.load_from"]], "loaded() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.loaded"]], "project() (graphscope.framework.graph.graphdagnode method)": [[134, "graphscope.framework.graph.GraphDAGNode.project"]], "save_to() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.save_to"]], "schema (graphscope.framework.graph.graph property)": [[134, "graphscope.framework.graph.Graph.schema"]], "schema_path (graphscope.framework.graph.graph property)": [[134, "graphscope.framework.graph.Graph.schema_path"]], "session_id (graphscope.framework.graph.graph property)": [[134, "graphscope.framework.graph.Graph.session_id"]], "to_dataframe() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.to_dataframe"]], "to_directed() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.to_directed"]], "to_numpy() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.to_numpy"]], "to_undirected() (graphscope.framework.graph.graph method)": [[134, "graphscope.framework.graph.Graph.to_undirected"]], "vineyard_id (graphscope.framework.graph.graph property)": [[134, "graphscope.framework.graph.Graph.vineyard_id"]], "interactivequery (class in graphscope.interactive.query)": [[135, "graphscope.interactive.query.InteractiveQuery"]], "__init__() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.__init__"]], "close() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.close"]], "execute() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.execute"]], "graph_url (graphscope.interactive.query.interactivequery property)": [[135, "graphscope.interactive.query.InteractiveQuery.graph_url"]], "object_id (graphscope.interactive.query.interactivequery property)": [[135, "graphscope.interactive.query.InteractiveQuery.object_id"]], "session (graphscope.interactive.query.interactivequery property)": [[135, "graphscope.interactive.query.InteractiveQuery.session"]], "session_id (graphscope.interactive.query.interactivequery property)": [[135, "graphscope.interactive.query.InteractiveQuery.session_id"]], "subgraph() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.subgraph"]], "submit() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.submit"]], "traversal_source() (graphscope.interactive.query.interactivequery method)": [[135, "graphscope.interactive.query.InteractiveQuery.traversal_source"]], "e() (graphscope.learning.graph.graph method)": [[136, "graphscope.learning.graph.Graph.E"]], "graph (class in graphscope.learning.graph)": [[136, "graphscope.learning.graph.Graph"]], "v() (graphscope.learning.graph.graph method)": [[136, "graphscope.learning.graph.Graph.V"]], "__init__() (graphscope.learning.graph.graph method)": [[136, "graphscope.learning.graph.Graph.__init__"]], "get_handle() (graphscope.learning.graph.graph method)": [[136, "graphscope.learning.graph.Graph.get_handle"]], "average_clustering() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.average_clustering"]], "average_shortest_path_length() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.average_shortest_path_length"]], "bfs_edges() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.bfs_edges"]], "clustering() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.clustering"]], "degree_centrality() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.degree_centrality"]], "eigenvector_centrality() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.eigenvector_centrality"]], "has_path() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.has_path"]], "hits() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.hits"]], "in_degree_centrality() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.in_degree_centrality"]], "k_core() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.k_core"]], "katz_centrality() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.katz_centrality"]], "out_degree_centrality() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.out_degree_centrality"]], "triangles() (in module graphscope.nx.builtin)": [[137, "graphscope.nx.builtin.triangles"]], "graphscope.nx.classes.function": [[138, "module-graphscope.nx.classes.function"]], "module": [[138, "module-graphscope.nx.classes.function"], [271, "module-graphscope.nx.generators.atlas"], [271, "module-graphscope.nx.generators.classic"], [271, "module-graphscope.nx.generators.community"], [271, "module-graphscope.nx.generators.degree_seq"], [271, "module-graphscope.nx.generators.directed"], [271, "module-graphscope.nx.generators.duplication"], [271, "module-graphscope.nx.generators.ego"], [271, "module-graphscope.nx.generators.expanders"], [271, "module-graphscope.nx.generators.geometric"], [271, "module-graphscope.nx.generators.harary_graph"], [271, "module-graphscope.nx.generators.intersection"], [271, "module-graphscope.nx.generators.joint_degree_seq"], [271, "module-graphscope.nx.generators.mycielski"], [271, "module-graphscope.nx.generators.nonisomorphic_trees"], [271, "module-graphscope.nx.generators.small"], [271, "module-graphscope.nx.generators.social"], [271, "module-graphscope.nx.generators.spectral_graph_forge"], [271, "module-graphscope.nx.generators.sudoku"], [271, "module-graphscope.nx.generators.trees"], [271, "module-graphscope.nx.generators.triads"], [271, "module-networkx.generators.internet_as_graphs"], [271, "module-networkx.generators.stochastic"], [276, "module-graphscope.framework.dag_utils"]], "add_cycle() (in module graphscope.nx.classes.function)": [[139, "graphscope.nx.classes.function.add_cycle"]], "add_path() (in module graphscope.nx.classes.function)": [[140, "graphscope.nx.classes.function.add_path"]], "add_star() (in module graphscope.nx.classes.function)": [[141, "graphscope.nx.classes.function.add_star"]], "all_neighbors() (in module graphscope.nx.classes.function)": [[142, "graphscope.nx.classes.function.all_neighbors"]], "common_neighbors() (in module graphscope.nx.classes.function)": [[143, "graphscope.nx.classes.function.common_neighbors"]], "create_empty_copy() (in module graphscope.nx.classes.function)": [[144, "graphscope.nx.classes.function.create_empty_copy"]], "degree() (in module graphscope.nx.classes.function)": [[145, "graphscope.nx.classes.function.degree"]], "degree_histogram() (in module graphscope.nx.classes.function)": [[146, "graphscope.nx.classes.function.degree_histogram"]], "density() (in module graphscope.nx.classes.function)": [[147, "graphscope.nx.classes.function.density"]], "edge_subgraph() (in module graphscope.nx.classes.function)": [[148, "graphscope.nx.classes.function.edge_subgraph"]], "edges() (in module graphscope.nx.classes.function)": [[149, "graphscope.nx.classes.function.edges"]], "freeze() (in module graphscope.nx.classes.function)": [[150, "graphscope.nx.classes.function.freeze"]], "induced_subgraph() (in module graphscope.nx.classes.function)": [[151, "graphscope.nx.classes.function.induced_subgraph"]], "info() (in module graphscope.nx.classes.function)": [[152, "graphscope.nx.classes.function.info"]], "is_directed() (in module graphscope.nx.classes.function)": [[153, "graphscope.nx.classes.function.is_directed"]], "is_empty() (in module graphscope.nx.classes.function)": [[154, "graphscope.nx.classes.function.is_empty"]], "is_frozen() (in module graphscope.nx.classes.function)": [[155, "graphscope.nx.classes.function.is_frozen"]], "is_negatively_weighted() (in module graphscope.nx.classes.function)": [[156, "graphscope.nx.classes.function.is_negatively_weighted"]], "is_weighted() (in module graphscope.nx.classes.function)": [[157, "graphscope.nx.classes.function.is_weighted"]], "neighbors() (in module graphscope.nx.classes.function)": [[158, "graphscope.nx.classes.function.neighbors"]], "nodes() (in module graphscope.nx.classes.function)": [[159, "graphscope.nx.classes.function.nodes"]], "nodes_with_selfloops() (in module graphscope.nx.classes.function)": [[160, "graphscope.nx.classes.function.nodes_with_selfloops"]], "non_edges() (in module graphscope.nx.classes.function)": [[161, "graphscope.nx.classes.function.non_edges"]], "non_neighbors() (in module graphscope.nx.classes.function)": [[162, "graphscope.nx.classes.function.non_neighbors"]], "number_of_edges() (in module graphscope.nx.classes.function)": [[163, "graphscope.nx.classes.function.number_of_edges"]], "number_of_nodes() (in module graphscope.nx.classes.function)": [[164, "graphscope.nx.classes.function.number_of_nodes"]], "number_of_selfloops() (in module graphscope.nx.classes.function)": [[165, "graphscope.nx.classes.function.number_of_selfloops"]], "selfloop_edges() (in module graphscope.nx.classes.function)": [[166, "graphscope.nx.classes.function.selfloop_edges"]], "subgraph() (in module graphscope.nx.classes.function)": [[167, "graphscope.nx.classes.function.subgraph"]], "to_directed() (in module graphscope.nx.classes.function)": [[168, "graphscope.nx.classes.function.to_directed"]], "to_undirected() (in module graphscope.nx.classes.function)": [[169, "graphscope.nx.classes.function.to_undirected"]], "graph_atlas() (in module graphscope.nx.generators.atlas)": [[170, "graphscope.nx.generators.atlas.graph_atlas"]], "graph_atlas_g() (in module graphscope.nx.generators.atlas)": [[171, "graphscope.nx.generators.atlas.graph_atlas_g"]], "balanced_tree() (in module graphscope.nx.generators.classic)": [[172, "graphscope.nx.generators.classic.balanced_tree"]], "barbell_graph() (in module graphscope.nx.generators.classic)": [[173, "graphscope.nx.generators.classic.barbell_graph"]], "binomial_tree() (in module graphscope.nx.generators.classic)": [[174, "graphscope.nx.generators.classic.binomial_tree"]], "circulant_graph() (in module graphscope.nx.generators.classic)": [[175, "graphscope.nx.generators.classic.circulant_graph"]], "circular_ladder_graph() (in module graphscope.nx.generators.classic)": [[176, "graphscope.nx.generators.classic.circular_ladder_graph"]], "complete_graph() (in module graphscope.nx.generators.classic)": [[177, "graphscope.nx.generators.classic.complete_graph"]], "complete_multipartite_graph() (in module graphscope.nx.generators.classic)": [[178, "graphscope.nx.generators.classic.complete_multipartite_graph"]], "cycle_graph() (in module graphscope.nx.generators.classic)": [[179, "graphscope.nx.generators.classic.cycle_graph"]], "dorogovtsev_goltsev_mendes_graph() (in module graphscope.nx.generators.classic)": [[180, "graphscope.nx.generators.classic.dorogovtsev_goltsev_mendes_graph"]], "empty_graph() (in module graphscope.nx.generators.classic)": [[181, "graphscope.nx.generators.classic.empty_graph"]], "full_rary_tree() (in module graphscope.nx.generators.classic)": [[182, "graphscope.nx.generators.classic.full_rary_tree"]], "ladder_graph() (in module graphscope.nx.generators.classic)": [[183, "graphscope.nx.generators.classic.ladder_graph"]], "lollipop_graph() (in module graphscope.nx.generators.classic)": [[184, "graphscope.nx.generators.classic.lollipop_graph"]], "null_graph() (in module graphscope.nx.generators.classic)": [[185, "graphscope.nx.generators.classic.null_graph"]], "path_graph() (in module graphscope.nx.generators.classic)": [[186, "graphscope.nx.generators.classic.path_graph"]], "star_graph() (in module graphscope.nx.generators.classic)": [[187, "graphscope.nx.generators.classic.star_graph"]], "trivial_graph() (in module graphscope.nx.generators.classic)": [[188, "graphscope.nx.generators.classic.trivial_graph"]], "turan_graph() (in module graphscope.nx.generators.classic)": [[189, "graphscope.nx.generators.classic.turan_graph"]], "wheel_graph() (in module graphscope.nx.generators.classic)": [[190, "graphscope.nx.generators.classic.wheel_graph"]], "lfr_benchmark_graph() (in module graphscope.nx.generators.community)": [[191, "graphscope.nx.generators.community.LFR_benchmark_graph"]], "caveman_graph() (in module graphscope.nx.generators.community)": [[192, "graphscope.nx.generators.community.caveman_graph"]], "connected_caveman_graph() (in module graphscope.nx.generators.community)": [[193, "graphscope.nx.generators.community.connected_caveman_graph"]], "gaussian_random_partition_graph() (in module graphscope.nx.generators.community)": [[194, "graphscope.nx.generators.community.gaussian_random_partition_graph"]], "planted_partition_graph() (in module graphscope.nx.generators.community)": [[195, "graphscope.nx.generators.community.planted_partition_graph"]], "random_partition_graph() (in module graphscope.nx.generators.community)": [[196, "graphscope.nx.generators.community.random_partition_graph"]], "relaxed_caveman_graph() (in module graphscope.nx.generators.community)": [[197, "graphscope.nx.generators.community.relaxed_caveman_graph"]], "ring_of_cliques() (in module graphscope.nx.generators.community)": [[198, "graphscope.nx.generators.community.ring_of_cliques"]], "stochastic_block_model() (in module graphscope.nx.generators.community)": [[199, "graphscope.nx.generators.community.stochastic_block_model"]], "windmill_graph() (in module graphscope.nx.generators.community)": [[200, "graphscope.nx.generators.community.windmill_graph"]], "configuration_model() (in module graphscope.nx.generators.degree_seq)": [[201, "graphscope.nx.generators.degree_seq.configuration_model"]], "degree_sequence_tree() (in module graphscope.nx.generators.degree_seq)": [[202, "graphscope.nx.generators.degree_seq.degree_sequence_tree"]], "directed_configuration_model() (in module graphscope.nx.generators.degree_seq)": [[203, "graphscope.nx.generators.degree_seq.directed_configuration_model"]], "directed_havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[204, "graphscope.nx.generators.degree_seq.directed_havel_hakimi_graph"]], "expected_degree_graph() (in module graphscope.nx.generators.degree_seq)": [[205, "graphscope.nx.generators.degree_seq.expected_degree_graph"]], "havel_hakimi_graph() (in module graphscope.nx.generators.degree_seq)": [[206, "graphscope.nx.generators.degree_seq.havel_hakimi_graph"]], "random_degree_sequence_graph() (in module graphscope.nx.generators.degree_seq)": [[207, "graphscope.nx.generators.degree_seq.random_degree_sequence_graph"]], "gn_graph() (in module graphscope.nx.generators.directed)": [[208, "graphscope.nx.generators.directed.gn_graph"]], "gnc_graph() (in module graphscope.nx.generators.directed)": [[209, "graphscope.nx.generators.directed.gnc_graph"]], "gnr_graph() (in module graphscope.nx.generators.directed)": [[210, "graphscope.nx.generators.directed.gnr_graph"]], "random_k_out_graph() (in module graphscope.nx.generators.directed)": [[211, "graphscope.nx.generators.directed.random_k_out_graph"]], "scale_free_graph() (in module graphscope.nx.generators.directed)": [[212, "graphscope.nx.generators.directed.scale_free_graph"]], "duplication_divergence_graph() (in module graphscope.nx.generators.duplication)": [[213, "graphscope.nx.generators.duplication.duplication_divergence_graph"]], "partial_duplication_graph() (in module graphscope.nx.generators.duplication)": [[214, "graphscope.nx.generators.duplication.partial_duplication_graph"]], "ego_graph() (in module graphscope.nx.generators.ego)": [[215, "graphscope.nx.generators.ego.ego_graph"]], "chordal_cycle_graph() (in module graphscope.nx.generators.expanders)": [[216, "graphscope.nx.generators.expanders.chordal_cycle_graph"]], "margulis_gabber_galil_graph() (in module graphscope.nx.generators.expanders)": [[217, "graphscope.nx.generators.expanders.margulis_gabber_galil_graph"]], "paley_graph() (in module graphscope.nx.generators.expanders)": [[218, "graphscope.nx.generators.expanders.paley_graph"]], "geographical_threshold_graph() (in module graphscope.nx.generators.geometric)": [[219, "graphscope.nx.generators.geometric.geographical_threshold_graph"]], "random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[220, "graphscope.nx.generators.geometric.random_geometric_graph"]], "soft_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[221, "graphscope.nx.generators.geometric.soft_random_geometric_graph"]], "thresholded_random_geometric_graph() (in module graphscope.nx.generators.geometric)": [[222, "graphscope.nx.generators.geometric.thresholded_random_geometric_graph"]], "waxman_graph() (in module graphscope.nx.generators.geometric)": [[223, "graphscope.nx.generators.geometric.waxman_graph"]], "hkn_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[224, "graphscope.nx.generators.harary_graph.hkn_harary_graph"]], "hnm_harary_graph() (in module graphscope.nx.generators.harary_graph)": [[225, "graphscope.nx.generators.harary_graph.hnm_harary_graph"]], "general_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[226, "graphscope.nx.generators.intersection.general_random_intersection_graph"]], "k_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[227, "graphscope.nx.generators.intersection.k_random_intersection_graph"]], "uniform_random_intersection_graph() (in module graphscope.nx.generators.intersection)": [[228, "graphscope.nx.generators.intersection.uniform_random_intersection_graph"]], "directed_joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[229, "graphscope.nx.generators.joint_degree_seq.directed_joint_degree_graph"]], "is_valid_directed_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[230, "graphscope.nx.generators.joint_degree_seq.is_valid_directed_joint_degree"]], "is_valid_joint_degree() (in module graphscope.nx.generators.joint_degree_seq)": [[231, "graphscope.nx.generators.joint_degree_seq.is_valid_joint_degree"]], "joint_degree_graph() (in module graphscope.nx.generators.joint_degree_seq)": [[232, "graphscope.nx.generators.joint_degree_seq.joint_degree_graph"]], "mycielski_graph() (in module graphscope.nx.generators.mycielski)": [[233, "graphscope.nx.generators.mycielski.mycielski_graph"]], "mycielskian() (in module graphscope.nx.generators.mycielski)": [[234, "graphscope.nx.generators.mycielski.mycielskian"]], "nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[235, "graphscope.nx.generators.nonisomorphic_trees.nonisomorphic_trees"]], "number_of_nonisomorphic_trees() (in module graphscope.nx.generators.nonisomorphic_trees)": [[236, "graphscope.nx.generators.nonisomorphic_trees.number_of_nonisomorphic_trees"]], "lcf_graph() (in module graphscope.nx.generators.small)": [[237, "graphscope.nx.generators.small.LCF_graph"]], "bull_graph() (in module graphscope.nx.generators.small)": [[238, "graphscope.nx.generators.small.bull_graph"]], "chvatal_graph() (in module graphscope.nx.generators.small)": [[239, "graphscope.nx.generators.small.chvatal_graph"]], "cubical_graph() (in module graphscope.nx.generators.small)": [[240, "graphscope.nx.generators.small.cubical_graph"]], "desargues_graph() (in module graphscope.nx.generators.small)": [[241, "graphscope.nx.generators.small.desargues_graph"]], "diamond_graph() (in module graphscope.nx.generators.small)": [[242, "graphscope.nx.generators.small.diamond_graph"]], "dodecahedral_graph() (in module graphscope.nx.generators.small)": [[243, "graphscope.nx.generators.small.dodecahedral_graph"]], "frucht_graph() (in module graphscope.nx.generators.small)": [[244, "graphscope.nx.generators.small.frucht_graph"]], "heawood_graph() (in module graphscope.nx.generators.small)": [[245, "graphscope.nx.generators.small.heawood_graph"]], "house_graph() (in module graphscope.nx.generators.small)": [[246, "graphscope.nx.generators.small.house_graph"]], "house_x_graph() (in module graphscope.nx.generators.small)": [[247, "graphscope.nx.generators.small.house_x_graph"]], "icosahedral_graph() (in module graphscope.nx.generators.small)": [[248, "graphscope.nx.generators.small.icosahedral_graph"]], "krackhardt_kite_graph() (in module graphscope.nx.generators.small)": [[249, "graphscope.nx.generators.small.krackhardt_kite_graph"]], "make_small_graph() (in module graphscope.nx.generators.small)": [[250, "graphscope.nx.generators.small.make_small_graph"]], "moebius_kantor_graph() (in module graphscope.nx.generators.small)": [[251, "graphscope.nx.generators.small.moebius_kantor_graph"]], "octahedral_graph() (in module graphscope.nx.generators.small)": [[252, "graphscope.nx.generators.small.octahedral_graph"]], "pappus_graph() (in module graphscope.nx.generators.small)": [[253, "graphscope.nx.generators.small.pappus_graph"]], "petersen_graph() (in module graphscope.nx.generators.small)": [[254, "graphscope.nx.generators.small.petersen_graph"]], "sedgewick_maze_graph() (in module graphscope.nx.generators.small)": [[255, "graphscope.nx.generators.small.sedgewick_maze_graph"]], "tetrahedral_graph() (in module graphscope.nx.generators.small)": [[256, "graphscope.nx.generators.small.tetrahedral_graph"]], "truncated_cube_graph() (in module graphscope.nx.generators.small)": [[257, "graphscope.nx.generators.small.truncated_cube_graph"]], "truncated_tetrahedron_graph() (in module graphscope.nx.generators.small)": [[258, "graphscope.nx.generators.small.truncated_tetrahedron_graph"]], "tutte_graph() (in module graphscope.nx.generators.small)": [[259, "graphscope.nx.generators.small.tutte_graph"]], "davis_southern_women_graph() (in module graphscope.nx.generators.social)": [[260, "graphscope.nx.generators.social.davis_southern_women_graph"]], "florentine_families_graph() (in module graphscope.nx.generators.social)": [[261, "graphscope.nx.generators.social.florentine_families_graph"]], "karate_club_graph() (in module graphscope.nx.generators.social)": [[262, "graphscope.nx.generators.social.karate_club_graph"]], "les_miserables_graph() (in module graphscope.nx.generators.social)": [[263, "graphscope.nx.generators.social.les_miserables_graph"]], "spectral_graph_forge() (in module graphscope.nx.generators.spectral_graph_forge)": [[264, "graphscope.nx.generators.spectral_graph_forge.spectral_graph_forge"]], "sudoku_graph() (in module graphscope.nx.generators.sudoku)": [[265, "graphscope.nx.generators.sudoku.sudoku_graph"]], "prefix_tree() (in module graphscope.nx.generators.trees)": [[266, "graphscope.nx.generators.trees.prefix_tree"]], "random_tree() (in module graphscope.nx.generators.trees)": [[267, "graphscope.nx.generators.trees.random_tree"]], "triad_graph() (in module graphscope.nx.generators.triads)": [[268, "graphscope.nx.generators.triads.triad_graph"]], "random_internet_as_graph() (in module networkx.generators.internet_as_graphs)": [[269, "networkx.generators.internet_as_graphs.random_internet_as_graph"]], "stochastic_graph() (in module networkx.generators.stochastic)": [[270, "networkx.generators.stochastic.stochastic_graph"]], "graphscope.nx.generators.atlas": [[271, "module-graphscope.nx.generators.atlas"]], "graphscope.nx.generators.classic": [[271, "module-graphscope.nx.generators.classic"]], "graphscope.nx.generators.community": [[271, "module-graphscope.nx.generators.community"]], "graphscope.nx.generators.degree_seq": [[271, "module-graphscope.nx.generators.degree_seq"]], "graphscope.nx.generators.directed": [[271, "module-graphscope.nx.generators.directed"]], "graphscope.nx.generators.duplication": [[271, "module-graphscope.nx.generators.duplication"]], "graphscope.nx.generators.ego": [[271, "module-graphscope.nx.generators.ego"]], "graphscope.nx.generators.expanders": [[271, "module-graphscope.nx.generators.expanders"]], "graphscope.nx.generators.geometric": [[271, "module-graphscope.nx.generators.geometric"]], "graphscope.nx.generators.harary_graph": [[271, "module-graphscope.nx.generators.harary_graph"]], "graphscope.nx.generators.intersection": [[271, "module-graphscope.nx.generators.intersection"]], "graphscope.nx.generators.joint_degree_seq": [[271, "module-graphscope.nx.generators.joint_degree_seq"]], "graphscope.nx.generators.mycielski": [[271, "module-graphscope.nx.generators.mycielski"]], "graphscope.nx.generators.nonisomorphic_trees": [[271, "module-graphscope.nx.generators.nonisomorphic_trees"]], "graphscope.nx.generators.small": [[271, "module-graphscope.nx.generators.small"]], "graphscope.nx.generators.social": [[271, "module-graphscope.nx.generators.social"]], "graphscope.nx.generators.spectral_graph_forge": [[271, "module-graphscope.nx.generators.spectral_graph_forge"]], "graphscope.nx.generators.sudoku": [[271, "module-graphscope.nx.generators.sudoku"]], "graphscope.nx.generators.trees": [[271, "module-graphscope.nx.generators.trees"]], "graphscope.nx.generators.triads": [[271, "module-graphscope.nx.generators.triads"]], "networkx.generators.internet_as_graphs": [[271, "module-networkx.generators.internet_as_graphs"]], "networkx.generators.stochastic": [[271, "module-networkx.generators.stochastic"]], "digraph (class in graphscope.nx)": [[272, "graphscope.nx.DiGraph"]], "graph (class in graphscope.nx)": [[272, "graphscope.nx.Graph"]], "__contains__() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.__contains__"]], "__contains__() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.__contains__"]], "__getitem__() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.__getitem__"]], "__getitem__() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.__getitem__"]], "__init__() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.__init__"]], "__init__() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.__init__"]], "__iter__() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.__iter__"]], "__iter__() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.__iter__"]], "__len__() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.__len__"]], "__len__() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.__len__"]], "add_edge() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.add_edge"]], "add_edge() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.add_edge"]], "add_edges_from() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.add_edges_from"]], "add_edges_from() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.add_edges_from"]], "add_node() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.add_node"]], "add_node() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.add_node"]], "add_nodes_from() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.add_nodes_from"]], "add_nodes_from() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.add_nodes_from"]], "add_weighted_edges_from() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.add_weighted_edges_from"]], "add_weighted_edges_from() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.add_weighted_edges_from"]], "adj (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.adj"]], "adj (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.adj"]], "adjacency() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.adjacency"]], "adjacency() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.adjacency"]], "adjlist_inner_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.adjlist_inner_dict_factory"]], "adjlist_inner_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.adjlist_inner_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.adjlist_outer_dict_factory"]], "adjlist_outer_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.adjlist_outer_dict_factory"]], "clear() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.clear"]], "clear() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.clear"]], "clear_edges() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.clear_edges"]], "clear_edges() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.clear_edges"]], "copy() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.copy"]], "copy() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.copy"]], "degree (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.degree"]], "degree (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.degree"]], "edge_attr_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.edge_attr_dict_factory"]], "edge_attr_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.edge_attr_dict_factory"]], "edge_subgraph() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.edge_subgraph"]], "edge_subgraph() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.edge_subgraph"]], "edges (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.edges"]], "edges (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.edges"]], "get_edge_data() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.get_edge_data"]], "get_edge_data() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.get_edge_data"]], "graph_attr_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.graph_attr_dict_factory"]], "graph_attr_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.graph_attr_dict_factory"]], "graph_cache_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.graph_cache_factory"]], "graph_cache_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.graph_cache_factory"]], "graph_type (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.graph_type"]], "graph_type (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.graph_type"]], "has_edge() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.has_edge"]], "has_edge() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.has_edge"]], "has_node() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.has_node"]], "has_node() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.has_node"]], "has_predecessor() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.has_predecessor"]], "has_successor() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.has_successor"]], "in_degree (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.in_degree"]], "in_edges (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.in_edges"]], "is_directed() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.is_directed"]], "is_directed() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.is_directed"]], "is_multigraph() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.is_multigraph"]], "is_multigraph() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.is_multigraph"]], "key (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.key"]], "key (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.key"]], "name (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.name"]], "name (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.name"]], "nbunch_iter() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.nbunch_iter"]], "nbunch_iter() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.nbunch_iter"]], "neighbors() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.neighbors"]], "neighbors() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.neighbors"]], "node_attr_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.node_attr_dict_factory"]], "node_attr_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.node_attr_dict_factory"]], "node_dict_factory (graphscope.nx.digraph attribute)": [[272, "graphscope.nx.DiGraph.node_dict_factory"]], "node_dict_factory (graphscope.nx.graph attribute)": [[272, "graphscope.nx.Graph.node_dict_factory"]], "nodes (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.nodes"]], "nodes (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.nodes"]], "number_of_edges() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.number_of_edges"]], "number_of_edges() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.number_of_edges"]], "number_of_nodes() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.number_of_nodes"]], "number_of_nodes() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.number_of_nodes"]], "op (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.op"]], "op (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.op"]], "order() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.order"]], "order() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.order"]], "out_degree (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.out_degree"]], "out_edges (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.out_edges"]], "pred (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.pred"]], "predecessors() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.predecessors"]], "remove_edge() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.remove_edge"]], "remove_edge() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.remove_edge"]], "remove_edges_from() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.remove_edges_from"]], "remove_edges_from() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.remove_edges_from"]], "remove_node() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.remove_node"]], "remove_node() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.remove_node"]], "remove_nodes_from() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.remove_nodes_from"]], "remove_nodes_from() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.remove_nodes_from"]], "reverse() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.reverse"]], "schema (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.schema"]], "schema (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.schema"]], "session (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.session"]], "session (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.session"]], "session_id (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.session_id"]], "session_id (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.session_id"]], "set_edge_data() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.set_edge_data"]], "set_edge_data() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.set_edge_data"]], "set_node_data() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.set_node_data"]], "set_node_data() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.set_node_data"]], "signature (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.signature"]], "signature (graphscope.nx.graph property)": [[272, "graphscope.nx.Graph.signature"]], "size() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.size"]], "size() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.size"]], "subgraph() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.subgraph"]], "subgraph() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.subgraph"]], "succ (graphscope.nx.digraph property)": [[272, "graphscope.nx.DiGraph.succ"]], "successors() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.successors"]], "to_directed() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.to_directed"]], "to_directed() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.to_directed"]], "to_undirected() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.to_undirected"]], "to_undirected() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.to_undirected"]], "to_undirected_class() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.to_undirected_class"]], "to_undirected_class() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.to_undirected_class"]], "update() (graphscope.nx.digraph method)": [[272, "graphscope.nx.DiGraph.update"]], "update() (graphscope.nx.graph method)": [[272, "graphscope.nx.Graph.update"]], "read_adjlist() (in module graphscope.nx)": [[274, "graphscope.nx.read_adjlist"]], "read_edgelist() (in module graphscope.nx)": [[274, "graphscope.nx.read_edgelist"]], "__init__() (in module graphscope.nx.graph)": [[275, "graphscope.nx.Graph.__init__"]], "_convert_arrow_to_dynamic() (in module graphscope.nx.graph)": [[275, "graphscope.nx.Graph._convert_arrow_to_dynamic"]], "operation (class in graphscope.framework.operation)": [[276, "graphscope.framework.operation.Operation"]], "graphscope.framework.dag_utils": [[276, "module-graphscope.framework.dag_utils"]], "session (class in graphscope)": [[279, "graphscope.Session"]], "__enter__() (graphscope.session method)": [[279, "graphscope.Session.__enter__"]], "__exit__() (graphscope.session method)": [[279, "graphscope.Session.__exit__"]], "__init__() (graphscope.session method)": [[279, "graphscope.Session.__init__"]], "add_lib() (graphscope.session method)": [[279, "graphscope.Session.add_lib"]], "as_default() (graphscope.session method)": [[279, "graphscope.Session.as_default"]], "close() (graphscope.session method)": [[279, "graphscope.Session.close"]], "connected() (graphscope.session method)": [[279, "graphscope.Session.connected"]], "engine_config (graphscope.session property)": [[279, "graphscope.Session.engine_config"]], "get_config() (graphscope.session method)": [[279, "graphscope.Session.get_config"]], "graphlearn() (graphscope.session method)": [[279, "graphscope.Session.graphlearn"]], "gremlin() (graphscope.session method)": [[279, "graphscope.Session.gremlin"]], "info (graphscope.session property)": [[279, "graphscope.Session.info"]], "learning() (graphscope.session method)": [[279, "graphscope.Session.learning"]], "load_from() (graphscope.session method)": [[279, "graphscope.Session.load_from"]], "run_fetches() (graphscope.session method)": [[279, "graphscope.Session.run_fetches"]]}})